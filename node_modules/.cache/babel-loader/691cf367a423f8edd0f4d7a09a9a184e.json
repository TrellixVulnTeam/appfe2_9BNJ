{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_USERS, GET_USER_PROFILE, ADD_NEW_USER, DELETE_USER, UPDATE_USER } from \"./actionTypes\";\nimport { getUsersSuccess, getUsersFail, getUserProfileSuccess, getUserProfileFail, addUserFail, addUserSuccess, updateUserSuccess, updateUserFail, deleteUserSuccess, deleteUserFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getUsers, getUserProfile, addNewUser, updateUser, deleteUser } from \"../../helpers/fakebackend_helper\";\n\nfunction* fetchUsers() {\n  try {\n    const response = yield call(getUsers);\n    yield put(getUsersSuccess(response));\n  } catch (error) {\n    yield put(getUsersFail(error));\n  }\n}\n\nfunction* fetchUserProfile() {\n  try {\n    const response = yield call(getUserProfile);\n    yield put(getUserProfileSuccess(response));\n  } catch (error) {\n    yield put(getUserProfileFail(error));\n  }\n}\n\nfunction* onUpdateUser(_ref) {\n  let {\n    payload: user\n  } = _ref;\n\n  try {\n    const response = yield call(updateUser, user);\n    yield put(updateUserSuccess(response));\n  } catch (error) {\n    yield put(updateUserFail(error));\n  }\n}\n\nfunction* onDeleteUser(_ref2) {\n  let {\n    payload: user\n  } = _ref2;\n\n  try {\n    const response = yield call(deleteUser, user);\n    yield put(deleteUserSuccess(response));\n  } catch (error) {\n    yield put(deleteUserFail(error));\n  }\n}\n\nfunction* onAddNewUser(_ref3) {\n  let {\n    payload: user\n  } = _ref3;\n\n  try {\n    const response = yield call(addNewUser, user);\n    yield put(addUserSuccess(response));\n  } catch (error) {\n    yield put(addUserFail(error));\n  }\n}\n\nfunction* contactsSaga() {\n  yield takeEvery(GET_USERS, fetchUsers);\n  yield takeEvery(GET_USER_PROFILE, fetchUserProfile);\n  yield takeEvery(ADD_NEW_USER, onAddNewUser);\n  yield takeEvery(UPDATE_USER, onUpdateUser);\n  yield takeEvery(DELETE_USER, onDeleteUser);\n}\n\nexport default contactsSaga;","map":{"version":3,"sources":["D:/React_Code/Skote_React_v3.3.1/Admin-Hooks-Staterkit/src/store/contacts/saga.js"],"names":["call","put","takeEvery","GET_USERS","GET_USER_PROFILE","ADD_NEW_USER","DELETE_USER","UPDATE_USER","getUsersSuccess","getUsersFail","getUserProfileSuccess","getUserProfileFail","addUserFail","addUserSuccess","updateUserSuccess","updateUserFail","deleteUserSuccess","deleteUserFail","getUsers","getUserProfile","addNewUser","updateUser","deleteUser","fetchUsers","response","error","fetchUserProfile","onUpdateUser","payload","user","onDeleteUser","onAddNewUser","contactsSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAuCC,YAAvC,EAAsDC,WAAtD,EAAmEC,WAAnE,QAAsF,eAAtF;AAEA,SACEC,eADF,EAEEC,YAFF,EAGEC,qBAHF,EAIEC,kBAJF,EAKEC,WALF,EAMEC,cANF,EAOEC,iBAPF,EAQEC,cARF,EASEC,iBATF,EAUEC,cAVF,QAWO,WAXP,C,CAaA;;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAoCC,UAApC,EAAgDC,UAAhD,EAA4DC,UAA5D,QAA8E,kCAA9E;;AAEA,UAAUC,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMxB,IAAI,CAACkB,QAAD,CAA3B;AACA,UAAMjB,GAAG,CAACO,eAAe,CAACgB,QAAD,CAAhB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACQ,YAAY,CAACgB,KAAD,CAAb,CAAT;AACD;AACF;;AAED,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAMF,QAAQ,GAAG,MAAMxB,IAAI,CAACmB,cAAD,CAA3B;AACA,UAAMlB,GAAG,CAACS,qBAAqB,CAACc,QAAD,CAAtB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACU,kBAAkB,CAACc,KAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUE,YAAV,OAA0C;AAAA,MAAnB;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAmB;;AACxC,MAAI;AACF,UAAML,QAAQ,GAAG,MAAMxB,IAAI,CAACqB,UAAD,EAAaQ,IAAb,CAA3B;AACA,UAAM5B,GAAG,CAACa,iBAAiB,CAACU,QAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACc,cAAc,CAACU,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUK,YAAV,QAA0C;AAAA,MAAnB;AAAEF,IAAAA,OAAO,EAAEC;AAAX,GAAmB;;AACxC,MAAI;AACF,UAAML,QAAQ,GAAG,MAAMxB,IAAI,CAACsB,UAAD,EAAaO,IAAb,CAA3B;AACA,UAAM5B,GAAG,CAACe,iBAAiB,CAACQ,QAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACgB,cAAc,CAACQ,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUM,YAAV,QAA0C;AAAA,MAAnB;AAAEH,IAAAA,OAAO,EAAEC;AAAX,GAAmB;;AAExC,MAAI;AACF,UAAML,QAAQ,GAAG,MAAMxB,IAAI,CAACoB,UAAD,EAAaS,IAAb,CAA3B;AAEA,UAAM5B,GAAG,CAACY,cAAc,CAACW,QAAD,CAAf,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AAEd,UAAMxB,GAAG,CAACW,WAAW,CAACa,KAAD,CAAZ,CAAT;AACD;AACF;;AAED,UAAUO,YAAV,GAAyB;AACvB,QAAM9B,SAAS,CAACC,SAAD,EAAYoB,UAAZ,CAAf;AACA,QAAMrB,SAAS,CAACE,gBAAD,EAAmBsB,gBAAnB,CAAf;AACA,QAAMxB,SAAS,CAACG,YAAD,EAAe0B,YAAf,CAAf;AACA,QAAM7B,SAAS,CAACK,WAAD,EAAcoB,YAAd,CAAf;AACA,QAAMzB,SAAS,CAACI,WAAD,EAAcwB,YAAd,CAAf;AACD;;AAED,eAAeE,YAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { GET_USERS, GET_USER_PROFILE , ADD_NEW_USER , DELETE_USER, UPDATE_USER } from \"./actionTypes\"\n\nimport {\n  getUsersSuccess,\n  getUsersFail,\n  getUserProfileSuccess,\n  getUserProfileFail,\n  addUserFail,\n  addUserSuccess,\n  updateUserSuccess,\n  updateUserFail,\n  deleteUserSuccess,\n  deleteUserFail,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getUsers, getUserProfile , addNewUser, updateUser ,deleteUser } from \"../../helpers/fakebackend_helper\"\n\nfunction* fetchUsers() {\n  try {\n    const response = yield call(getUsers)\n    yield put(getUsersSuccess(response))\n  } catch (error) {\n    yield put(getUsersFail(error))\n  }\n}\n\nfunction* fetchUserProfile() {\n  try {\n    const response = yield call(getUserProfile)\n    yield put(getUserProfileSuccess(response))\n  } catch (error) {\n    yield put(getUserProfileFail(error))\n  }\n}\n\nfunction* onUpdateUser({ payload: user }) {\n  try {\n    const response = yield call(updateUser, user)\n    yield put(updateUserSuccess(response))\n  } catch (error) {\n    yield put(updateUserFail(error))\n  }\n}\n\nfunction* onDeleteUser({ payload: user }) {\n  try {\n    const response = yield call(deleteUser, user)\n    yield put(deleteUserSuccess(response))\n  } catch (error) {\n    yield put(deleteUserFail(error))\n  }\n}\n\nfunction* onAddNewUser({ payload: user }) {\n\n  try {\n    const response = yield call(addNewUser, user)\n\n    yield put(addUserSuccess(response))\n  } catch (error) {\n\n    yield put(addUserFail(error))\n  }\n}\n\nfunction* contactsSaga() {\n  yield takeEvery(GET_USERS, fetchUsers)\n  yield takeEvery(GET_USER_PROFILE, fetchUserProfile)\n  yield takeEvery(ADD_NEW_USER, onAddNewUser)\n  yield takeEvery(UPDATE_USER, onUpdateUser)\n  yield takeEvery(DELETE_USER, onDeleteUser)\n}\n\nexport default contactsSaga;\n"]},"metadata":{},"sourceType":"module"}