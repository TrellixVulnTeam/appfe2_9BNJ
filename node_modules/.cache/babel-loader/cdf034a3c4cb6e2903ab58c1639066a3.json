{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Code\\\\korindo_proj\\\\appfe\\\\src\\\\helpers\\\\TabelHelper\\\\CustomTabel.js\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomTabel = props => {\n  const {\n    key,\n    data,\n    columns,\n    page,\n    totalSize,\n    handleTableChange\n  } = props;\n  return /*#__PURE__*/_jsxDEV(BootstrapTable, {\n    keyField: key,\n    remote: true,\n    data: data,\n    columns: columns,\n    pagination: paginationFactory({\n      page,\n      sizePerPage: 10,\n      sizePerPageList: [],\n      totalSize\n    }),\n    onTableChange: handleTableChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CustomTabel;\nexport default CustomTabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTabel\");","map":{"version":3,"sources":["D:/React_Code/korindo_proj/appfe/src/helpers/TabelHelper/CustomTabel.js"],"names":["BootstrapTable","paginationFactory","CustomTabel","props","key","data","columns","page","totalSize","handleTableChange","sizePerPage","sizePerPageList"],"mappings":";AACA,OAAOA,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA,SAA3B;AAAsCC,IAAAA;AAAtC,MAA4DN,KAAlE;AAEA,sBACI,QAAC,cAAD;AACI,IAAA,QAAQ,EAAGC,GADf;AAEI,IAAA,MAAM,MAFV;AAGI,IAAA,IAAI,EAAGC,IAHX;AAII,IAAA,OAAO,EAAIC,OAJf;AAKI,IAAA,UAAU,EAAIL,iBAAiB,CAAE;AAC7BM,MAAAA,IAD6B;AAE7BG,MAAAA,WAAW,EAAG,EAFe;AAG7BC,MAAAA,eAAe,EAAG,EAHW;AAI7BH,MAAAA;AAJ6B,KAAF,CALnC;AAWI,IAAA,aAAa,EAAIC;AAXrB;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAnBD;;KAAMP,W;AAqBN,eAAeA,WAAf","sourcesContent":["\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst CustomTabel = (props) => {\r\n\r\n    const {key, data, columns, page, totalSize, handleTableChange } = props;\r\n\r\n    return (\r\n        <BootstrapTable\r\n            keyField= {key}\r\n            remote\r\n            data= {data}\r\n            columns = {columns}\r\n            pagination = {paginationFactory ({\r\n                page,\r\n                sizePerPage : 10,\r\n                sizePerPageList : [],\r\n                totalSize\r\n            })}\r\n            onTableChange = {handleTableChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CustomTabel;"]},"metadata":{},"sourceType":"module"}