{"ast":null,"code":"var _jsxFileName = \"D:\\\\korindo_proj\\\\appfe\\\\src\\\\pages\\\\Entrydata\\\\EntryData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from \"react\";\nimport MetaTags from 'react-meta-tags';\nimport { useDispatch } from \"react-redux\";\nimport axios from 'axios';\nimport fetchUploadData from \"../../store/entrydata/saga\";\nimport { Row, Col, Card, CardBody, FormGroup, Button, Label, Input, Container, FormFeedback, Form, Spinner } from \"reactstrap\"; // Formik validation\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"; //SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport * as actionType from \"../../store/entrydata/actionTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EntryData = props => {\n  _s();\n\n  const [custom_div1, setcustom_div1] = useState(false);\n  const [disableButton, setDisableButton] = useState(false);\n  const [visibleSpinner, setVisibleSpinner] = useState(false);\n  const {\n    state,\n    handleAddPost,\n    handleStateChange\n  } = props;\n  const rangeValidation = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      max_L_kdUser: '',\n      max_L_nmUser: '',\n      max_L_poc: 'POC AHM',\n      max_L_file: ''\n    },\n    validationSchema: Yup.object().shape({\n      max_L_kdUser: Yup.string().max(3, \"Must be exactly 3 chars\").required(\"Max 3 chars\"),\n      max_L_nmUser: Yup.string().max(5, \"Must be exactly 5 chars\").required(\"Max 5 chars\"),\n      max_L_file: Yup.string().required(\"File is Required\")\n    })\n    /* onSubmit: (values) => {\r\n      console.log(\"Proses Submite\");\r\n      setDisableButton(true);\r\n      setVisibleSpinner(true);\r\n      var bodyFormData = new FormData();\r\n      bodyFormData.append('file', values.max_L_file);\r\n      bodyFormData.append('poc', values.max_L_poc);\r\n      bodyFormData.append('userId', values.max_L_kdUser);\r\n      bodyFormData.append('userNm', values.max_L_nmUser);\r\n      axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:9002/app/\" + \"app001/upload\",\r\n        data: bodyFormData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n        .then(function (response) {\r\n          //handle success\r\n          if (response.data.message = 1) {\r\n            setcustom_div1(true);\r\n            rangeValidation.setValues({ \"max_L_kdUser\": \"\", \"max_L_nmUser\": \"\", max_L_poc: 'POC AHM' });\r\n            document.getElementById(\"idFileUpload\").value = \"\";\r\n          }\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n        })\r\n        .catch(function (response) {\r\n          //handle error\r\n          console.log(response);\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n          alert(\"Error Request Data\");\r\n          });\r\n    } */\n\n  });\n  const initialTutorialState = {\n    file: null,\n    poc: \"\",\n    userId: \"\",\n    userNm: \"\"\n  };\n  const [tutorial, setTutorial] = useState(initialTutorialState);\n  const [submitted, setSubmitted] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setTutorial({ ...tutorial,\n      [name]: value\n    });\n  };\n\n  const saveData = () => {\n    const {\n      file,\n      poc,\n      userId,\n      userNm\n    } = tutorial;\n    dispatch(fetchUploadData({\n      file,\n      poc,\n      userId,\n      userNm\n    })).unwrap().then(data => {\n      console.log(data);\n      setTutorial({\n        file: data.file,\n        poc: data.poc,\n        userId: data.userId,\n        userNm: data.userNm\n      });\n      setSubmitted(true);\n    }).catch(e => {\n      console.log(data.file);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Korindo App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Forms\",\n          breadcrumbItem: \"Entry data marking & upload foto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    rangeValidation.handleSubmit();\n                    return false;\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-2\",\n                    children: [custom_div1 ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n                      title: \"Success Entry Data\",\n                      timeout: 2000,\n                      style: {\n                        position: \"absolute\",\n                        top: \"0px\",\n                        right: \"0px\"\n                      },\n                      showCloseButton: false,\n                      showConfirm: false,\n                      success: true,\n                      onConfirm: () => {\n                        setcustom_div1(false);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 25\n                    }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n                      children: \"POC AHM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_poc\",\n                      type: \"text\",\n                      disabled: true,\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_poc || \"\",\n                      invalid: rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_poc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Kode User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_kdUser\",\n                      placeholder: \"Max 3 chars\",\n                      type: \"text\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_kdUser || \"\",\n                      invalid: rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_kdUser\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Nama User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_nmUser\",\n                      placeholder: \"Max 5 chars\",\n                      type: \"text\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_nmUser || \"\",\n                      invalid: rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_nmUser\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Upload File\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"idFileUpload\",\n                      name: \"max_L_file\",\n                      type: \"file\",\n                      accept: \"image/*\",\n                      onChange: e => rangeValidation.setFieldValue(\"max_L_file\", e.target.files[0]),\n                      invalid: rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_file\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        disabled: disableButton,\n                        onClick: saveData,\n                        type: \"submit\",\n                        color: \"primary\",\n                        className: \"ms-1\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n                      style: {\n                        display: visibleSpinner ? \"block\" : \"none\",\n                        marginTop: '-35px'\n                      },\n                      className: \"ms-4\",\n                      color: \"danger\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EntryData, \"uoxpl0myUsu20ZFjUPbK/SXYVVc=\", false, function () {\n  return [useFormik, useDispatch];\n});\n\n_c = EntryData;\nexport default EntryData;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryData\");","map":{"version":3,"sources":["D:/korindo_proj/appfe/src/pages/Entrydata/EntryData.js"],"names":["React","useState","useReducer","MetaTags","useDispatch","axios","fetchUploadData","Row","Col","Card","CardBody","FormGroup","Button","Label","Input","Container","FormFeedback","Form","Spinner","Yup","useFormik","Breadcrumbs","SweetAlert","actionType","EntryData","props","custom_div1","setcustom_div1","disableButton","setDisableButton","visibleSpinner","setVisibleSpinner","state","handleAddPost","handleStateChange","rangeValidation","enableReinitialize","initialValues","max_L_kdUser","max_L_nmUser","max_L_poc","max_L_file","validationSchema","object","shape","string","max","required","initialTutorialState","file","poc","userId","userNm","tutorial","setTutorial","submitted","setSubmitted","dispatch","handleInputChange","event","name","value","target","saveData","unwrap","then","data","console","log","catch","e","preventDefault","handleSubmit","position","top","right","handleChange","handleBlur","values","touched","errors","setFieldValue","files","display","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\r\nimport MetaTags from 'react-meta-tags';\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from 'axios';\r\nimport fetchUploadData from \"../../store/entrydata/saga\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  FormFeedback,\r\n  Form,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n// Formik validation\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\n\r\n//SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nimport * as actionType from \"../../store/entrydata/actionTypes\";\r\n\r\nconst EntryData = (props) => {\r\n  const [custom_div1, setcustom_div1] = useState(false)\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const [visibleSpinner, setVisibleSpinner] = useState(false);\r\n\r\n  const { state, handleAddPost, handleStateChange } = props;\r\n\r\n  const rangeValidation = useFormik({\r\n    enableReinitialize: true,\r\n\r\n    initialValues: {\r\n      max_L_kdUser: '',\r\n      max_L_nmUser: '',\r\n      max_L_poc: 'POC AHM',\r\n      max_L_file: '',\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      max_L_kdUser: Yup.string()\r\n        .max(3, \"Must be exactly 3 chars\")\r\n        .required(\"Max 3 chars\"),\r\n      max_L_nmUser: Yup.string()\r\n        .max(5, \"Must be exactly 5 chars\")\r\n        .required(\"Max 5 chars\"),\r\n      max_L_file: Yup.string()\r\n        .required(\"File is Required\"),\r\n    }),\r\n\r\n    /* onSubmit: (values) => {\r\n      console.log(\"Proses Submite\");\r\n      setDisableButton(true);\r\n      setVisibleSpinner(true);\r\n      var bodyFormData = new FormData();\r\n      bodyFormData.append('file', values.max_L_file);\r\n      bodyFormData.append('poc', values.max_L_poc);\r\n      bodyFormData.append('userId', values.max_L_kdUser);\r\n      bodyFormData.append('userNm', values.max_L_nmUser);\r\n      axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:9002/app/\" + \"app001/upload\",\r\n        data: bodyFormData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n        .then(function (response) {\r\n          //handle success\r\n          if (response.data.message = 1) {\r\n            setcustom_div1(true);\r\n            rangeValidation.setValues({ \"max_L_kdUser\": \"\", \"max_L_nmUser\": \"\", max_L_poc: 'POC AHM' });\r\n            document.getElementById(\"idFileUpload\").value = \"\";\r\n          }\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n        })\r\n        .catch(function (response) {\r\n          //handle error\r\n          console.log(response);\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n          alert(\"Error Request Data\");\r\n\r\n        });\r\n    } */\r\n  });\r\n\r\n  const initialTutorialState = {\r\n    file: null,\r\n    poc: \"\",\r\n    userId: \"\",\r\n    userNm: \"\"\r\n  };\r\n\r\n  const [tutorial, setTutorial] = useState(initialTutorialState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setTutorial({ ...tutorial, [name]: value });\r\n  };\r\n\r\n  const saveData = () => {\r\n    const { file, poc, userId, userNm } = tutorial;\r\n\r\n    dispatch(fetchUploadData({ file, poc, userId, userNm }))\r\n      .unwrap()\r\n      .then(data => {\r\n        console.log(data);\r\n        setTutorial({\r\n          file: data.file,\r\n          poc: data.poc,\r\n          userId: data.userId,\r\n          userNm: data.userNm\r\n        });\r\n        setSubmitted(true);\r\n      })\r\n      .catch(e => {\r\n        console.log(data.file);\r\n      });\r\n\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <MetaTags>\r\n          <title>\r\n            Korindo App\r\n          </title>\r\n        </MetaTags>\r\n        <Container fluid={true}>\r\n          <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Entry data marking & upload foto\" />\r\n\r\n          <Row>\r\n            <Col lg={6}>\r\n              <Card>\r\n                <CardBody>\r\n                  {/* <CardTitle>Validation type</CardTitle>\r\n                  <CardSubtitle className=\"mb-3\">\r\n                    Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server.\r\n                  </CardSubtitle> */}\r\n\r\n                  <Form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      rangeValidation.handleSubmit();\r\n                      return false;\r\n                    }}>\r\n                    <div className=\"mb-2\">\r\n                      {custom_div1 ? (\r\n                        <SweetAlert\r\n                          title=\"Success Entry Data\"\r\n                          timeout={2000}\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: \"0px\",\r\n                            right: \"0px\",\r\n                          }}\r\n                          showCloseButton={false}\r\n                          showConfirm={false}\r\n                          success\r\n                          onConfirm={() => {\r\n                            setcustom_div1(false)\r\n                          }}\r\n                        ></SweetAlert>\r\n                      ) : null}\r\n                      <Label>POC AHM</Label>\r\n                      <Input\r\n                        name=\"max_L_poc\"\r\n                        type=\"text\"\r\n                        disabled\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.max_L_poc || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_poc}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <Label>Kode User</Label>\r\n                      <Input\r\n                        name=\"max_L_kdUser\"\r\n                        placeholder=\"Max 3 chars\"\r\n                        type=\"text\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.max_L_kdUser || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_kdUser}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <Label>Nama User</Label>\r\n                      <Input\r\n                        name=\"max_L_nmUser\"\r\n                        placeholder=\"Max 5 chars\"\r\n                        type=\"text\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.max_L_nmUser || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_nmUser}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <Label>Upload File</Label>\r\n                      <Input\r\n                        id=\"idFileUpload\"\r\n                        name=\"max_L_file\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={(e) => rangeValidation.setFieldValue(\"max_L_file\", e.target.files[0])}\r\n                        invalid={\r\n                          rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_file}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <FormGroup className=\"mb-0\">\r\n                      <div>\r\n                        <Button disabled={disableButton} onClick={saveData} type=\"submit\" color=\"primary\" className=\"ms-1\">\r\n                          Submit\r\n                        </Button>\r\n                      </div>\r\n                      <Spinner style={{ display: visibleSpinner ? \"block\" : \"none\", marginTop: '-35px' }} className=\"ms-4\" color=\"danger\" />\r\n                    </FormGroup>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EntryData"]},"metadata":{},"sourceType":"module"}