{"ast":null,"code":"import { GET_CART_DATA_FAIL, GET_CART_DATA_SUCCESS, GET_CUSTOMERS_FAIL, GET_CUSTOMERS_SUCCESS, ADD_CUSTOMER_SUCCESS, ADD_CUSTOMER_FAIL, UPDATE_CUSTOMER_SUCCESS, UPDATE_CUSTOMER_FAIL, DELETE_CUSTOMER_SUCCESS, DELETE_CUSTOMER_FAIL, GET_ORDERS_FAIL, GET_ORDERS_SUCCESS, GET_PRODUCTS_FAIL, GET_PRODUCTS_SUCCESS, GET_SHOPS_FAIL, GET_SHOPS_SUCCESS, GET_PRODUCT_DETAIL_SUCCESS, GET_PRODUCT_DETAIL_FAIL, ADD_ORDER_SUCCESS, ADD_ORDER_FAIL, UPDATE_ORDER_SUCCESS, UPDATE_ORDER_FAIL, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL, GET_PRODUCT_COMMENTS_SUCCESS, GET_PRODUCT_COMMENTS_FAIL, ON_LIKE_COMMENT_SUCCESS, ON_LIKE_REPLY_SUCCESS, ON_ADD_REPLY_SUCCESS, ON_ADD_COMMENT_SUCCESS } from \"./actionTypes\";\nconst INIT_STATE = {\n  products: [],\n  product: {},\n  orders: [],\n  cartData: {},\n  customers: [],\n  shops: [],\n  error: {},\n  productComments: []\n};\n\nconst Ecommerce = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_PRODUCTS_SUCCESS:\n      return { ...state,\n        products: action.payload\n      };\n\n    case GET_PRODUCTS_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_PRODUCT_DETAIL_SUCCESS:\n      return { ...state,\n        product: action.payload\n      };\n\n    case GET_PRODUCT_DETAIL_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_ORDERS_SUCCESS:\n      return { ...state,\n        orders: action.payload\n      };\n\n    case GET_ORDERS_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case ADD_ORDER_SUCCESS:\n      return { ...state,\n        orders: [...state.orders, action.payload]\n      };\n\n    case ADD_ORDER_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case UPDATE_ORDER_SUCCESS:\n      return { ...state,\n        orders: state.orders.map(order => order.id.toString() === action.payload.id.toString() ? {\n          order,\n          ...action.payload\n        } : order)\n      };\n\n    case UPDATE_ORDER_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case DELETE_ORDER_SUCCESS:\n      return { ...state,\n        orders: state.orders.filter(order => order.id.toString() !== action.payload.id.toString())\n      };\n\n    case DELETE_ORDER_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_CART_DATA_SUCCESS:\n      return { ...state,\n        cartData: action.payload\n      };\n\n    case GET_CART_DATA_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_CUSTOMERS_SUCCESS:\n      return { ...state,\n        customers: action.payload\n      };\n\n    case GET_CUSTOMERS_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case ADD_CUSTOMER_SUCCESS:\n      return { ...state,\n        customers: [...state.customers, action.payload]\n      };\n\n    case ADD_CUSTOMER_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case UPDATE_CUSTOMER_SUCCESS:\n      return { ...state,\n        customers: state.customers.map(customer => customer.id.toString() === action.payload.id.toString() ? {\n          customer,\n          ...action.payload\n        } : customer)\n      };\n\n    case UPDATE_CUSTOMER_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case DELETE_CUSTOMER_SUCCESS:\n      return { ...state,\n        customers: state.customers.filter(customer => customer.id.toString() !== action.payload.id.toString())\n      };\n\n    case DELETE_CUSTOMER_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_SHOPS_SUCCESS:\n      return { ...state,\n        shops: action.payload\n      };\n\n    case GET_SHOPS_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_PRODUCT_COMMENTS_SUCCESS:\n    case ON_LIKE_COMMENT_SUCCESS:\n    case ON_LIKE_REPLY_SUCCESS:\n    case ON_ADD_REPLY_SUCCESS:\n    case ON_ADD_COMMENT_SUCCESS:\n      return { ...state,\n        productComments: action.payload\n      };\n\n    case GET_PRODUCT_COMMENTS_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Ecommerce;\nexport default Ecommerce;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ecommerce\");","map":{"version":3,"sources":["D:/React_Code/Skote_React_v3.3.1/Admin-Hooks-Staterkit/src/store/e-commerce/reducer.js"],"names":["GET_CART_DATA_FAIL","GET_CART_DATA_SUCCESS","GET_CUSTOMERS_FAIL","GET_CUSTOMERS_SUCCESS","ADD_CUSTOMER_SUCCESS","ADD_CUSTOMER_FAIL","UPDATE_CUSTOMER_SUCCESS","UPDATE_CUSTOMER_FAIL","DELETE_CUSTOMER_SUCCESS","DELETE_CUSTOMER_FAIL","GET_ORDERS_FAIL","GET_ORDERS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCTS_SUCCESS","GET_SHOPS_FAIL","GET_SHOPS_SUCCESS","GET_PRODUCT_DETAIL_SUCCESS","GET_PRODUCT_DETAIL_FAIL","ADD_ORDER_SUCCESS","ADD_ORDER_FAIL","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","GET_PRODUCT_COMMENTS_SUCCESS","GET_PRODUCT_COMMENTS_FAIL","ON_LIKE_COMMENT_SUCCESS","ON_LIKE_REPLY_SUCCESS","ON_ADD_REPLY_SUCCESS","ON_ADD_COMMENT_SUCCESS","INIT_STATE","products","product","orders","cartData","customers","shops","error","productComments","Ecommerce","state","action","type","payload","map","order","id","toString","filter","customer"],"mappings":"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","sourcesContent":["import {\n  GET_CART_DATA_FAIL,\n  GET_CART_DATA_SUCCESS,\n  GET_CUSTOMERS_FAIL,\n  GET_CUSTOMERS_SUCCESS,\n  ADD_CUSTOMER_SUCCESS,\n  ADD_CUSTOMER_FAIL,\n  UPDATE_CUSTOMER_SUCCESS,\n  UPDATE_CUSTOMER_FAIL,\n  DELETE_CUSTOMER_SUCCESS,\n  DELETE_CUSTOMER_FAIL,\n  GET_ORDERS_FAIL,\n  GET_ORDERS_SUCCESS,\n  GET_PRODUCTS_FAIL,\n  GET_PRODUCTS_SUCCESS,\n  GET_SHOPS_FAIL,\n  GET_SHOPS_SUCCESS,\n  GET_PRODUCT_DETAIL_SUCCESS,\n  GET_PRODUCT_DETAIL_FAIL,\n  ADD_ORDER_SUCCESS,\n  ADD_ORDER_FAIL,\n  UPDATE_ORDER_SUCCESS,\n  UPDATE_ORDER_FAIL,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL,\n  GET_PRODUCT_COMMENTS_SUCCESS,\n  GET_PRODUCT_COMMENTS_FAIL,\n  ON_LIKE_COMMENT_SUCCESS,\n  ON_LIKE_REPLY_SUCCESS,\n  ON_ADD_REPLY_SUCCESS,\n  ON_ADD_COMMENT_SUCCESS,\n} from \"./actionTypes\"\n\nconst INIT_STATE = {\n  products: [],\n  product: {},\n  orders: [],\n  cartData: {},\n  customers: [],\n  shops: [],\n  error: {},\n  productComments: [],\n}\n\nconst Ecommerce = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        products: action.payload,\n      }\n\n    case GET_PRODUCTS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_PRODUCT_DETAIL_SUCCESS:\n      return {\n        ...state,\n        product: action.payload,\n      }\n\n    case GET_PRODUCT_DETAIL_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_ORDERS_SUCCESS:\n      return {\n        ...state,\n        orders: action.payload,\n      }\n\n    case GET_ORDERS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case ADD_ORDER_SUCCESS:\n      return {\n        ...state,\n        orders: [...state.orders, action.payload],\n      }\n\n    case ADD_ORDER_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case UPDATE_ORDER_SUCCESS:\n      return {\n        ...state,\n        orders: state.orders.map(order =>\n          order.id.toString() === action.payload.id.toString()\n            ? { order, ...action.payload }\n            : order\n        ),\n      }\n\n    case UPDATE_ORDER_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case DELETE_ORDER_SUCCESS:\n      return {\n        ...state,\n        orders: state.orders.filter(\n          order => order.id.toString() !== action.payload.id.toString()\n        ),\n      }\n\n    case DELETE_ORDER_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_CART_DATA_SUCCESS:\n      return {\n        ...state,\n        cartData: action.payload,\n      }\n\n    case GET_CART_DATA_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_CUSTOMERS_SUCCESS:\n      return {\n        ...state,\n        customers: action.payload,\n      }\n\n    case GET_CUSTOMERS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case ADD_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        customers: [...state.customers, action.payload],\n      }\n\n    case ADD_CUSTOMER_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case UPDATE_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        customers: state.customers.map(customer =>\n          customer.id.toString() === action.payload.id.toString()\n            ? { customer, ...action.payload }\n            : customer\n        ),\n      }\n\n    case UPDATE_CUSTOMER_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case DELETE_CUSTOMER_SUCCESS:\n      return {\n        ...state,\n        customers: state.customers.filter(\n          customer => customer.id.toString() !== action.payload.id.toString()\n        ),\n      }\n\n    case DELETE_CUSTOMER_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_SHOPS_SUCCESS:\n      return {\n        ...state,\n        shops: action.payload,\n      }\n\n    case GET_SHOPS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_PRODUCT_COMMENTS_SUCCESS:\n    case ON_LIKE_COMMENT_SUCCESS:\n    case ON_LIKE_REPLY_SUCCESS:\n    case ON_ADD_REPLY_SUCCESS:\n    case ON_ADD_COMMENT_SUCCESS:\n      return {\n        ...state,\n        productComments: action.payload,\n      }\n\n    case GET_PRODUCT_COMMENTS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default Ecommerce\n"]},"metadata":{},"sourceType":"module"}