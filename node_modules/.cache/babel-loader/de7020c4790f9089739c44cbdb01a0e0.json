{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Code\\\\Skote_React_v3.3.1\\\\Admin-Hooks-Staterkit\\\\src\\\\routes\\\\route.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authmiddleware = _ref => {\n  let {\n    component: Component,\n    layout: Layout,\n    isAuthProtected,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      localStorage.setItem(\"authUser\", '{\"uid\":1,\"username\":\"admin\",\"role\":\"admin\",\"password\":\"123456\",\"email\":\"admin@themesbrand.com\"}');\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/dashboard\",\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this); // if (isAuthProtected && !localStorage.getItem(\"authUser\")) {\n      //   return (\n      //     <Redirect\n      //       to={{ pathname: \"/login\", state: { from: props.location } }}\n      //     />\n      //   )\n      // }\n      // return (\n      //   <Layout>\n      //     <Component {...props} />\n      //   </Layout>\n      // )\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Authmiddleware;\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any\n};\nexport default Authmiddleware;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authmiddleware\");","map":{"version":3,"sources":["D:/React_Code/Skote_React_v3.3.1/Admin-Hooks-Staterkit/src/routes/route.js"],"names":["React","PropTypes","Route","Redirect","Authmiddleware","component","Component","layout","Layout","isAuthProtected","rest","props","localStorage","setItem","pathname","state","from","location","propTypes","bool","any","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAG;AAAA,MAAC;AACtBC,IAAAA,SAAS,EAAEC,SADW;AAEtBC,IAAAA,MAAM,EAAEC,MAFc;AAGtBC,IAAAA,eAHsB;AAItB,OAAGC;AAJmB,GAAD;AAAA,sBAMrB,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IAAI;AACfC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,iGAAjC;AACA,0BACE,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE,YAAZ;AAA0BC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAAjC;AADN;AAAA;AAAA;AAAA;AAAA,cADF,CAFe,CAOf;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD;AAtBH;AAAA;AAAA;AAAA;AAAA,UANqB;AAAA,CAAvB;;KAAMb,c;AAgCNA,cAAc,CAACc,SAAf,GAA2B;AACzBT,EAAAA,eAAe,EAAER,SAAS,CAACkB,IADF;AAEzBd,EAAAA,SAAS,EAAEJ,SAAS,CAACmB,GAFI;AAGzBH,EAAAA,QAAQ,EAAEhB,SAAS,CAACoB,MAHK;AAIzBd,EAAAA,MAAM,EAAEN,SAAS,CAACmB;AAJO,CAA3B;AAOA,eAAehB,cAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nconst Authmiddleware = ({\n  component: Component,\n  layout: Layout,\n  isAuthProtected,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      localStorage.setItem(\"authUser\", '{\"uid\":1,\"username\":\"admin\",\"role\":\"admin\",\"password\":\"123456\",\"email\":\"admin@themesbrand.com\"}')\n      return (\n        <Redirect\n          to={{ pathname: \"/dashboard\", state: { from: props.location } }}\n        />\n      )\n      // if (isAuthProtected && !localStorage.getItem(\"authUser\")) {\n      //   return (\n      //     <Redirect\n      //       to={{ pathname: \"/login\", state: { from: props.location } }}\n      //     />\n      //   )\n      // }\n\n      // return (\n      //   <Layout>\n      //     <Component {...props} />\n      //   </Layout>\n      // )\n    }}\n  />\n)\n\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any,\n}\n\nexport default Authmiddleware;\n"]},"metadata":{},"sourceType":"module"}