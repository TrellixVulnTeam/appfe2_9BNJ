{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Code\\\\korindo_proj\\\\appfe\\\\src\\\\pages\\\\DonwloadData\\\\DonwloadData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport '../../config';\nimport { Row, Col, Card, CardBody, CardTitle, Container, UncontrolledAlert, Button, Alert } from \"reactstrap\";\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CustomTabel from \"../../components/Common/CustomTabel\";\nimport \"../../assets/scss/datatables2.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonwloadData = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [sortField, setSortField] = useState(\"id\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n\n  const handleTableChange = (type, _ref) => {\n    let {\n      page,\n      sortField,\n      setSortOrder\n    } = _ref;\n    console.log(sortField);\n    console.log(sortOrder);\n\n    if (type === \"sort\") {\n      setPage(1);\n      setSortField(sortField);\n      setSortOrder(sortOrder);\n    }\n\n    if (type === \"pagination\") {\n      setPage(page);\n    }\n  };\n\n  function getImage(indexed_array) {\n    dispatch(onGetDataImage(indexed_array));\n  }\n\n  const entrydata = useSelector(state => {\n    return state.GetData.resp.data;\n  });\n  const error = useSelector(state => {\n    return state.GetData.error;\n  });\n  useEffect(() => {\n    dispatch(onGetData());\n    console.log(page);\n    console.log(sortField);\n    console.log(setSortOrder);\n  }, [dispatch]);\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(resetDonwload());\n    }, 5000);\n  }, [dispatch, error]);\n\n  const columnFormatter = (cell, row, rowIndex, formatExtraData) => {\n    if (row && row.fileNm) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: () => {\n          var indexed_array = {\n            \"file_name\": row.fileNm,\n            \"file_location\": row.fileLoc\n          };\n          getImage(indexed_array);\n        },\n        children: row.fileNm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this);\n    } else {\n      return row.fileNm;\n    }\n  };\n\n  const columnFormatterOriginal = (cell, row, rowIndex, formatExtraData) => {\n    if (row && row.fileNmOld) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: () => {\n          var indexed_array = {\n            \"file_name\": row.fileNmOld,\n            \"file_location\": row.fileLoc\n          };\n          getImage(indexed_array);\n        },\n        children: row.fileNmOld\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this);\n    } else {\n      return row.fileNmOld;\n    }\n  };\n\n  const columns = [{\n    dataField: \"id\",\n    text: \"ID\",\n    sort: true\n  }, {\n    dataField: \"poc\",\n    text: \"POC\",\n    sort: true\n  }, {\n    dataField: \"userId\",\n    text: \"User ID\",\n    sort: true\n  }, {\n    dataField: \"userNm\",\n    text: \"User Name\",\n    sort: true\n  }, {\n    dataField: \"dateipt\",\n    text: \"Tanggal Entry\",\n    sort: true\n  }, {\n    dataField: \"fileNm\",\n    text: \"File Edit\",\n    sort: true,\n    formatter: columnFormatter\n  }, {\n    dataField: \"fileNmOld\",\n    text: \"File Original\",\n    sort: true,\n    formatter: columnFormatterOriginal\n  }];\n  const [isSending, setIsSending] = useState(false);\n  const sendRequest = useCallback(async () => {\n    dispatch(onGetData());\n  }, [entrydata]); // update the callback if the state changes\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Korindo App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Forms\",\n          breadcrumbItem: \"Download foto dengan marking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), error && error ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          disabled: isSending,\n          onClick: sendRequest,\n          color: \"primary\",\n          className: \"btn btn-primary col-sm-1\",\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  children: \"List Entry Data Marking \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                    keyField: \"id\",\n                    remote: true,\n                    data: entrydata,\n                    columns: columns,\n                    pagination: paginationFactory({\n                      page: 2,\n                      sizePerPage: 5,\n                      sizePerPageList: [5, 10, 20],\n                      totalSize: 20,\n                      showTotal: true\n                    }),\n                    onTableChange: handleTableChange,\n                    striped: true,\n                    hover: true,\n                    condensed: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DonwloadData, \"VrCcxPq3xno2eHZcWj1XwR3NZnw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = DonwloadData;\nexport default DonwloadData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonwloadData\");","map":{"version":3,"sources":["D:/React_Code/korindo_proj/appfe/src/pages/DonwloadData/DonwloadData.js"],"names":["React","useState","useEffect","useCallback","MetaTags","BootstrapTable","paginationFactory","Breadcrumbs","Row","Col","Card","CardBody","CardTitle","Container","UncontrolledAlert","Button","Alert","getData","onGetData","getDataImage","onGetDataImage","resetDonwload","useSelector","useDispatch","CustomTabel","DonwloadData","dispatch","page","setPage","sortField","setSortField","sortOrder","setSortOrder","handleTableChange","type","console","log","getImage","indexed_array","entrydata","state","GetData","resp","data","error","setTimeout","columnFormatter","cell","row","rowIndex","formatExtraData","fileNm","fileLoc","columnFormatterOriginal","fileNmOld","columns","dataField","text","sort","formatter","isSending","setIsSending","sendRequest","sizePerPage","sizePerPageList","totalSize","showTotal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect , useCallback } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";  \r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\nimport '../../config';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  UncontrolledAlert,\r\n  Button,\r\n  Alert\r\n} from \"reactstrap\";\r\n\r\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport CustomTabel from \"../../components/Common/CustomTabel\";\r\n\r\nimport \"../../assets/scss/datatables2.scss\"\r\n\r\n\r\nconst DonwloadData = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [sortField, setSortField] = useState(\"id\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n\r\n  const handleTableChange = (type, {page, sortField, setSortOrder}) => {\r\n    console.log(sortField);\r\n    console.log(sortOrder);\r\n    if(type === \"sort\"){\r\n      setPage(1);\r\n      setSortField(sortField);\r\n      setSortOrder(sortOrder);\r\n    }\r\n    if(type===\"pagination\"){\r\n        setPage(page)\r\n    }\r\n  };\r\n\r\n  function getImage(indexed_array) {\r\n    dispatch(onGetDataImage(indexed_array));\r\n  }\r\n\r\n  const entrydata  = useSelector(state => {\r\n    return state.GetData.resp.data;\r\n  });\r\n  \r\n  const error  = useSelector(state => {\r\n    return state.GetData.error;\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(onGetData())\r\n    console.log(page)\r\n    console.log(sortField)\r\n    console.log(setSortOrder)\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(resetDonwload());\r\n    }, 5000);\r\n  }, [dispatch, error])\r\n\r\n  const columnFormatter = (cell, row, rowIndex, formatExtraData) => {\r\n    if (row && row.fileNm) {\r\n      return (\r\n        <a\r\n          href=\"#\"\r\n          onClick={() => {\r\n              var indexed_array = {\r\n                \"file_name\" : row.fileNm,\r\n                \"file_location\" : row.fileLoc\r\n              };\r\n              getImage(indexed_array);\r\n              \r\n          }}\r\n        >\r\n          {row.fileNm}\r\n        </a>\r\n      );\r\n    } else {\r\n      return row.fileNm;\r\n    }\r\n  };\r\n\r\n  const columnFormatterOriginal = (cell, row, rowIndex, formatExtraData) => {\r\n    if (row && row.fileNmOld) {\r\n      return (\r\n        <a\r\n          href=\"#\"\r\n          onClick={() => {\r\n            var indexed_array = {\r\n              \"file_name\" : row.fileNmOld,\r\n              \"file_location\" : row.fileLoc\r\n            };\r\n            getImage(indexed_array)\r\n      \r\n          }}\r\n        >\r\n          {row.fileNmOld}\r\n        </a>\r\n      );\r\n    } else {\r\n      return row.fileNmOld;\r\n    }\r\n  };\r\n  \r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"poc\",\r\n      text: \"POC\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"User ID\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"userNm\",\r\n      text: \"User Name\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"dateipt\",\r\n      text: \"Tanggal Entry\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"fileNm\",\r\n      text: \"File Edit\",\r\n      sort: true,\r\n      formatter: columnFormatter  \r\n    },\r\n    {\r\n      dataField: \"fileNmOld\",\r\n      text: \"File Original\",\r\n      sort: true,\r\n      formatter: columnFormatterOriginal  \r\n    },\r\n  ]\r\n\r\n  const [isSending, setIsSending] = useState(false)\r\n  const sendRequest = useCallback(async () => {\r\n    dispatch(onGetData());\r\n  }, [entrydata]) // update the callback if the state changes\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <MetaTags>\r\n          <title>\r\n          Korindo App\r\n          </title>\r\n        </MetaTags>\r\n        <Container fluid={true}>\r\n          <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Download foto dengan marking\" />\r\n\r\n          {error && error ? <Alert color=\"danger\">{error}</Alert> : null}\r\n         \r\n          <Button disabled={isSending} onClick={sendRequest}\r\n            color=\"primary\"\r\n            className=\"btn btn-primary col-sm-1\"\r\n          >\r\n            Refresh\r\n          </Button>\r\n          <br/>\r\n          <br/>\r\n          <Row>\r\n              \r\n                    \r\n            <Col>\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>List Entry Data Marking </CardTitle>\r\n\r\n                  <div className=\"table-responsive\">\r\n                  <BootstrapTable\r\n                    keyField = \"id\"\r\n                    remote\r\n                    data = {entrydata}\r\n                    columns = {columns}\r\n                    pagination = {paginationFactory ({\r\n                        page : 2,\r\n                        sizePerPage : 5,\r\n                        sizePerPageList : [5,10,20],\r\n                        totalSize : 20,\r\n                        showTotal: true,\r\n                    })}\r\n                    onTableChange = {handleTableChange}\r\n                    striped\r\n                    hover\r\n                    condensed\r\n                  />\r\n                    {/* <BootstrapTable\r\n                      keyField=\"id\"\r\n                      remote\r\n                      data={entrydata}\r\n                      columns={columns}\r\n                      page={page}\r\n                      handleTableChange = {handleTableChange}\r\n                      totalSize = {20}\r\n                      striped\r\n                      hover\r\n                      condensed\r\n                    /> */}\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n  \r\nexport default DonwloadData  \r\n"]},"metadata":{},"sourceType":"module"}