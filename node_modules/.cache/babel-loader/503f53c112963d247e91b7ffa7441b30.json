{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_DATA } from \"./actionTypes\";\nimport { getDataSuccess, getDataFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getData } from \"helpers/backend_helper\";\n\nfunction* fetchGetData() {\n  try {\n    console.log(response);\n    const response = yield call(getData());\n\n    if (response.status == 1) {\n      yield put(getDataSuccess(response));\n    } else {\n      yield put(getDataFail(error));\n    }\n  } catch (error) {\n    yield put(getDataFail(error));\n  }\n}\n\nfunction* getDataSaga() {\n  yield takeEvery(GET_DATA, fetchGetData);\n}\n\nexport default getDataSaga;","map":{"version":3,"sources":["D:/React_Code/korindo_proj/appfe/src/store/donwloaddata/saga.js"],"names":["call","put","takeEvery","GET_DATA","getDataSuccess","getDataFail","getData","fetchGetData","console","log","response","status","error","getDataSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C,C,CAEA;;AACA,SAASC,OAAT,QAAwB,wBAAxB;;AAEA,UAAUC,YAAV,GAAyB;AACvB,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,UAAMA,QAAQ,GAAG,MAAMV,IAAI,CAACM,OAAO,EAAR,CAA3B;;AACA,QAAGI,QAAQ,CAACC,MAAT,IAAmB,CAAtB,EAAwB;AAEtB,YAAMV,GAAG,CAACG,cAAc,CAACM,QAAD,CAAf,CAAT;AACD,KAHD,MAGK;AACH,YAAMT,GAAG,CAACI,WAAW,CAACO,KAAD,CAAZ,CAAT;AACD;AACF,GATD,CASE,OAAOA,KAAP,EAAc;AACd,UAAMX,GAAG,CAACI,WAAW,CAACO,KAAD,CAAZ,CAAT;AACD;AACF;;AAED,UAAUC,WAAV,GAAwB;AAEtB,QAAMX,SAAS,CAACC,QAAD,EAAWI,YAAX,CAAf;AACD;;AAED,eAAeM,WAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\r\n\r\n// Crypto Redux States\r\nimport { GET_DATA } from \"./actionTypes\"\r\nimport { getDataSuccess, getDataFail } from \"./actions\"\r\n\r\n//Include Both Helper File with needed methods\r\nimport { getData } from \"helpers/backend_helper\"\r\n\r\nfunction* fetchGetData() {\r\n  try {\r\n    console.log(response);\r\n    const response = yield call(getData())\r\n    if(response.status == 1){\r\n      \r\n      yield put(getDataSuccess(response))\r\n    }else{\r\n      yield put(getDataFail(error))\r\n    }\r\n  } catch (error) {\r\n    yield put(getDataFail(error))\r\n  }\r\n}\r\n\r\nfunction* getDataSaga() {\r\n    \r\n  yield takeEvery(GET_DATA, fetchGetData)\r\n}\r\n\r\nexport default getDataSaga\r\n"]},"metadata":{},"sourceType":"module"}