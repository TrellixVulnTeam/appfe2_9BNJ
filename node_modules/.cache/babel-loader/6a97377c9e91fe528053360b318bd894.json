{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Ecommerce Redux States\n\nimport { GET_CART_DATA, GET_CUSTOMERS, GET_ORDERS, GET_PRODUCT_DETAIL, GET_PRODUCTS, GET_SHOPS, ADD_NEW_ORDER, DELETE_ORDER, UPDATE_ORDER, ADD_NEW_CUSTOMER, DELETE_CUSTOMER, UPDATE_CUSTOMER, GET_PRODUCT_COMMENTS, ON_LIKE_COMMENT, ON_LIKE_REPLY, ON_ADD_REPLY, ON_ADD_COMMENT } from \"./actionTypes\";\nimport { getCartDataFail, getCartDataSuccess, getCustomersFail, getCustomersSuccess, getOrdersFail, getOrdersSuccess, getProductDetailFail, getProductDetailSuccess, getProductsFail, getProductsSuccess, getShopsFail, getShopsSuccess, addOrderFail, addOrderSuccess, updateOrderSuccess, updateOrderFail, deleteOrderSuccess, deleteOrderFail, addCustomerFail, addCustomerSuccess, updateCustomerSuccess, updateCustomerFail, deleteCustomerSuccess, deleteCustomerFail, getProductCommentsSuccess, getProductCommentsFail, onLikeCommentSuccess, onLikeCommentFail, onLikeReplySuccess, onLikeReplyFail, onAddReplySuccess, onAddReplyFail, onAddCommentSuccess, onAddCommentFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getCartData, getCustomers, getOrders, getProducts, getShops, getProductDetail, addNewOrder, updateOrder, deleteOrder, addNewCustomer, updateCustomer, deleteCustomer, getProductComents as getProductComentsApi, onLikeComment as onLikeCommentApi, onLikeReply as onLikeReplyApi, onAddReply as onAddReplyApi, onAddComment as onAddCommentApi } from \"helpers/fakebackend_helper\";\n\nfunction* fetchProducts() {\n  try {\n    const response = yield call(getProducts);\n    yield put(getProductsSuccess(response));\n  } catch (error) {\n    yield put(getProductsFail(error));\n  }\n}\n\nfunction* fetchProductDetail(_ref) {\n  let {\n    productId\n  } = _ref;\n\n  try {\n    const response = yield call(getProductDetail, productId);\n    yield put(getProductDetailSuccess(response));\n  } catch (error) {\n    yield put(getProductDetailFail(error));\n  }\n}\n\nfunction* fetchOrders() {\n  try {\n    const response = yield call(getOrders);\n    yield put(getOrdersSuccess(response));\n  } catch (error) {\n    yield put(getOrdersFail(error));\n  }\n}\n\nfunction* fetchCartData() {\n  try {\n    const response = yield call(getCartData);\n    yield put(getCartDataSuccess(response));\n  } catch (error) {\n    yield put(getCartDataFail(error));\n  }\n}\n\nfunction* fetchCustomers() {\n  try {\n    const response = yield call(getCustomers);\n    yield put(getCustomersSuccess(response));\n  } catch (error) {\n    yield put(getCustomersFail(error));\n  }\n}\n\nfunction* onUpdateCustomer(_ref2) {\n  let {\n    payload: customer\n  } = _ref2;\n\n  try {\n    const response = yield call(updateCustomer, customer);\n    yield put(updateCustomerSuccess(response));\n  } catch (error) {\n    yield put(updateCustomerFail(error));\n  }\n}\n\nfunction* onDeleteCustomer(_ref3) {\n  let {\n    payload: customer\n  } = _ref3;\n\n  try {\n    const response = yield call(deleteCustomer, customer);\n    yield put(deleteCustomerSuccess(response));\n  } catch (error) {\n    yield put(deleteCustomerFail(error));\n  }\n}\n\nfunction* onAddNewCustomer(_ref4) {\n  let {\n    payload: customer\n  } = _ref4;\n\n  try {\n    const response = yield call(addNewCustomer, customer);\n    yield put(addCustomerSuccess(response));\n  } catch (error) {\n    yield put(addCustomerFail(error));\n  }\n}\n\nfunction* fetchShops() {\n  try {\n    const response = yield call(getShops);\n    yield put(getShopsSuccess(response));\n  } catch (error) {\n    yield put(getShopsFail(error));\n  }\n}\n\nfunction* onUpdateOrder(_ref5) {\n  let {\n    payload: order\n  } = _ref5;\n\n  try {\n    const response = yield call(updateOrder, order);\n    yield put(updateOrderSuccess(response));\n  } catch (error) {\n    yield put(updateOrderFail(error));\n  }\n}\n\nfunction* onDeleteOrder(_ref6) {\n  let {\n    payload: order\n  } = _ref6;\n\n  try {\n    const response = yield call(deleteOrder, order);\n    yield put(deleteOrderSuccess(response));\n  } catch (error) {\n    yield put(deleteOrderFail(error));\n  }\n}\n\nfunction* onAddNewOrder(_ref7) {\n  let {\n    payload: order\n  } = _ref7;\n\n  try {\n    const response = yield call(addNewOrder, order);\n    yield put(addOrderSuccess(response));\n  } catch (error) {\n    yield put(addOrderFail(error));\n  }\n}\n\nfunction* getProductComents() {\n  try {\n    // todo - add product Id to the payload and api\n    const response = yield call(getProductComentsApi);\n    yield put(getProductCommentsSuccess(response));\n  } catch (error) {\n    yield put(getProductCommentsFail(error));\n  }\n}\n\nfunction* onLikeComment(_ref8) {\n  let {\n    payload: {\n      commentId,\n      productId\n    }\n  } = _ref8;\n\n  try {\n    // todo - add product Id to the payload and api\n    const response = yield call(onLikeCommentApi, commentId, productId);\n    yield put(onLikeCommentSuccess(response));\n  } catch (error) {\n    yield put(onLikeCommentFail(error));\n  }\n}\n\nfunction* onLikeReply(_ref9) {\n  let {\n    payload: {\n      commentId,\n      productId,\n      replyId\n    }\n  } = _ref9;\n\n  try {\n    // todo - add product Id to the payload and api\n    const response = yield call(onLikeReplyApi, commentId, productId, replyId);\n    yield put(onLikeReplySuccess(response));\n  } catch (error) {\n    yield put(onLikeReplyFail(error));\n  }\n}\n\nfunction* onAddReply(_ref10) {\n  let {\n    payload: {\n      commentId,\n      productId,\n      replyText\n    }\n  } = _ref10;\n\n  try {\n    const response = yield call(onAddReplyApi, commentId, productId, replyText);\n    yield put(onAddReplySuccess(response));\n  } catch (error) {\n    yield put(onAddReplyFail(error));\n  }\n}\n\nfunction* onAddComment(_ref11) {\n  let {\n    payload: {\n      productId,\n      commentText\n    }\n  } = _ref11;\n\n  try {\n    const response = yield call(onAddCommentApi, productId, commentText);\n    yield put(onAddCommentSuccess(response));\n  } catch (error) {\n    yield put(onAddCommentFail(error));\n  }\n}\n\nfunction* ecommerceSaga() {\n  yield takeEvery(GET_PRODUCTS, fetchProducts);\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail);\n  yield takeEvery(GET_ORDERS, fetchOrders);\n  yield takeEvery(GET_CART_DATA, fetchCartData);\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers);\n  yield takeEvery(ADD_NEW_CUSTOMER, onAddNewCustomer);\n  yield takeEvery(UPDATE_CUSTOMER, onUpdateCustomer);\n  yield takeEvery(DELETE_CUSTOMER, onDeleteCustomer);\n  yield takeEvery(GET_SHOPS, fetchShops);\n  yield takeEvery(ADD_NEW_ORDER, onAddNewOrder);\n  yield takeEvery(UPDATE_ORDER, onUpdateOrder);\n  yield takeEvery(DELETE_ORDER, onDeleteOrder);\n  yield takeEvery(GET_PRODUCT_COMMENTS, getProductComents);\n  yield takeEvery(ON_LIKE_COMMENT, onLikeComment);\n  yield takeEvery(ON_LIKE_REPLY, onLikeReply);\n  yield takeEvery(ON_ADD_REPLY, onAddReply);\n  yield takeEvery(ON_ADD_COMMENT, onAddComment);\n}\n\nexport default ecommerceSaga;","map":{"version":3,"sources":["D:/React_Code/Skote_React_v3.3.1/Admin-Hooks-Staterkit/src/store/e-commerce/saga.js"],"names":["call","put","takeEvery","GET_CART_DATA","GET_CUSTOMERS","GET_ORDERS","GET_PRODUCT_DETAIL","GET_PRODUCTS","GET_SHOPS","ADD_NEW_ORDER","DELETE_ORDER","UPDATE_ORDER","ADD_NEW_CUSTOMER","DELETE_CUSTOMER","UPDATE_CUSTOMER","GET_PRODUCT_COMMENTS","ON_LIKE_COMMENT","ON_LIKE_REPLY","ON_ADD_REPLY","ON_ADD_COMMENT","getCartDataFail","getCartDataSuccess","getCustomersFail","getCustomersSuccess","getOrdersFail","getOrdersSuccess","getProductDetailFail","getProductDetailSuccess","getProductsFail","getProductsSuccess","getShopsFail","getShopsSuccess","addOrderFail","addOrderSuccess","updateOrderSuccess","updateOrderFail","deleteOrderSuccess","deleteOrderFail","addCustomerFail","addCustomerSuccess","updateCustomerSuccess","updateCustomerFail","deleteCustomerSuccess","deleteCustomerFail","getProductCommentsSuccess","getProductCommentsFail","onLikeCommentSuccess","onLikeCommentFail","onLikeReplySuccess","onLikeReplyFail","onAddReplySuccess","onAddReplyFail","onAddCommentSuccess","onAddCommentFail","getCartData","getCustomers","getOrders","getProducts","getShops","getProductDetail","addNewOrder","updateOrder","deleteOrder","addNewCustomer","updateCustomer","deleteCustomer","getProductComents","getProductComentsApi","onLikeComment","onLikeCommentApi","onLikeReply","onLikeReplyApi","onAddReply","onAddReplyApi","onAddComment","onAddCommentApi","fetchProducts","response","error","fetchProductDetail","productId","fetchOrders","fetchCartData","fetchCustomers","onUpdateCustomer","payload","customer","onDeleteCustomer","onAddNewCustomer","fetchShops","onUpdateOrder","order","onDeleteOrder","onAddNewOrder","commentId","replyId","replyText","commentText","ecommerceSaga"],"mappings":"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","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Ecommerce Redux States\nimport {\n  GET_CART_DATA,\n  GET_CUSTOMERS,\n  GET_ORDERS,\n  GET_PRODUCT_DETAIL,\n  GET_PRODUCTS,\n  GET_SHOPS,\n  ADD_NEW_ORDER,\n  DELETE_ORDER,\n  UPDATE_ORDER,\n  ADD_NEW_CUSTOMER,\n  DELETE_CUSTOMER,\n  UPDATE_CUSTOMER,\n  GET_PRODUCT_COMMENTS,\n  ON_LIKE_COMMENT,\n  ON_LIKE_REPLY,\n  ON_ADD_REPLY,\n  ON_ADD_COMMENT,\n} from \"./actionTypes\"\nimport {\n  getCartDataFail,\n  getCartDataSuccess,\n  getCustomersFail,\n  getCustomersSuccess,\n  getOrdersFail,\n  getOrdersSuccess,\n  getProductDetailFail,\n  getProductDetailSuccess,\n  getProductsFail,\n  getProductsSuccess,\n  getShopsFail,\n  getShopsSuccess,\n  addOrderFail,\n  addOrderSuccess,\n  updateOrderSuccess,\n  updateOrderFail,\n  deleteOrderSuccess,\n  deleteOrderFail,\n  addCustomerFail,\n  addCustomerSuccess,\n  updateCustomerSuccess,\n  updateCustomerFail,\n  deleteCustomerSuccess,\n  deleteCustomerFail,\n  getProductCommentsSuccess,\n  getProductCommentsFail,\n  onLikeCommentSuccess,\n  onLikeCommentFail,\n  onLikeReplySuccess,\n  onLikeReplyFail,\n  onAddReplySuccess,\n  onAddReplyFail,\n  onAddCommentSuccess,\n  onAddCommentFail,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport {\n  getCartData,\n  getCustomers,\n  getOrders,\n  getProducts,\n  getShops,\n  getProductDetail,\n  addNewOrder,\n  updateOrder,\n  deleteOrder,\n  addNewCustomer,\n  updateCustomer,\n  deleteCustomer,\n  getProductComents as getProductComentsApi,\n  onLikeComment as onLikeCommentApi,\n  onLikeReply as onLikeReplyApi,\n  onAddReply as onAddReplyApi,\n  onAddComment as onAddCommentApi,\n} from \"helpers/fakebackend_helper\"\n\nfunction* fetchProducts() {\n  try {\n    const response = yield call(getProducts)\n    yield put(getProductsSuccess(response))\n  } catch (error) {\n    yield put(getProductsFail(error))\n  }\n}\n\nfunction* fetchProductDetail({ productId }) {\n  try {\n    const response = yield call(getProductDetail, productId)\n    yield put(getProductDetailSuccess(response))\n  } catch (error) {\n    yield put(getProductDetailFail(error))\n  }\n}\n\nfunction* fetchOrders() {\n  try {\n    const response = yield call(getOrders)\n    yield put(getOrdersSuccess(response))\n  } catch (error) {\n    yield put(getOrdersFail(error))\n  }\n}\n\nfunction* fetchCartData() {\n  try {\n    const response = yield call(getCartData)\n    yield put(getCartDataSuccess(response))\n  } catch (error) {\n    yield put(getCartDataFail(error))\n  }\n}\n\nfunction* fetchCustomers() {\n  try {\n    const response = yield call(getCustomers)\n    yield put(getCustomersSuccess(response))\n  } catch (error) {\n    yield put(getCustomersFail(error))\n  }\n}\n\nfunction* onUpdateCustomer({ payload: customer }) {\n  try {\n    const response = yield call(updateCustomer, customer)\n    yield put(updateCustomerSuccess(response))\n  } catch (error) {\n    yield put(updateCustomerFail(error))\n  }\n}\n\nfunction* onDeleteCustomer({ payload: customer }) {\n  try {\n    const response = yield call(deleteCustomer, customer)\n    yield put(deleteCustomerSuccess(response))\n  } catch (error) {\n    yield put(deleteCustomerFail(error))\n  }\n}\n\nfunction* onAddNewCustomer({ payload: customer }) {\n  try {\n    const response = yield call(addNewCustomer, customer)\n\n    yield put(addCustomerSuccess(response))\n  } catch (error) {\n    yield put(addCustomerFail(error))\n  }\n}\n\nfunction* fetchShops() {\n  try {\n    const response = yield call(getShops)\n    yield put(getShopsSuccess(response))\n  } catch (error) {\n    yield put(getShopsFail(error))\n  }\n}\n\nfunction* onUpdateOrder({ payload: order }) {\n  try {\n    const response = yield call(updateOrder, order)\n    yield put(updateOrderSuccess(response))\n  } catch (error) {\n    yield put(updateOrderFail(error))\n  }\n}\n\nfunction* onDeleteOrder({ payload: order }) {\n  try {\n    const response = yield call(deleteOrder, order)\n    yield put(deleteOrderSuccess(response))\n  } catch (error) {\n    yield put(deleteOrderFail(error))\n  }\n}\n\nfunction* onAddNewOrder({ payload: order }) {\n  try {\n    const response = yield call(addNewOrder, order)\n    yield put(addOrderSuccess(response))\n  } catch (error) {\n    yield put(addOrderFail(error))\n  }\n}\n\nfunction* getProductComents() {\n  try {\n    // todo - add product Id to the payload and api\n    const response = yield call(getProductComentsApi)\n    yield put(getProductCommentsSuccess(response))\n  } catch (error) {\n    yield put(getProductCommentsFail(error))\n  }\n}\n\nfunction* onLikeComment({ payload: { commentId, productId } }) {\n  try {\n    // todo - add product Id to the payload and api\n    const response = yield call(onLikeCommentApi, commentId, productId)\n    yield put(onLikeCommentSuccess(response))\n  } catch (error) {\n    yield put(onLikeCommentFail(error))\n  }\n}\n\nfunction* onLikeReply({ payload: { commentId, productId, replyId } }) {\n  try {\n    // todo - add product Id to the payload and api\n    const response = yield call(onLikeReplyApi, commentId, productId, replyId)\n    yield put(onLikeReplySuccess(response))\n  } catch (error) {\n    yield put(onLikeReplyFail(error))\n  }\n}\n\nfunction* onAddReply({ payload: { commentId, productId, replyText } }) {\n  try {\n    const response = yield call(onAddReplyApi, commentId, productId, replyText)\n    yield put(onAddReplySuccess(response))\n  } catch (error) {\n    yield put(onAddReplyFail(error))\n  }\n}\n\nfunction* onAddComment({ payload: { productId, commentText } }) {\n  try {\n    const response = yield call(onAddCommentApi, productId, commentText)\n    yield put(onAddCommentSuccess(response))\n  } catch (error) {\n    yield put(onAddCommentFail(error))\n  }\n}\n\nfunction* ecommerceSaga() {\n  yield takeEvery(GET_PRODUCTS, fetchProducts)\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail)\n  yield takeEvery(GET_ORDERS, fetchOrders)\n  yield takeEvery(GET_CART_DATA, fetchCartData)\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers)\n  yield takeEvery(ADD_NEW_CUSTOMER, onAddNewCustomer)\n  yield takeEvery(UPDATE_CUSTOMER, onUpdateCustomer)\n  yield takeEvery(DELETE_CUSTOMER, onDeleteCustomer)\n  yield takeEvery(GET_SHOPS, fetchShops)\n  yield takeEvery(ADD_NEW_ORDER, onAddNewOrder)\n  yield takeEvery(UPDATE_ORDER, onUpdateOrder)\n  yield takeEvery(DELETE_ORDER, onDeleteOrder)\n  yield takeEvery(GET_PRODUCT_COMMENTS, getProductComents)\n  yield takeEvery(ON_LIKE_COMMENT, onLikeComment)\n  yield takeEvery(ON_LIKE_REPLY, onLikeReply)\n  yield takeEvery(ON_ADD_REPLY, onAddReply)\n  yield takeEvery(ON_ADD_COMMENT, onAddComment)\n}\n\nexport default ecommerceSaga\n"]},"metadata":{},"sourceType":"module"}