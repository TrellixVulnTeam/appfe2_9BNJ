{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Code\\\\appfe\\\\src\\\\pages\\\\Entrydata\\\\EntryData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from \"react\";\nimport MetaTags from 'react-meta-tags';\nimport axios from 'axios';\nimport { Row, Col, Card, CardBody, FormGroup, Button, Label, Input, Container, FormFeedback, Form, Spinner } from \"reactstrap\"; // Formik validation\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"; //SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EntryData = () => {\n  _s();\n\n  const [custom_div1, setcustom_div1] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n  const [disableButton, setDisableButton] = React.useState(false);\n  const [visibleSpinner, setVisibleSpinner] = React.useState(false);\n\n  const changeHandlerFile = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const rangeValidation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      max_L_kdUser: '',\n      max_L_nmUser: '',\n      max_L_poc: 'POC AHM'\n    },\n    validationSchema: Yup.object().shape({\n      max_L_kdUser: Yup.string().max(3, \"Must be exactly 3 chars\").required(\"Max 3 chars\"),\n      max_L_nmUser: Yup.string().max(5, \"Must be exactly 5 chars\").required(\"Max 5 chars\")\n    }),\n    onSubmit: values => {\n      setDisableButton(true);\n      setVisibleSpinner(true);\n      var bodyFormData = new FormData();\n      bodyFormData.append('file', selectedFile);\n      bodyFormData.append('poc', values.max_L_poc);\n      bodyFormData.append('userId', values.max_L_kdUser);\n      bodyFormData.append('userNm', values.max_L_nmUser);\n      axios({\n        method: \"post\",\n        url: \"http://localhost:9002/app/\" + \"app001/upload\",\n        data: bodyFormData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        //handle success\n        if (response.data.messaeg = 1) {\n          setcustom_div1(true);\n          rangeValidation.setValues({\n            \"max_L_kdUser\": \"\",\n            \"max_L_nmUser\": \"\",\n            max_L_poc: 'POC AHM'\n          });\n          document.getElementById(\"idFileUpload\").value = \"\";\n        }\n\n        setDisableButton(false);\n        setVisibleSpinner(false);\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n        setDisableButton(false);\n        setVisibleSpinner(false);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"POC-Data Marking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Forms\",\n          breadcrumbItem: \"Entry data marking & upload foto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    rangeValidation.handleSubmit();\n                    return false;\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-2\",\n                    children: [custom_div1 ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n                      title: \"Success Entry Data\",\n                      timeout: 2000,\n                      style: {\n                        position: \"absolute\",\n                        top: \"0px\",\n                        right: \"0px\"\n                      },\n                      showCloseButton: false,\n                      showConfirm: false,\n                      success: true,\n                      onConfirm: () => {\n                        setcustom_div1(false);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 27\n                    }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n                      children: \"POC AHM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_poc\",\n                      type: \"text\",\n                      disabled: true,\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_poc || \"\",\n                      invalid: rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_poc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Kode User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_kdUser\",\n                      placeholder: \"Max 3 chars\",\n                      type: \"text\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_kdUser || \"\",\n                      invalid: rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_kdUser\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Nama User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_nmUser\",\n                      placeholder: \"Max 5 chars\",\n                      type: \"text\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_nmUser || \"\",\n                      invalid: rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_nmUser\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Upload File\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"idFileUpload\",\n                      name: \"max_L_upload\",\n                      type: \"file\",\n                      accept: \"image/*\",\n                      onChange: changeHandlerFile\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        disabled: disableButton,\n                        type: \"submit\",\n                        color: \"primary\",\n                        className: \"ms-1\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n                      style: {\n                        display: visibleSpinner ? \"block\" : \"none\",\n                        marginTop: '-35px'\n                      },\n                      className: \"ms-4\",\n                      color: \"danger\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EntryData, \"KXkOxWAex9byC+46eZ7LeOY1GWE=\", false, function () {\n  return [useFormik];\n});\n\n_c = EntryData;\nexport default EntryData;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryData\");","map":{"version":3,"sources":["D:/React_Code/appfe/src/pages/Entrydata/EntryData.js"],"names":["React","useState","useReducer","MetaTags","axios","Row","Col","Card","CardBody","FormGroup","Button","Label","Input","Container","FormFeedback","Form","Spinner","Yup","useFormik","Breadcrumbs","SweetAlert","EntryData","custom_div1","setcustom_div1","selectedFile","setSelectedFile","disableButton","setDisableButton","visibleSpinner","setVisibleSpinner","changeHandlerFile","event","target","files","rangeValidation","enableReinitialize","initialValues","max_L_kdUser","max_L_nmUser","max_L_poc","validationSchema","object","shape","string","max","required","onSubmit","values","bodyFormData","FormData","append","method","url","data","headers","then","response","messaeg","setValues","document","getElementById","value","catch","console","log","e","preventDefault","handleSubmit","position","top","right","handleChange","handleBlur","touched","errors","display","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\r\nimport MetaTags from 'react-meta-tags';\r\nimport axios from 'axios';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  FormFeedback,\r\n  Form,\r\n  Spinner\r\n} from \"reactstrap\";\r\n// Formik validation\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\n\r\n//SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nconst EntryData = () => {\r\n  const [custom_div1, setcustom_div1] = useState(false)\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [disableButton, setDisableButton] = React.useState(false);\r\n  const [visibleSpinner, setVisibleSpinner] = React.useState(false);\r\n\r\n  const changeHandlerFile = (event) => {\r\n\t\tsetSelectedFile(event.target.files[0]);\r\n\t};\r\n\r\n  const rangeValidation = useFormik({\r\n    // enableReinitialize : use this flag when initial values needs to be changed\r\n    enableReinitialize: true,\r\n  \r\n    initialValues: {\r\n      max_L_kdUser: '',\r\n      max_L_nmUser : '',\r\n      max_L_poc : 'POC AHM',\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      max_L_kdUser: Yup.string()\r\n        .max(3, \"Must be exactly 3 chars\")\r\n        .required(\"Max 3 chars\"),\r\n        max_L_nmUser: Yup.string()\r\n        .max(5, \"Must be exactly 5 chars\")\r\n        .required(\"Max 5 chars\"),\r\n    }),\r\n\r\n    \r\n    onSubmit: (values) => {\r\n      setDisableButton(true);\r\n      setVisibleSpinner(true);\r\n      var bodyFormData = new FormData();\r\n      bodyFormData.append('file', selectedFile); \r\n      bodyFormData.append('poc', values.max_L_poc); \r\n      bodyFormData.append('userId', values.max_L_kdUser); \r\n      bodyFormData.append('userNm', values.max_L_nmUser); \r\n      axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:9002/app/\"+\"app001/upload\",\r\n        data: bodyFormData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n        .then(function (response) {\r\n          //handle success\r\n          if(response.data.messaeg = 1){\r\n            setcustom_div1(true);\r\n            rangeValidation.setValues({\"max_L_kdUser\":\"\",\"max_L_nmUser\":\"\", max_L_poc : 'POC AHM'});\r\n            document.getElementById(\"idFileUpload\").value = \"\";\r\n          }\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n        })\r\n        .catch(function (response) {\r\n          //handle error\r\n          console.log(response);\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n        });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <MetaTags>\r\n          <title>\r\n          POC-Data Marking\r\n          </title>\r\n        </MetaTags>\r\n        <Container fluid={true}>\r\n          <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Entry data marking & upload foto\" />\r\n          \r\n          <Row>\r\n            <Col lg={6}>\r\n              <Card>\r\n                <CardBody>\r\n                  {/* <CardTitle>Validation type</CardTitle>\r\n                  <CardSubtitle className=\"mb-3\">\r\n                    Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server.\r\n                  </CardSubtitle> */}\r\n\r\n                  <Form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      rangeValidation.handleSubmit();\r\n                      return false;\r\n                    }}>\r\n                    <div className=\"mb-2\">\r\n                          {custom_div1 ? (\r\n                          <SweetAlert\r\n                            title=\"Success Entry Data\"\r\n                            timeout={2000}\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: \"0px\",\r\n                              right: \"0px\",\r\n                            }}\r\n                            showCloseButton={false}\r\n                            showConfirm={false}\r\n                            success\r\n                            onConfirm={() => {\r\n                              setcustom_div1(false)\r\n                            }}\r\n                          ></SweetAlert>\r\n                        ) : null}\r\n                      <Label>POC AHM</Label>\r\n                      <Input\r\n                        name=\"max_L_poc\"\r\n                        type=\"text\"\r\n                        disabled\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.max_L_poc || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\r\n                        }\r\n                      />\r\n                       {rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_poc}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <Label>Kode User</Label>\r\n                      <Input\r\n                        name=\"max_L_kdUser\"\r\n                        placeholder=\"Max 3 chars\"\r\n                        type=\"text\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.max_L_kdUser || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_kdUser}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <Label>Nama User</Label>\r\n                      <Input\r\n                        name=\"max_L_nmUser\"\r\n                        placeholder=\"Max 5 chars\"\r\n                        type=\"text\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.max_L_nmUser || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_nmUser}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <Label>Upload File</Label>\r\n                      <Input\r\n                        id=\"idFileUpload\"\r\n                        name=\"max_L_upload\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={changeHandlerFile}\r\n                      />\r\n                      \r\n                    </div>\r\n\r\n                    <FormGroup className=\"mb-0\">\r\n                      <div>\r\n                        <Button disabled={disableButton} type=\"submit\" color=\"primary\" className=\"ms-1\">\r\n                          Submit\r\n                        </Button>\r\n                      </div>\r\n                      <Spinner style={{ display: visibleSpinner ? \"block\" : \"none\", marginTop : '-35px'}} className=\"ms-4\" color=\"danger\" />\r\n                    </FormGroup>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            \r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EntryData"]},"metadata":{},"sourceType":"module"}