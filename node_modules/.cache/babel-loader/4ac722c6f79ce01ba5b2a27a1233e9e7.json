{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Code\\\\Skote_React_v3.3.1\\\\Admin-Hooks-Staterkit\\\\src\\\\pages\\\\Entrydata\\\\EntryData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { Row, Col, Card, CardBody, FormGroup, Button, CardTitle, CardSubtitle, Label, Input, Container, FormFeedback, Form } from \"reactstrap\"; // Formik validation\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormValidations = () => {\n  _s();\n\n  // Form validation \n  const validation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      city: '',\n      state: '',\n      zip: ''\n    },\n    validationSchema: Yup.object({\n      firstname: Yup.string().required(\"Please Enter Your First Name\"),\n      lastname: Yup.string().required(\"Please Enter Your Last Name\"),\n      city: Yup.string().required(\"Please Enter Your City\"),\n      state: Yup.string().required(\"Please Enter Your State\"),\n      zip: Yup.string().required(\"Please Enter Your Zip\")\n    }),\n    onSubmit: values => {\n      console.log(\"values\", values);\n    }\n  }); // Form validation \n\n  const validationType = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      username: '',\n      password: '',\n      password1: '',\n      email: '',\n      digits: '',\n      number: '',\n      alphanumeric: ''\n    },\n    validationSchema: Yup.object().shape({\n      username: Yup.string().required(\"This value is required\"),\n      password: Yup.string().required(\"This value is required\"),\n      password1: Yup.string().when(\"password\", {\n        is: val => val && val.length > 0 ? true : false,\n        then: Yup.string().oneOf([Yup.ref(\"password\")], \"Both password need to be the same\")\n      }),\n      email: Yup.string().email(\"Must be a valid Email\").max(255).required(\"Email is required\"),\n      url: Yup.string().matches(/((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/, \"Enter correct url!\").required(\"Please enter correct Url\"),\n      digits: Yup.number().required(\"Please Enter Your Digits\"),\n      number: Yup.number().required(\"Please Enter Your Number\"),\n      alphanumeric: Yup.string().matches(/^[a-z0-9]+$/i, \"Enter correct Alphanumeric!\").required(\"Please Enter Your Alphanumeric\"),\n      textarea: Yup.string().required(\"Please Enter Your Textarea\")\n    }),\n    onSubmit: values => {\n      console.log(\"values\", values);\n    }\n  });\n  const regExp = /\\b\\d{5}\\b/; // Form validation \n\n  const rangeValidation = useFormik({\n    // enableReinitialize : use this flag when initial values needs to be changed\n    enableReinitialize: true,\n    initialValues: {\n      min_Length: '',\n      max_Length: '',\n      min_Value: '',\n      max_Value: '',\n      range_Value: '',\n      regular_Exp: ''\n    },\n    validationSchema: Yup.object().shape({\n      min_Length: Yup.string().min(6, \"Must be exactly 6 digits\").required(\"Min 6 chars\"),\n      max_Length: Yup.string().max(6, \"Must be exactly 6 digits\").required(\"Max 6 chars\"),\n      min_Value: Yup.string().required(\"Min Value 6\").test('val', 'This value should be greater than or equal to 6', val => val >= 6),\n      max_Value: Yup.string().required(\"Max Value 6\").matches(/^[0-6]+$/, \"This value should be lower than or equal to 6.\"),\n      range_Value: Yup.string().required(\"range between 5 to 10\").min(5, \"This value should be between 5 and 10\").max(10, \"This value should be between 5 and 10\"),\n      regular_Exp: Yup.string().matches(/^[#0-9]+$/, \"Only Hex Value\").required(\"Only Hex Value\")\n    }),\n    onSubmit: values => {\n      console.log(\"values\", values);\n    }\n  });\n  const [formValidation, setValidation] = useState({\n    fnm: null,\n    lnm: null,\n    unm: null,\n    city: null,\n    stateV: null\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const modifiedV = { ...formValidation\n    };\n    var fnm = document.getElementById(\"validationTooltip01\").value;\n    var lnm = document.getElementById(\"validationTooltip02\").value;\n    var unm = document.getElementById(\"validationTooltipUsername\").value;\n    var city = document.getElementById(\"validationTooltip03\").value;\n    var stateV = document.getElementById(\"validationTooltip04\").value;\n\n    if (fnm === \"\") {\n      modifiedV[\"fnm\"] = false;\n    } else {\n      modifiedV[\"fnm\"] = true;\n    }\n\n    if (lnm === \"\") {\n      modifiedV[\"lnm\"] = false;\n    } else {\n      modifiedV[\"lnm\"] = true;\n    }\n\n    if (unm === \"\") {\n      modifiedV[\"unm\"] = false;\n    } else {\n      modifiedV[\"unm\"] = true;\n    }\n\n    if (city === \"\") {\n      modifiedV[\"city\"] = false;\n    } else {\n      modifiedV[\"city\"] = true;\n    }\n\n    if (stateV === \"\") {\n      modifiedV[\"stateV\"] = false;\n    } else {\n      modifiedV[\"stateV\"] = true;\n    }\n\n    setValidation(modifiedV);\n  } //for change tooltip display propery\n\n\n  const onChangeValidation = (fieldName, value) => {\n    const modifiedV = { ...validation\n    };\n\n    if (value !== \"\") {\n      modifiedV[fieldName] = true;\n    } else {\n      modifiedV[fieldName] = false;\n    }\n\n    setValidation(modifiedV);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Form Validation | Skote - React Admin & Dashboard Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Forms\",\n          breadcrumbItem: \"Form Validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xl: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: \"React Validation - Normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: \"Provide valuable, actionable feedback to your users with HTML5 form validation\\u2013available in all our supported browsers.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"needs-validation\",\n                  onSubmit: e => {\n                    e.preventDefault();\n                    validation.handleSubmit();\n                    return false;\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom01\",\n                          children: \"First name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 239,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"firstname\",\n                          placeholder: \"First name\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationCustom01\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.firstname || \"\",\n                          invalid: validation.touched.firstname && validation.errors.firstname ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 240,\n                          columnNumber: 27\n                        }, this), validation.touched.firstname && validation.errors.firstname ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.firstname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 254,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom02\",\n                          children: \"Last name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 260,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"lastname\",\n                          placeholder: \"Last name\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationCustom02\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.lastname || \"\",\n                          invalid: validation.touched.lastname && validation.errors.lastname ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 261,\n                          columnNumber: 27\n                        }, this), validation.touched.lastname && validation.errors.lastname ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.lastname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 275,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom03\",\n                          children: \"City\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"city\",\n                          placeholder: \"City\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.city || \"\",\n                          invalid: validation.touched.city && validation.errors.city ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 27\n                        }, this), validation.touched.city && validation.errors.city ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.city\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom04\",\n                          children: \"State\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 303,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"state\",\n                          placeholder: \"State\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationCustom04\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.state || \"\",\n                          invalid: validation.touched.state && validation.errors.state ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 27\n                        }, this), validation.touched.state && validation.errors.state ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.state\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 318,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationCustom05\",\n                          children: \"Zip\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 324,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          name: \"zip\",\n                          placeholder: \"Zip Code\",\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationCustom05\",\n                          onChange: validation.handleChange,\n                          onBlur: validation.handleBlur,\n                          value: validation.values.zip || \"\",\n                          invalid: validation.touched.zip && validation.errors.zip ? true : false\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 325,\n                          columnNumber: 27\n                        }, this), validation.touched.zip && validation.errors.zip ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                          type: \"invalid\",\n                          children: validation.errors.zip\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 339,\n                          columnNumber: 29\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      lg: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"mb-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-check\",\n                          children: [/*#__PURE__*/_jsxDEV(Input, {\n                            type: \"checkbox\",\n                            className: \"form-check-input\",\n                            id: \"invalidCheck\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 348,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Label, {\n                            className: \"form-check-label\",\n                            htmlFor: \"invalidCheck\",\n                            children: [\" \", \"Agree to terms and conditions\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 353,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 347,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Submit form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: \"React Validation (Tooltips)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: [\"If your form layout allows it, you can swap the\", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: [\".\", \"{valid | invalid-}\", \"feedback\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 21\n                  }, this), \" classes for\", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: [\".\", \"{valid | invalid-}\", \"-tooltip\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 21\n                  }, this), \" classes to display validation feedback in a styled tooltip.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"needs-validation\",\n                  method: \"post\",\n                  id: \"tooltipForm\",\n                  onSubmit: e => {\n                    handleSubmit(e);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip01\",\n                          children: \"First name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 393,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip01\",\n                          placeholder: \"First name\",\n                          onChange: event => {\n                            onChangeValidation(\"fnm\", event.target.value);\n                          },\n                          valid: validation[\"fnm\"] === true,\n                          invalid: validation[\"fnm\"] !== true && validation[\"fnm\"] !== null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 396,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: validation[\"fnm\"] === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate1\",\n                          children: validation[\"fnm\"] === true ? \"Looks good!\" : \"Please Enter Valid First Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip02\",\n                          children: \"Last name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 428,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip02\",\n                          placeholder: \"Last name\",\n                          onChange: event => onChangeValidation(\"lnm\", event.target.value),\n                          valid: validation[\"lnm\"] === true,\n                          invalid: validation[\"lnm\"] !== true && validation[\"lnm\"] !== null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 429,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: validation[\"lnm\"] === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate2\",\n                          children: validation[\"lnm\"] === true ? \"Looks good!\" : \"Please Enter Valid Last Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 443,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 427,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltipUsername\",\n                          children: \"Username\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 460,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"input-group\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"input-group-prepend\",\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"input-group-text\",\n                              id: \"validationTooltipUsernamePrepend\",\n                              children: \"@\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 465,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 464,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Input, {\n                            type: \"text\",\n                            className: \"form-control\",\n                            id: \"validationTooltipUsername\",\n                            placeholder: \"Username\",\n                            onChange: event => onChangeValidation(\"unm\", event.target.value),\n                            valid: validation[\"unm\"] === true,\n                            invalid: validation[\"unm\"] !== true && validation[\"unm\"] !== null\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 472,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: validation[\"unm\"] === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                            name: \"validate\",\n                            id: \"validate3\",\n                            children: validation[\"unm\"] === true ? \"Looks good!\" : \"Please choose a unique and valid username.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 486,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 463,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 459,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip03\",\n                          children: \"City\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 506,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip03\",\n                          placeholder: \"City\",\n                          onChange: event => onChangeValidation(\"city\", event.target.value),\n                          valid: validation[\"city\"] === true,\n                          invalid: validation[\"city\"] !== true && validation[\"city\"] !== null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 507,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: validation[\"city\"] === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate4\",\n                          children: validation[\"city\"] === true ? \"Looks good!\" : \"Please choose a unique and valid username.Please provide a valid city.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 521,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 505,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3 position-relative\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"validationTooltip04\",\n                          children: \"State\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 538,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltip04\",\n                          placeholder: \"State\",\n                          onChange: event => onChangeValidation(\"stateV\", event.target.value),\n                          valid: validation[\"stateV\"] === true,\n                          invalid: validation[\"stateV\"] !== true && validation[\"stateV\"] !== null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 539,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: validation[\"stateV\"] === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate5\",\n                          children: validation[\"stateV\"] === true ? \"Looks good!\" : \"Please provide a valid state.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 553,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 537,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 536,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Submit form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  children: \"Validation type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                  className: \"mb-3\",\n                  children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    validationType.handleSubmit();\n                    return false;\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"username\",\n                      placeholder: \"Type Something\",\n                      type: \"text\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.username || \"\",\n                      invalid: validationType.touched.username && validationType.errors.username ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 23\n                    }, this), validationType.touched.username && validationType.errors.username ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 594,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Equal To\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"password\",\n                      type: \"password\",\n                      placeholder: \"Password\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.password || \"\",\n                      invalid: validationType.touched.password && validationType.errors.password ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 23\n                    }, this), validationType.touched.password && validationType.errors.password ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      name: \"password1\",\n                      type: \"password\",\n                      placeholder: \"Re-type Password\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.password1 || \"\",\n                      invalid: validationType.touched.password1 && validationType.errors.password1 ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 23\n                    }, this), validationType.touched.password1 && validationType.errors.password1 ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.password1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 641,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"E-Mail\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"email\",\n                      placeholder: \"Enter Valid Email\",\n                      type: \"email\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.email || \"\",\n                      invalid: validationType.touched.email && validationType.errors.email ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 23\n                    }, this), validationType.touched.email && validationType.errors.email ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 658,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Digits\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"digits\",\n                      label: \"Digits\",\n                      placeholder: \"Enter Only Digits\",\n                      type: \"number\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.digits || \"\",\n                      invalid: validationType.touched.digits && validationType.errors.digits ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 663,\n                      columnNumber: 23\n                    }, this), validationType.touched.digits && validationType.errors.digits ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.digits\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 676,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 680,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"number\",\n                      placeholder: \"Enter Only number\",\n                      type: \"number\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.number || \"\",\n                      invalid: validationType.touched.number && validationType.errors.number ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 681,\n                      columnNumber: 23\n                    }, this), validationType.touched.number && validationType.errors.number ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.number\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 693,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Alphanumeric\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 697,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"alphanumeric\",\n                      placeholder: \"Enter Only alphanumeric value\",\n                      type: \"text\",\n                      onChange: validationType.handleChange,\n                      onBlur: validationType.handleBlur,\n                      value: validationType.values.alphanumeric || \"\",\n                      invalid: validationType.touched.alphanumeric && validationType.errors.alphanumeric ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 698,\n                      columnNumber: 23\n                    }, this), validationType.touched.alphanumeric && validationType.errors.alphanumeric ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: validationType.errors.alphanumeric\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 710,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 696,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-wrap gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      color: \"primary\",\n                      className: \"\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 714,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"reset\",\n                      color: \"secondary\",\n                      className: \"\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 717,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  children: \"Range validation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                  className: \"mb-3\",\n                  children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    rangeValidation.handleSubmit();\n                    return false;\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Min Length\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 744,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"min_Length\",\n                      label: \"Min Length  \",\n                      placeholder: \"Min 6 chars\",\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.min_Length || \"\",\n                      invalid: rangeValidation.touched.min_Length && rangeValidation.errors.min_Length ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 745,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.min_Length && rangeValidation.errors.min_Length ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.min_Length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 758,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Max Length\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_Length\",\n                      placeholder: \"Max 6 chars\",\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_Length || \"\",\n                      invalid: rangeValidation.touched.max_Length && rangeValidation.errors.max_Length ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_Length && rangeValidation.errors.max_Length ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_Length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 775,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Min Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 779,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"min_Value\",\n                      placeholder: \"Min 6 Chars\",\n                      min: 6,\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.min_Value || \"\",\n                      invalid: rangeValidation.touched.min_Value && rangeValidation.errors.min_Value ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 780,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.min_Value && rangeValidation.errors.min_Value ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.min_Value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 793,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 778,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Max Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 797,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_Value\",\n                      placeholder: \"max 5 Chars\",\n                      max: 6,\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_Value || \"\",\n                      invalid: rangeValidation.touched.max_Value && rangeValidation.errors.max_Value ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 798,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.max_Value && rangeValidation.errors.max_Value ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_Value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 796,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Range Length\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 815,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"range_Value\",\n                      placeholder: \"Text between 5 - 10 chars length\",\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.range_Value || \"\",\n                      invalid: rangeValidation.touched.range_Value && rangeValidation.errors.range_Value ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 816,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.range_Value && rangeValidation.errors.range_Value ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.range_Value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 828,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      className: \"form-label\",\n                      children: \"Regular Exp\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 832,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"regular_Exp\",\n                      placeholder: \"Hex. Color\",\n                      type: \"number\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.regular_Exp || \"\",\n                      invalid: rangeValidation.touched.regular_Exp && rangeValidation.errors.regular_Exp ? true : false // validate={{\n                      //   required: { value: true },\n                      //   pattern: {\n                      //     value: \"^[#0-9]+$\",\n                      //     errorMessage: \"Only Hex Value\",\n                      //   },\n                      // }}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 833,\n                      columnNumber: 23\n                    }, this), rangeValidation.touched.regular_Exp && rangeValidation.errors.regular_Exp ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.regular_Exp\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 852,\n                      columnNumber: 25\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        color: \"primary\",\n                        className: \"ms-1\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 857,\n                        columnNumber: 25\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"reset\",\n                        color: \"secondary\",\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 860,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 856,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 855,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormValidations, \"9iq9kewz7Iqzi5GFtlzTPAf2p28=\", false, function () {\n  return [useFormik, useFormik, useFormik];\n});\n\n_c = FormValidations;\nexport default EntryData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidations\");","map":{"version":3,"sources":["D:/React_Code/Skote_React_v3.3.1/Admin-Hooks-Staterkit/src/pages/Entrydata/EntryData.js"],"names":["React","useState","MetaTags","Row","Col","Card","CardBody","FormGroup","Button","CardTitle","CardSubtitle","Label","Input","Container","FormFeedback","Form","Yup","useFormik","Breadcrumbs","FormValidations","validation","enableReinitialize","initialValues","firstname","lastname","city","state","zip","validationSchema","object","string","required","onSubmit","values","console","log","validationType","username","password","password1","email","digits","number","alphanumeric","shape","when","is","val","length","then","oneOf","ref","max","url","matches","textarea","regExp","rangeValidation","min_Length","max_Length","min_Value","max_Value","range_Value","regular_Exp","min","test","formValidation","setValidation","fnm","lnm","unm","stateV","handleSubmit","e","preventDefault","modifiedV","document","getElementById","value","onChangeValidation","fieldName","handleChange","handleBlur","touched","errors","event","target","EntryData"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Button,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  FormFeedback,\r\n  Form,\r\n} from \"reactstrap\";\r\n// Formik validation\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\n\r\nconst FormValidations = () => {\r\n\r\n  // Form validation \r\n  const validation = useFormik({\r\n    // enableReinitialize : use this flag when initial values needs to be changed\r\n    enableReinitialize: true,\r\n\r\n    initialValues: {\r\n      firstname: '',\r\n      lastname: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      firstname: Yup.string().required(\"Please Enter Your First Name\"),\r\n      lastname: Yup.string().required(\"Please Enter Your Last Name\"),\r\n      city: Yup.string().required(\"Please Enter Your City\"),\r\n      state: Yup.string().required(\"Please Enter Your State\"),\r\n      zip: Yup.string().required(\"Please Enter Your Zip\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(\"values\", values);\r\n    }\r\n  });\r\n\r\n  // Form validation \r\n  const validationType = useFormik({\r\n    // enableReinitialize : use this flag when initial values needs to be changed\r\n    enableReinitialize: true,\r\n\r\n    initialValues: {\r\n      username: '',\r\n      password: '',\r\n      password1: '',\r\n      email: '',\r\n      digits: '',\r\n      number: '',\r\n      alphanumeric: '',\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      username: Yup.string().required(\r\n        \"This value is required\"\r\n      ),\r\n      password: Yup.string().required(\r\n        \"This value is required\"\r\n      ),\r\n      password1: Yup.string().when(\"password\", {\r\n        is: val => (val && val.length > 0 ? true : false),\r\n        then: Yup.string().oneOf(\r\n          [Yup.ref(\"password\")],\r\n          \"Both password need to be the same\"\r\n        ),\r\n      }),\r\n      email: Yup.string()\r\n        .email(\"Must be a valid Email\")\r\n        .max(255)\r\n        .required(\"Email is required\"),\r\n      url: Yup.string()\r\n        .matches(\r\n          /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\r\n          \"Enter correct url!\"\r\n        )\r\n        .required(\"Please enter correct Url\"),\r\n      digits: Yup.number().required(\r\n        \"Please Enter Your Digits\"\r\n      ),\r\n      number: Yup.number().required(\r\n        \"Please Enter Your Number\"\r\n      ),\r\n      alphanumeric: Yup.string()\r\n        .matches(\r\n          /^[a-z0-9]+$/i,\r\n          \"Enter correct Alphanumeric!\"\r\n        )\r\n        .required(\"Please Enter Your Alphanumeric\"),\r\n      textarea: Yup.string().required(\r\n        \"Please Enter Your Textarea\"\r\n      ),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(\"values\", values);\r\n    }\r\n  });\r\n  const regExp = /\\b\\d{5}\\b/;\r\n  // Form validation \r\n  const rangeValidation = useFormik({\r\n    // enableReinitialize : use this flag when initial values needs to be changed\r\n    enableReinitialize: true,\r\n\r\n    initialValues: {\r\n      min_Length: '',\r\n      max_Length: '',\r\n      min_Value: '',\r\n      max_Value: '',\r\n      range_Value: '',\r\n      regular_Exp: '',\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      min_Length: Yup.string()\r\n        .min(6, \"Must be exactly 6 digits\")\r\n        .required(\"Min 6 chars\"),\r\n      max_Length: Yup.string()\r\n        .max(6, \"Must be exactly 6 digits\")\r\n        .required(\"Max 6 chars\"),\r\n      min_Value: Yup.string().required(\"Min Value 6\").test('val', 'This value should be greater than or equal to 6', val => val >= 6),\r\n      max_Value: Yup.string().required(\"Max Value 6\").matches(/^[0-6]+$/, \"This value should be lower than or equal to 6.\"),\r\n      range_Value: Yup.string().required(\r\n        \"range between 5 to 10\"\r\n      ).min(5, \"This value should be between 5 and 10\")\r\n        .max(10, \"This value should be between 5 and 10\"),\r\n      regular_Exp: Yup.string()\r\n        .matches(\r\n          /^[#0-9]+$/,\r\n          \"Only Hex Value\"\r\n        )\r\n        .required(\"Only Hex Value\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      console.log(\"values\", values);\r\n    }\r\n  });\r\n\r\n  const [formValidation, setValidation] = useState({\r\n    fnm: null,\r\n    lnm: null,\r\n    unm: null,\r\n    city: null,\r\n    stateV: null,\r\n  });\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const modifiedV = { ...formValidation };\r\n    var fnm = document.getElementById(\"validationTooltip01\").value;\r\n    var lnm = document.getElementById(\"validationTooltip02\").value;\r\n    var unm = document.getElementById(\"validationTooltipUsername\").value;\r\n    var city = document.getElementById(\"validationTooltip03\").value;\r\n    var stateV = document.getElementById(\"validationTooltip04\").value;\r\n\r\n    if (fnm === \"\") {\r\n      modifiedV[\"fnm\"] = false;\r\n    } else {\r\n      modifiedV[\"fnm\"] = true;\r\n    }\r\n\r\n    if (lnm === \"\") {\r\n      modifiedV[\"lnm\"] = false;\r\n    } else {\r\n      modifiedV[\"lnm\"] = true;\r\n    }\r\n\r\n    if (unm === \"\") {\r\n      modifiedV[\"unm\"] = false;\r\n    } else {\r\n      modifiedV[\"unm\"] = true;\r\n    }\r\n\r\n    if (city === \"\") {\r\n      modifiedV[\"city\"] = false;\r\n    } else {\r\n      modifiedV[\"city\"] = true;\r\n    }\r\n\r\n    if (stateV === \"\") {\r\n      modifiedV[\"stateV\"] = false;\r\n    } else {\r\n      modifiedV[\"stateV\"] = true;\r\n    }\r\n    setValidation(modifiedV);\r\n  }\r\n\r\n  //for change tooltip display propery\r\n  const onChangeValidation = (fieldName, value) => {\r\n    const modifiedV = { ...validation };\r\n    if (value !== \"\") {\r\n      modifiedV[fieldName] = true;\r\n    } else {\r\n      modifiedV[fieldName] = false;\r\n    }\r\n    setValidation(modifiedV);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <MetaTags>\r\n          <title>\r\n            Form Validation | Skote - React Admin & Dashboard Template\r\n          </title>\r\n        </MetaTags>\r\n        <Container fluid={true}>\r\n          <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Form Validation\" />\r\n          <Row>\r\n            <Col xl=\"6\">\r\n              <Card>\r\n                <CardBody>\r\n                  <h4 className=\"card-title\">React Validation - Normal</h4>\r\n                  <p className=\"card-title-desc\">\r\n                    Provide valuable, actionable feedback to your users with\r\n                    HTML5 form validation–available in all our supported\r\n                    browsers.\r\n                  </p>\r\n                  <Form className=\"needs-validation\"\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      validation.handleSubmit();\r\n                      return false;\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <FormGroup className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom01\">First name</Label>\r\n                          <Input\r\n                            name=\"firstname\"\r\n                            placeholder=\"First name\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"validationCustom01\"\r\n                            onChange={validation.handleChange}\r\n                            onBlur={validation.handleBlur}\r\n                            value={validation.values.firstname || \"\"}\r\n                            invalid={\r\n                              validation.touched.firstname && validation.errors.firstname ? true : false\r\n                            }\r\n                          />\r\n                          {validation.touched.firstname && validation.errors.firstname ? (\r\n                            <FormFeedback type=\"invalid\">{validation.errors.firstname}</FormFeedback>\r\n                          ) : null}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <FormGroup className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom02\">Last name</Label>\r\n                          <Input\r\n                            name=\"lastname\"\r\n                            placeholder=\"Last name\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"validationCustom02\"\r\n                            onChange={validation.handleChange}\r\n                            onBlur={validation.handleBlur}\r\n                            value={validation.values.lastname || \"\"}\r\n                            invalid={\r\n                              validation.touched.lastname && validation.errors.lastname ? true : false\r\n                            }\r\n                          />\r\n                          {validation.touched.lastname && validation.errors.lastname ? (\r\n                            <FormFeedback type=\"invalid\">{validation.errors.lastname}</FormFeedback>\r\n                          ) : null}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"4\">\r\n                        <FormGroup className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom03\">City</Label>\r\n                          <Input\r\n                            name=\"city\"\r\n                            placeholder=\"City\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            onChange={validation.handleChange}\r\n                            onBlur={validation.handleBlur}\r\n                            value={validation.values.city || \"\"}\r\n                            invalid={\r\n                              validation.touched.city && validation.errors.city ? true : false\r\n                            }\r\n                          />\r\n                          {validation.touched.city && validation.errors.city ? (\r\n                            <FormFeedback type=\"invalid\">{validation.errors.city}</FormFeedback>\r\n                          ) : null}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"4\">\r\n                        <FormGroup className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom04\">State</Label>\r\n                          <Input\r\n                            name=\"state\"\r\n                            placeholder=\"State\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"validationCustom04\"\r\n                            onChange={validation.handleChange}\r\n                            onBlur={validation.handleBlur}\r\n                            value={validation.values.state || \"\"}\r\n                            invalid={\r\n                              validation.touched.state && validation.errors.state ? true : false\r\n                            }\r\n                          />\r\n                          {validation.touched.state && validation.errors.state ? (\r\n                            <FormFeedback type=\"invalid\">{validation.errors.state}</FormFeedback>\r\n                          ) : null}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"4\">\r\n                        <FormGroup className=\"mb-3\">\r\n                          <Label htmlFor=\"validationCustom05\">Zip</Label>\r\n                          <Input\r\n                            name=\"zip\"\r\n                            placeholder=\"Zip Code\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"validationCustom05\"\r\n                            onChange={validation.handleChange}\r\n                            onBlur={validation.handleBlur}\r\n                            value={validation.values.zip || \"\"}\r\n                            invalid={\r\n                              validation.touched.zip && validation.errors.zip ? true : false\r\n                            }\r\n                          />\r\n                          {validation.touched.zip && validation.errors.zip ? (\r\n                            <FormFeedback type=\"invalid\">{validation.errors.zip}</FormFeedback>\r\n                          ) : null}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col lg=\"12\">\r\n                        <FormGroup className=\"mb-3\">\r\n                          <div className=\"form-check\">\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              className=\"form-check-input\"\r\n                              id=\"invalidCheck\"\r\n                            />\r\n                            <Label\r\n                              className=\"form-check-label\"\r\n                              htmlFor=\"invalidCheck\"\r\n                            >\r\n                              {\" \"}\r\n                              Agree to terms and conditions\r\n                            </Label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                      Submit form\r\n                    </Button>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col xl=\"6\">\r\n              <Card>\r\n                <CardBody>\r\n                  <h4 className=\"card-title\">React Validation (Tooltips)</h4>\r\n                  <p className=\"card-title-desc\">\r\n                    If your form layout allows it, you can swap the\r\n                    <code>.{\"{valid | invalid-}\"}feedback</code> classes for\r\n                    <code>.{\"{valid | invalid-}\"}-tooltip</code> classes to\r\n                    display validation feedback in a styled tooltip.\r\n                  </p>\r\n                  <form\r\n                    className=\"needs-validation\"\r\n                    method=\"post\"\r\n                    id=\"tooltipForm\"\r\n                    onSubmit={e => {\r\n                      handleSubmit(e);\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"4\">\r\n                        <div className=\"mb-3 position-relative\">\r\n                          <Label htmlFor=\"validationTooltip01\">\r\n                            First name\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"validationTooltip01\"\r\n                            placeholder=\"First name\"\r\n                            onChange={event => {\r\n                              onChangeValidation(\"fnm\", event.target.value);\r\n                            }}\r\n                            valid={validation[\"fnm\"] === true}\r\n                            invalid={\r\n                              validation[\"fnm\"] !== true &&\r\n                              validation[\"fnm\"] !== null\r\n                            }\r\n                          />\r\n\r\n                          <div\r\n                            className={\r\n                              validation[\"fnm\"] === true\r\n                                ? \"valid-tooltip\"\r\n                                : \"invalid-tooltip\"\r\n                            }\r\n                            name=\"validate\"\r\n                            id=\"validate1\"\r\n                          >\r\n                            {validation[\"fnm\"] === true\r\n                              ? \"Looks good!\"\r\n                              : \"Please Enter Valid First Name\"}\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"4\">\r\n                        <div className=\"mb-3 position-relative\">\r\n                          <Label htmlFor=\"validationTooltip02\">Last name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"validationTooltip02\"\r\n                            placeholder=\"Last name\"\r\n                            onChange={event =>\r\n                              onChangeValidation(\"lnm\", event.target.value)\r\n                            }\r\n                            valid={validation[\"lnm\"] === true}\r\n                            invalid={\r\n                              validation[\"lnm\"] !== true &&\r\n                              validation[\"lnm\"] !== null\r\n                            }\r\n                          />\r\n                          <div\r\n                            className={\r\n                              validation[\"lnm\"] === true\r\n                                ? \"valid-tooltip\"\r\n                                : \"invalid-tooltip\"\r\n                            }\r\n                            name=\"validate\"\r\n                            id=\"validate2\"\r\n                          >\r\n                            {validation[\"lnm\"] === true\r\n                              ? \"Looks good!\"\r\n                              : \"Please Enter Valid Last Name\"}\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"4\">\r\n                        <div className=\"mb-3 position-relative\">\r\n                          <Label htmlFor=\"validationTooltipUsername\">\r\n                            Username\r\n                          </Label>\r\n                          <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                              <span\r\n                                className=\"input-group-text\"\r\n                                id=\"validationTooltipUsernamePrepend\"\r\n                              >\r\n                                @\r\n                              </span>\r\n                            </div>\r\n                            <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"validationTooltipUsername\"\r\n                              placeholder=\"Username\"\r\n                              onChange={event =>\r\n                                onChangeValidation(\"unm\", event.target.value)\r\n                              }\r\n                              valid={validation[\"unm\"] === true}\r\n                              invalid={\r\n                                validation[\"unm\"] !== true &&\r\n                                validation[\"unm\"] !== null\r\n                              }\r\n                            />\r\n                            <div\r\n                              className={\r\n                                validation[\"unm\"] === true\r\n                                  ? \"valid-tooltip\"\r\n                                  : \"invalid-tooltip\"\r\n                              }\r\n                              name=\"validate\"\r\n                              id=\"validate3\"\r\n                            >\r\n                              {validation[\"unm\"] === true\r\n                                ? \"Looks good!\"\r\n                                : \"Please choose a unique and valid username.\"}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <div className=\"mb-3 position-relative\">\r\n                          <Label htmlFor=\"validationTooltip03\">City</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"validationTooltip03\"\r\n                            placeholder=\"City\"\r\n                            onChange={event =>\r\n                              onChangeValidation(\"city\", event.target.value)\r\n                            }\r\n                            valid={validation[\"city\"] === true}\r\n                            invalid={\r\n                              validation[\"city\"] !== true &&\r\n                              validation[\"city\"] !== null\r\n                            }\r\n                          />\r\n                          <div\r\n                            className={\r\n                              validation[\"city\"] === true\r\n                                ? \"valid-tooltip\"\r\n                                : \"invalid-tooltip\"\r\n                            }\r\n                            name=\"validate\"\r\n                            id=\"validate4\"\r\n                          >\r\n                            {validation[\"city\"] === true\r\n                              ? \"Looks good!\"\r\n                              : \"Please choose a unique and valid username.Please provide a valid city.\"}\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <div className=\"mb-3 position-relative\">\r\n                          <Label htmlFor=\"validationTooltip04\">State</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"validationTooltip04\"\r\n                            placeholder=\"State\"\r\n                            onChange={event =>\r\n                              onChangeValidation(\"stateV\", event.target.value)\r\n                            }\r\n                            valid={validation[\"stateV\"] === true}\r\n                            invalid={\r\n                              validation[\"stateV\"] !== true &&\r\n                              validation[\"stateV\"] !== null\r\n                            }\r\n                          />\r\n                          <div\r\n                            className={\r\n                              validation[\"stateV\"] === true\r\n                                ? \"valid-tooltip\"\r\n                                : \"invalid-tooltip\"\r\n                            }\r\n                            name=\"validate\"\r\n                            id=\"validate5\"\r\n                          >\r\n                            {validation[\"stateV\"] === true\r\n                              ? \"Looks good!\"\r\n                              : \"Please provide a valid state.\"}\r\n                          </div>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                      Submit form\r\n                    </Button>\r\n                  </form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg={6}>\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>Validation type</CardTitle>\r\n                  <CardSubtitle className=\"mb-3\">\r\n                    Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server.\r\n                  </CardSubtitle>\r\n\r\n                  <Form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      validationType.handleSubmit();\r\n                      return false;\r\n                    }}>\r\n                    <div className=\"mb-3\">\r\n                      <Label className=\"form-label\">Required</Label>\r\n                      <Input\r\n                        name=\"username\"\r\n                        placeholder=\"Type Something\"\r\n                        type=\"text\"\r\n                        onChange={validationType.handleChange}\r\n                        onBlur={validationType.handleBlur}\r\n                        value={validationType.values.username || \"\"}\r\n                        invalid={\r\n                          validationType.touched.username && validationType.errors.username ? true : false\r\n                        }\r\n                      />\r\n                      {validationType.touched.username && validationType.errors.username ? (\r\n                        <FormFeedback type=\"invalid\">{validationType.errors.username}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label>Equal To</Label>\r\n                      <Input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={validationType.handleChange}\r\n                        onBlur={validationType.handleBlur}\r\n                        value={validationType.values.password || \"\"}\r\n                        invalid={\r\n                          validationType.touched.password && validationType.errors.password ? true : false\r\n                        }\r\n                      />\r\n                      {validationType.touched.password && validationType.errors.password ? (\r\n                        <FormFeedback type=\"invalid\">{validationType.errors.password}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Input\r\n                        name=\"password1\"\r\n                        type=\"password\"\r\n                        placeholder=\"Re-type Password\"\r\n                        onChange={validationType.handleChange}\r\n                        onBlur={validationType.handleBlur}\r\n                        value={validationType.values.password1 || \"\"}\r\n                        invalid={\r\n                          validationType.touched.password1 && validationType.errors.password1 ? true : false\r\n                        }\r\n                      />\r\n                      {validationType.touched.password1 && validationType.errors.password1 ? (\r\n                        <FormFeedback type=\"invalid\">{validationType.errors.password1}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label className=\"form-label\">E-Mail</Label>\r\n                      <Input\r\n                        name=\"email\"\r\n                        placeholder=\"Enter Valid Email\"\r\n                        type=\"email\"\r\n                        onChange={validationType.handleChange}\r\n                        onBlur={validationType.handleBlur}\r\n                        value={validationType.values.email || \"\"}\r\n                        invalid={\r\n                          validationType.touched.email && validationType.errors.email ? true : false\r\n                        }\r\n                      />\r\n                      {validationType.touched.email && validationType.errors.email ? (\r\n                        <FormFeedback type=\"invalid\">{validationType.errors.email}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label className=\"form-label\">Digits</Label>\r\n                      <Input\r\n                        name=\"digits\"\r\n                        label=\"Digits\"\r\n                        placeholder=\"Enter Only Digits\"\r\n                        type=\"number\"\r\n                        onChange={validationType.handleChange}\r\n                        onBlur={validationType.handleBlur}\r\n                        value={validationType.values.digits || \"\"}\r\n                        invalid={\r\n                          validationType.touched.digits && validationType.errors.digits ? true : false\r\n                        }\r\n                      />\r\n                      {validationType.touched.digits && validationType.errors.digits ? (\r\n                        <FormFeedback type=\"invalid\">{validationType.errors.digits}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label className=\"form-label\">Number</Label>\r\n                      <Input\r\n                        name=\"number\"\r\n                        placeholder=\"Enter Only number\"\r\n                        type=\"number\"\r\n                        onChange={validationType.handleChange}\r\n                        onBlur={validationType.handleBlur}\r\n                        value={validationType.values.number || \"\"}\r\n                        invalid={\r\n                          validationType.touched.number && validationType.errors.number ? true : false\r\n                        }\r\n                      />\r\n                      {validationType.touched.number && validationType.errors.number ? (\r\n                        <FormFeedback type=\"invalid\">{validationType.errors.number}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label className=\"form-label\">Alphanumeric</Label>\r\n                      <Input\r\n                        name=\"alphanumeric\"\r\n                        placeholder=\"Enter Only alphanumeric value\"\r\n                        type=\"text\"\r\n                        onChange={validationType.handleChange}\r\n                        onBlur={validationType.handleBlur}\r\n                        value={validationType.values.alphanumeric || \"\"}\r\n                        invalid={\r\n                          validationType.touched.alphanumeric && validationType.errors.alphanumeric ? true : false\r\n                        }\r\n                      />\r\n                      {validationType.touched.alphanumeric && validationType.errors.alphanumeric ? (\r\n                        <FormFeedback type=\"invalid\">{validationType.errors.alphanumeric}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap gap-2\">\r\n                      <Button type=\"submit\" color=\"primary\" className=\"\">\r\n                        Submit\r\n                      </Button>{\" \"}\r\n                      <Button type=\"reset\" color=\"secondary\" className=\"\">\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col lg={6}>\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>Range validation</CardTitle>\r\n                  <CardSubtitle className=\"mb-3\">\r\n                    Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server.\r\n                  </CardSubtitle>\r\n\r\n                  <Form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      rangeValidation.handleSubmit();\r\n                      return false;\r\n                    }}\r\n                  >\r\n                    <div className=\"mb-3\">\r\n                      <Label>Min Length</Label>\r\n                      <Input\r\n                        name=\"min_Length\"\r\n                        label=\"Min Length  \"\r\n                        placeholder=\"Min 6 chars\"\r\n                        type=\"number\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.min_Length || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.min_Length && rangeValidation.errors.min_Length ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.min_Length && rangeValidation.errors.min_Length ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.min_Length}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label>Max Length</Label>\r\n                      <Input\r\n                        name=\"max_Length\"\r\n                        placeholder=\"Max 6 chars\"\r\n                        type=\"number\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.max_Length || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.max_Length && rangeValidation.errors.max_Length ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.max_Length && rangeValidation.errors.max_Length ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_Length}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label className=\"form-label\">Min Value</Label>\r\n                      <Input\r\n                        name=\"min_Value\"\r\n                        placeholder=\"Min 6 Chars\"\r\n                        min={6}\r\n                        type=\"number\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.min_Value || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.min_Value && rangeValidation.errors.min_Value ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.min_Value && rangeValidation.errors.min_Value ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.min_Value}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label className=\"form-label\">Max Value</Label>\r\n                      <Input\r\n                        name=\"max_Value\"\r\n                        placeholder=\"max 5 Chars\"\r\n                        max={6}\r\n                        type=\"number\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.max_Value || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.max_Value && rangeValidation.errors.max_Value ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.max_Value && rangeValidation.errors.max_Value ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.max_Value}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label className=\"form-label\">Range Length</Label>\r\n                      <Input\r\n                        name=\"range_Value\"\r\n                        placeholder=\"Text between 5 - 10 chars length\"\r\n                        type=\"number\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.range_Value || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.range_Value && rangeValidation.errors.range_Value ? true : false\r\n                        }\r\n                      />\r\n                      {rangeValidation.touched.range_Value && rangeValidation.errors.range_Value ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.range_Value}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                      <Label className=\"form-label\">Regular Exp</Label>\r\n                      <Input\r\n                        name=\"regular_Exp\"\r\n                        placeholder=\"Hex. Color\"\r\n                        type=\"number\"\r\n                        onChange={rangeValidation.handleChange}\r\n                        onBlur={rangeValidation.handleBlur}\r\n                        value={rangeValidation.values.regular_Exp || \"\"}\r\n                        invalid={\r\n                          rangeValidation.touched.regular_Exp && rangeValidation.errors.regular_Exp ? true : false\r\n                        }\r\n                      // validate={{\r\n                      //   required: { value: true },\r\n                      //   pattern: {\r\n                      //     value: \"^[#0-9]+$\",\r\n                      //     errorMessage: \"Only Hex Value\",\r\n                      //   },\r\n                      // }}\r\n                      />\r\n                      {rangeValidation.touched.regular_Exp && rangeValidation.errors.regular_Exp ? (\r\n                        <FormFeedback type=\"invalid\">{rangeValidation.errors.regular_Exp}</FormFeedback>\r\n                      ) : null}\r\n                    </div>\r\n                    <FormGroup className=\"mb-0\">\r\n                      <div>\r\n                        <Button type=\"submit\" color=\"primary\" className=\"ms-1\">\r\n                          Submit\r\n                        </Button>{\" \"}\r\n                        <Button type=\"reset\" color=\"secondary\">\r\n                          Cancel\r\n                        </Button>\r\n                      </div>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EntryData;\r\n"]},"metadata":{},"sourceType":"module"}