{"ast":null,"code":"import axios from \"axios\";\nimport accessToken from \"./jwt-token-access/accessToken\"; //pass new generated access token here\n\nconst token = accessToken; //apply base url for axios\n\nconst API_URL = \"http://localhost:9001/opims\";\nconst axiosApi = axios.create({\n  baseURL: API_URL\n});\naxiosApi.defaults.headers.common[\"Authorization\"] = 'Basic ' + btoa('admintdiv' + ':' + '1234');\naxiosApi.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\naxiosApi.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\naxiosApi.interceptors.response.use(response => response, error => Promise.reject(error));\nexport async function get(url) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return await axiosApi.get(url, { ...config\n  }).then(response => response.data);\n}\nexport async function post(url, data) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  console.log(\"AXIOS URL : \" + API_URL + url);\n  console.log(\"AXIOS DATA : \" + JSON.stringify(data));\n  console.log(\"AXIOS CONFIG : \" + JSON.stringify(config));\n  return axiosApi.post(\"http://localhost:9001/opims/opm001/login\", { ...data\n  }, { ...config\n  }).then(response => response.data).catch(function (error) {\n    console.log('Show error notification!' + JSON.stringify(error));\n    return Promise.reject(error);\n  });\n}\nexport async function put(url, data) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return axiosApi.put(url, { ...data\n  }, { ...config\n  }).then(response => response.data);\n}\nexport async function del(url) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return await axiosApi.delete(url, { ...config\n  }).then(response => response.data);\n}","map":{"version":3,"sources":["D:/React_Code/Skote_React_v3.3.1/Admin-Hooks-Staterkit/src/helpers/api_helper.js"],"names":["axios","accessToken","token","API_URL","axiosApi","create","baseURL","defaults","headers","common","btoa","post","interceptors","response","use","error","Promise","reject","get","url","config","then","data","console","log","JSON","stringify","catch","put","del","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAEA;;AACA,MAAMC,KAAK,GAAGD,WAAd,C,CAEA;;AACA,MAAME,OAAO,GAAG,6BAAhB;AAEA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEH;AADmB,CAAb,CAAjB;AAIAC,QAAQ,CAACG,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiC,eAAjC,IAAoD,WAAWC,IAAI,CAAC,cAAc,GAAd,GAAoB,MAArB,CAAnE;AACAN,QAAQ,CAACG,QAAT,CAAkBC,OAAlB,CAA0BG,IAA1B,CAA+B,cAA/B,IAAgD,gCAAhD;AACAP,QAAQ,CAACG,QAAT,CAAkBC,OAAlB,CAA0BG,IAA1B,CAA+B,6BAA/B,IAAgE,GAAhE;AAEAP,QAAQ,CAACQ,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACED,QAAQ,IAAIA,QADd,EAEEE,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAFX;AAKA,OAAO,eAAeG,GAAf,CAAmBC,GAAnB,EAAqC;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAC1C,SAAO,MAAMhB,QAAQ,CAACc,GAAT,CAAaC,GAAb,EAAkB,EAAE,GAAGC;AAAL,GAAlB,EAAiCC,IAAjC,CAAsCR,QAAQ,IAAIA,QAAQ,CAACS,IAA3D,CAAb;AACD;AAED,OAAO,eAAeX,IAAf,CAAoBQ,GAApB,EAAyBG,IAAzB,EAA4C;AAAA,MAAbF,MAAa,uEAAJ,EAAI;AACjDG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAerB,OAAf,GAAuBgB,GAAnC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAA9B;AACA,SAAOhB,QAAQ,CACZO,IADI,CACC,0CADD,EAC6C,EAAE,GAAGW;AAAL,GAD7C,EAC0D,EAAE,GAAGF;AAAL,GAD1D,EAEJC,IAFI,CAECR,QAAQ,IAAIA,QAAQ,CAACS,IAFtB,EAGJK,KAHI,CAIH,UAAUZ,KAAV,EAAiB;AACfQ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAA2BC,IAAI,CAACC,SAAL,CAAeX,KAAf,CAAvC;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAPE,CAAP;AASD;AAGD,OAAO,eAAea,GAAf,CAAmBT,GAAnB,EAAwBG,IAAxB,EAA2C;AAAA,MAAbF,MAAa,uEAAJ,EAAI;AAChD,SAAOhB,QAAQ,CACZwB,GADI,CACAT,GADA,EACK,EAAE,GAAGG;AAAL,GADL,EACkB,EAAE,GAAGF;AAAL,GADlB,EAEJC,IAFI,CAECR,QAAQ,IAAIA,QAAQ,CAACS,IAFtB,CAAP;AAGD;AAED,OAAO,eAAeO,GAAf,CAAmBV,GAAnB,EAAqC;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAC1C,SAAO,MAAMhB,QAAQ,CAClB0B,MADU,CACHX,GADG,EACE,EAAE,GAAGC;AAAL,GADF,EAEVC,IAFU,CAELR,QAAQ,IAAIA,QAAQ,CAACS,IAFhB,CAAb;AAGD","sourcesContent":["import axios from \"axios\"\nimport accessToken from \"./jwt-token-access/accessToken\"\n\n//pass new generated access token here\nconst token = accessToken\n\n//apply base url for axios\nconst API_URL = \"http://localhost:9001/opims\"\n\nconst axiosApi = axios.create({\n  baseURL: API_URL,\n})\n\naxiosApi.defaults.headers.common[\"Authorization\"] = 'Basic ' + btoa('admintdiv' + ':' + '1234');\naxiosApi.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\naxiosApi.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\naxiosApi.interceptors.response.use(\n  response => response,\n  error => Promise.reject(error)\n)\n\nexport async function get(url, config = {}) {\n  return await axiosApi.get(url, { ...config }).then(response => response.data)\n}\n\nexport async function post(url, data, config = {}) {\n  console.log(\"AXIOS URL : \"+API_URL+url);\n  console.log(\"AXIOS DATA : \"+JSON.stringify(data));\n  console.log(\"AXIOS CONFIG : \"+JSON.stringify(config));\n  return axiosApi\n    .post(\"http://localhost:9001/opims/opm001/login\", { ...data }, { ...config })\n    .then(response => response.data)\n    .catch(\n      function (error) {\n        console.log('Show error notification!'+JSON.stringify(error))\n        return Promise.reject(error)\n      }\n    )\n}\n\n\nexport async function put(url, data, config = {}) {\n  return axiosApi\n    .put(url, { ...data }, { ...config })\n    .then(response => response.data)\n}\n\nexport async function del(url, config = {}) {\n  return await axiosApi\n    .delete(url, { ...config })\n    .then(response => response.data)\n}\n"]},"metadata":{},"sourceType":"module"}