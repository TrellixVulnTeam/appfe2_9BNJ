{"ast":null,"code":"var _jsxFileName = \"D:\\\\korindo_proj\\\\appfe\\\\src\\\\pages\\\\TestingPage\\\\TestingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport '../../config';\nimport { Row, Col, Card, CardBody, FormGroup, Button, Label, Input, Container, FormFeedback, Form, Spinner } from \"reactstrap\";\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"; // Formik validation\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestingPage = () => {\n  _s();\n\n  const [custom_div1, setcustom_div1] = useState(false);\n  const [disableButton, setDisableButton] = useState(false);\n  const [visibleSpinner, setVisibleSpinner] = useState(false);\n  const rangeValidation = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      max_L_kdUser: '',\n      max_L_nmUser: '',\n      max_L_poc: 'POC AHM',\n      max_L_file: ''\n    },\n    validationSchema: Yup.object().shape({\n      max_L_kdUser: Yup.string().max(3, \"Must be exactly 3 chars\").required(\"Max 3 chars\"),\n      max_L_nmUser: Yup.string().max(5, \"Must be exactly 5 chars\").required(\"Max 5 chars\"),\n      max_L_file: Yup.string().required(\"File is Required\")\n    }),\n    onSubmit: values => {\n      console.log(\"Proses Submite\");\n      setDisableButton(true);\n      setVisibleSpinner(true);\n      var bodyFormData = new FormData();\n      bodyFormData.append('file', values.max_L_file);\n      bodyFormData.append('poc', values.max_L_poc);\n      bodyFormData.append('userId', values.max_L_kdUser);\n      bodyFormData.append('userNm', values.max_L_nmUser);\n      axios({\n        method: \"post\",\n        url: \"http://localhost:9002/app/\" + \"app001/upload\",\n        data: bodyFormData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        //handle success\n        if (response.data.message = 1) {\n          setcustom_div1(true);\n          rangeValidation.setValues({\n            \"max_L_kdUser\": \"\",\n            \"max_L_nmUser\": \"\",\n            max_L_poc: 'POC AHM'\n          });\n          document.getElementById(\"idFileUpload\").value = \"\";\n        }\n\n        setDisableButton(false);\n        setVisibleSpinner(false);\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n        setDisableButton(false);\n        setVisibleSpinner(false);\n        alert(\"Error Request Data\");\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Korindo App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Forms\",\n          breadcrumbItem: \"Testing Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            href: \"#\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            href: \"https://getbootstrap.com/docs/4.0/components/breadcrumb/\",\n            children: \"Library\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n            active: true,\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    rangeValidation.handleSubmit();\n                    return false;\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-2\",\n                    children: [custom_div1 ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n                      title: \"Success Entry Data\",\n                      timeout: 2000,\n                      style: {\n                        position: \"absolute\",\n                        top: \"0px\",\n                        right: \"0px\"\n                      },\n                      showCloseButton: false,\n                      showConfirm: false,\n                      success: true,\n                      onConfirm: () => {\n                        setcustom_div1(false);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 31\n                    }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n                      children: \"POC AHM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_poc\",\n                      type: \"text\",\n                      disabled: true,\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_poc || \"\",\n                      invalid: rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 27\n                    }, this), rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_poc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Kode User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_kdUser\",\n                      placeholder: \"Max 3 chars\",\n                      type: \"text\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_kdUser || \"\",\n                      invalid: rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 27\n                    }, this), rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_kdUser\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Nama User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_nmUser\",\n                      placeholder: \"Max 5 chars\",\n                      type: \"text\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_nmUser || \"\",\n                      invalid: rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 27\n                    }, this), rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_nmUser\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Upload File\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"idFileUpload\",\n                      name: \"max_L_file\",\n                      type: \"file\",\n                      accept: \"image/*\",\n                      onChange: e => rangeValidation.setFieldValue(\"max_L_file\", e.target.files[0]),\n                      invalid: rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 27\n                    }, this), rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_file\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        disabled: disableButton,\n                        type: \"submit\",\n                        color: \"primary\",\n                        className: \"ms-1\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n                      style: {\n                        display: visibleSpinner ? \"block\" : \"none\",\n                        marginTop: '-35px'\n                      },\n                      className: \"ms-4\",\n                      color: \"danger\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestingPage, \"d+hdpdhXLbx+lMabGbsXoXUjLZI=\", false, function () {\n  return [useFormik];\n});\n\n_c = TestingPage;\nexport default TestingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestingPage\");","map":{"version":3,"sources":["D:/korindo_proj/appfe/src/pages/TestingPage/TestingPage.js"],"names":["React","useState","useEffect","useCallback","MetaTags","BootstrapTable","paginationFactory","Breadcrumbs","Row","Col","Card","CardBody","FormGroup","Button","Label","Input","Container","FormFeedback","Form","Spinner","getData","onGetData","getDataImage","onGetDataImage","resetDonwload","Yup","useFormik","SweetAlert","useSelector","useDispatch","TestingPage","custom_div1","setcustom_div1","disableButton","setDisableButton","visibleSpinner","setVisibleSpinner","rangeValidation","enableReinitialize","initialValues","max_L_kdUser","max_L_nmUser","max_L_poc","max_L_file","validationSchema","object","shape","string","max","required","onSubmit","values","console","log","bodyFormData","FormData","append","axios","method","url","data","headers","then","response","message","setValues","document","getElementById","value","catch","alert","e","preventDefault","handleSubmit","position","top","right","handleChange","handleBlur","touched","errors","setFieldValue","target","files","display","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect , useCallback } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";  \r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\nimport '../../config';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    FormGroup,\r\n    Button,\r\n    Label,\r\n    Input,\r\n    Container,\r\n    FormFeedback,\r\n    Form,\r\n    Spinner,\r\n  } from \"reactstrap\";\r\n  \r\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"\r\n\r\n// Formik validation\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\n//SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nconst TestingPage = () => {\r\n\r\n    const [custom_div1, setcustom_div1] = useState(false)\r\n    const [disableButton, setDisableButton] = useState(false);\r\n    const [visibleSpinner, setVisibleSpinner] = useState(false);\r\n\r\n    const rangeValidation = useFormik({\r\n        enableReinitialize: true,\r\n      \r\n        initialValues: {\r\n          max_L_kdUser: '',\r\n          max_L_nmUser : '',\r\n          max_L_poc : 'POC AHM',\r\n          max_L_file : '',\r\n        },\r\n        validationSchema: Yup.object().shape({\r\n            max_L_kdUser: Yup.string()\r\n            .max(3, \"Must be exactly 3 chars\")\r\n            .required(\"Max 3 chars\"),\r\n            max_L_nmUser: Yup.string()\r\n            .max(5, \"Must be exactly 5 chars\")\r\n            .required(\"Max 5 chars\"),\r\n            max_L_file : Yup.string()\r\n            .required(\"File is Required\"),\r\n        }),\r\n    \r\n        \r\n        onSubmit: (values) => {\r\n          console.log(\"Proses Submite\");\r\n          setDisableButton(true);\r\n          setVisibleSpinner(true);\r\n          var bodyFormData = new FormData();\r\n          bodyFormData.append('file', values.max_L_file); \r\n          bodyFormData.append('poc', values.max_L_poc); \r\n          bodyFormData.append('userId', values.max_L_kdUser); \r\n          bodyFormData.append('userNm', values.max_L_nmUser); \r\n          axios({\r\n            method: \"post\",\r\n            url: \"http://localhost:9002/app/\"+\"app001/upload\",\r\n            data: bodyFormData,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          })\r\n            .then(function (response) {\r\n              //handle success\r\n              if(response.data.message = 1){\r\n                setcustom_div1(true);\r\n                rangeValidation.setValues({\"max_L_kdUser\":\"\",\"max_L_nmUser\":\"\", max_L_poc : 'POC AHM'});\r\n                document.getElementById(\"idFileUpload\").value = \"\";\r\n              }\r\n              setDisableButton(false);\r\n              setVisibleSpinner(false);\r\n            })\r\n            .catch(function (response) {\r\n              //handle error\r\n              console.log(response);\r\n              setDisableButton(false);\r\n              setVisibleSpinner(false);\r\n              alert(\"Error Request Data\");\r\n              \r\n            });\r\n         }\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"page-content\">\r\n            <MetaTags>\r\n              <title>\r\n              Korindo App\r\n              </title>\r\n            </MetaTags>\r\n            <Container fluid={true}>\r\n              <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Testing Page\" />\r\n\r\n              <Breadcrumb>\r\n                <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item href=\"https://getbootstrap.com/docs/4.0/components/breadcrumb/\">\r\n                    Library\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              \r\n              <Row>\r\n                <Col lg={6}>\r\n                  <Card>\r\n                    <CardBody>\r\n                      {/* <CardTitle>Validation type</CardTitle>\r\n                      <CardSubtitle className=\"mb-3\">\r\n                        Parsley is a availity reactstrap validation. It helps you\r\n                        provide your users with feedback on their form submission\r\n                        before sending it to your server.\r\n                      </CardSubtitle> */}\r\n    \r\n                      <Form\r\n                        onSubmit={(e) => {\r\n                          e.preventDefault();\r\n                          rangeValidation.handleSubmit();\r\n                          return false;\r\n                        }}>\r\n                        <div className=\"mb-2\">\r\n                              {custom_div1 ? (\r\n                              <SweetAlert\r\n                                title=\"Success Entry Data\"\r\n                                timeout={2000}\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  top: \"0px\",\r\n                                  right: \"0px\",\r\n                                }}\r\n                                showCloseButton={false}\r\n                                showConfirm={false}\r\n                                success\r\n                                onConfirm={() => {\r\n                                  setcustom_div1(false)\r\n                                }}\r\n                              ></SweetAlert>\r\n                            ) : null}\r\n                          <Label>POC AHM</Label>\r\n                          <Input\r\n                            name=\"max_L_poc\"\r\n                            type=\"text\"\r\n                            disabled\r\n                            onChange={rangeValidation.handleChange}\r\n                            onBlur={rangeValidation.handleBlur}\r\n                            value={rangeValidation.values.max_L_poc || \"\"}\r\n                            invalid={\r\n                              rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\r\n                            }\r\n                          />\r\n                           {rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? (\r\n                            <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_poc}</FormFeedback>\r\n                          ) : null}\r\n                        </div>\r\n    \r\n                        <div className=\"mb-3\">\r\n                          <Label>Kode User</Label>\r\n                          <Input\r\n                            name=\"max_L_kdUser\"\r\n                            placeholder=\"Max 3 chars\"\r\n                            type=\"text\"\r\n                            onChange={rangeValidation.handleChange}\r\n                            onBlur={rangeValidation.handleBlur}\r\n                            value={rangeValidation.values.max_L_kdUser || \"\"}\r\n                            invalid={\r\n                              rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\r\n                            }\r\n                          />\r\n                          {rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? (\r\n                            <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_kdUser}</FormFeedback>\r\n                          ) : null}\r\n                        </div>\r\n    \r\n                        <div className=\"mb-3\">\r\n                          <Label>Nama User</Label>\r\n                          <Input\r\n                            name=\"max_L_nmUser\"\r\n                            placeholder=\"Max 5 chars\"\r\n                            type=\"text\"\r\n                            onChange={rangeValidation.handleChange}\r\n                            onBlur={rangeValidation.handleBlur}\r\n                            value={rangeValidation.values.max_L_nmUser || \"\"}\r\n                            invalid={\r\n                              rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\r\n                            }\r\n                          />\r\n                          {rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? (\r\n                            <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_nmUser}</FormFeedback>\r\n                          ) : null}\r\n                        </div>\r\n    \r\n                        <div className=\"mb-3\">\r\n                          <Label>Upload File</Label>\r\n                          <Input\r\n                            id=\"idFileUpload\"\r\n                            name=\"max_L_file\"\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={ ( e ) => rangeValidation.setFieldValue( \"max_L_file\", e.target.files[0] ) } \r\n                            invalid={\r\n                              rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? true : false\r\n                            }\r\n                          />\r\n                          {rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? (\r\n                            <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_file}</FormFeedback>\r\n                          ) : null}\r\n                        </div>\r\n    \r\n                        <FormGroup className=\"mb-0\">\r\n                          <div>\r\n                            <Button disabled={disableButton} type=\"submit\" color=\"primary\" className=\"ms-1\">\r\n                              Submit\r\n                            </Button>\r\n                          </div>\r\n                          <Spinner style={{ display: visibleSpinner ? \"block\" : \"none\", marginTop : '-35px'}} className=\"ms-4\" color=\"danger\" />\r\n                        </FormGroup>\r\n                      </Form>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n    \r\n                \r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TestingPage"]},"metadata":{},"sourceType":"module"}