{"ast":null,"code":"import { GET_PROJECTS, GET_PROJECTS_FAIL, GET_PROJECTS_SUCCESS, GET_PROJECT_DETAIL, ADD_NEW_PROJECT, ADD_PROJECT_SUCCESS, ADD_PROJECT_FAIL, UPDATE_PROJECT, UPDATE_PROJECT_SUCCESS, UPDATE_PROJECT_FAIL, DELETE_PROJECT, DELETE_PROJECT_SUCCESS, DELETE_PROJECT_FAIL, GET_PROJECT_DETAIL_FAIL, GET_PROJECT_DETAIL_SUCCESS } from \"./actionTypes\";\nexport const getProjects = () => ({\n  type: GET_PROJECTS\n});\nexport const getProjectsSuccess = projects => ({\n  type: GET_PROJECTS_SUCCESS,\n  payload: projects\n});\nexport const addNewProject = project => ({\n  type: ADD_NEW_PROJECT,\n  payload: project\n});\nexport const addProjectSuccess = project => ({\n  type: ADD_PROJECT_SUCCESS,\n  payload: project\n});\nexport const addProjectFail = error => ({\n  type: ADD_PROJECT_FAIL,\n  payload: error\n});\nexport const updateProject = project => ({\n  type: UPDATE_PROJECT,\n  payload: project\n});\nexport const updateProjectSuccess = project => ({\n  type: UPDATE_PROJECT_SUCCESS,\n  payload: project\n});\nexport const updateProjectFail = error => ({\n  type: UPDATE_PROJECT_FAIL,\n  payload: error\n});\nexport const deleteProject = project => ({\n  type: DELETE_PROJECT,\n  payload: project\n});\nexport const deleteProjectSuccess = project => ({\n  type: DELETE_PROJECT_SUCCESS,\n  payload: project\n});\nexport const deleteProjectFail = error => ({\n  type: DELETE_PROJECT_FAIL,\n  payload: error\n});\nexport const getProjectsFail = error => ({\n  type: GET_PROJECTS_FAIL,\n  payload: error\n});\nexport const getProjectDetail = projectId => ({\n  type: GET_PROJECT_DETAIL,\n  projectId\n});\nexport const getProjectDetailSuccess = projectDetails => ({\n  type: GET_PROJECT_DETAIL_SUCCESS,\n  payload: projectDetails\n});\nexport const getProjectDetailFail = error => ({\n  type: GET_PROJECT_DETAIL_FAIL,\n  payload: error\n});","map":{"version":3,"sources":["D:/React_Code/Skote_React_v3.3.1/Admin-Hooks-Staterkit/src/store/projects/actions.js"],"names":["GET_PROJECTS","GET_PROJECTS_FAIL","GET_PROJECTS_SUCCESS","GET_PROJECT_DETAIL","ADD_NEW_PROJECT","ADD_PROJECT_SUCCESS","ADD_PROJECT_FAIL","UPDATE_PROJECT","UPDATE_PROJECT_SUCCESS","UPDATE_PROJECT_FAIL","DELETE_PROJECT","DELETE_PROJECT_SUCCESS","DELETE_PROJECT_FAIL","GET_PROJECT_DETAIL_FAIL","GET_PROJECT_DETAIL_SUCCESS","getProjects","type","getProjectsSuccess","projects","payload","addNewProject","project","addProjectSuccess","addProjectFail","error","updateProject","updateProjectSuccess","updateProjectFail","deleteProject","deleteProjectSuccess","deleteProjectFail","getProjectsFail","getProjectDetail","projectId","getProjectDetailSuccess","projectDetails","getProjectDetailFail"],"mappings":"AAAA,SACEA,YADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,mBANF,EAOEC,gBAPF,EAQEC,cARF,EASEC,sBATF,EAUEC,mBAVF,EAWEC,cAXF,EAYEC,sBAZF,EAaEC,mBAbF,EAcEC,uBAdF,EAeEC,0BAfF,QAgBO,eAhBP;AAkBA,OAAO,MAAMC,WAAW,GAAG,OAAO;AAChCC,EAAAA,IAAI,EAAEhB;AAD0B,CAAP,CAApB;AAIP,OAAO,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AAC7CF,EAAAA,IAAI,EAAEd,oBADuC;AAE7CiB,EAAAA,OAAO,EAAED;AAFoC,CAAL,CAAnC;AAKP,OAAO,MAAME,aAAa,GAAGC,OAAO,KAAK;AACvCL,EAAAA,IAAI,EAAEZ,eADiC;AAEvCe,EAAAA,OAAO,EAAEE;AAF8B,CAAL,CAA7B;AAKP,OAAO,MAAMC,iBAAiB,GAAGD,OAAO,KAAK;AAC3CL,EAAAA,IAAI,EAAEX,mBADqC;AAE3Cc,EAAAA,OAAO,EAAEE;AAFkC,CAAL,CAAjC;AAKP,OAAO,MAAME,cAAc,GAAGC,KAAK,KAAK;AACtCR,EAAAA,IAAI,EAAEV,gBADgC;AAEtCa,EAAAA,OAAO,EAAEK;AAF6B,CAAL,CAA5B;AAKP,OAAO,MAAMC,aAAa,GAAGJ,OAAO,KAAK;AACvCL,EAAAA,IAAI,EAAET,cADiC;AAEvCY,EAAAA,OAAO,EAAEE;AAF8B,CAAL,CAA7B;AAKP,OAAO,MAAMK,oBAAoB,GAAGL,OAAO,KAAK;AAC9CL,EAAAA,IAAI,EAAER,sBADwC;AAE9CW,EAAAA,OAAO,EAAEE;AAFqC,CAAL,CAApC;AAKP,OAAO,MAAMM,iBAAiB,GAAGH,KAAK,KAAK;AACzCR,EAAAA,IAAI,EAAEP,mBADmC;AAEzCU,EAAAA,OAAO,EAAEK;AAFgC,CAAL,CAA/B;AAKP,OAAO,MAAMI,aAAa,GAAGP,OAAO,KAAK;AACvCL,EAAAA,IAAI,EAAEN,cADiC;AAEvCS,EAAAA,OAAO,EAAEE;AAF8B,CAAL,CAA7B;AAKP,OAAO,MAAMQ,oBAAoB,GAAGR,OAAO,KAAK;AAC9CL,EAAAA,IAAI,EAAEL,sBADwC;AAE9CQ,EAAAA,OAAO,EAAEE;AAFqC,CAAL,CAApC;AAKP,OAAO,MAAMS,iBAAiB,GAAGN,KAAK,KAAK;AACzCR,EAAAA,IAAI,EAAEJ,mBADmC;AAEzCO,EAAAA,OAAO,EAAEK;AAFgC,CAAL,CAA/B;AAKP,OAAO,MAAMO,eAAe,GAAGP,KAAK,KAAK;AACvCR,EAAAA,IAAI,EAAEf,iBADiC;AAEvCkB,EAAAA,OAAO,EAAEK;AAF8B,CAAL,CAA7B;AAKP,OAAO,MAAMQ,gBAAgB,GAAGC,SAAS,KAAK;AAC5CjB,EAAAA,IAAI,EAAEb,kBADsC;AAE5C8B,EAAAA;AAF4C,CAAL,CAAlC;AAKP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDnB,EAAAA,IAAI,EAAEF,0BADkD;AAExDK,EAAAA,OAAO,EAAEgB;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMC,oBAAoB,GAAGZ,KAAK,KAAK;AAC5CR,EAAAA,IAAI,EAAEH,uBADsC;AAE5CM,EAAAA,OAAO,EAAEK;AAFmC,CAAL,CAAlC","sourcesContent":["import {\n  GET_PROJECTS,\n  GET_PROJECTS_FAIL,\n  GET_PROJECTS_SUCCESS,\n  GET_PROJECT_DETAIL,\n  ADD_NEW_PROJECT,\n  ADD_PROJECT_SUCCESS,\n  ADD_PROJECT_FAIL,\n  UPDATE_PROJECT,\n  UPDATE_PROJECT_SUCCESS,\n  UPDATE_PROJECT_FAIL,\n  DELETE_PROJECT,\n  DELETE_PROJECT_SUCCESS,\n  DELETE_PROJECT_FAIL,\n  GET_PROJECT_DETAIL_FAIL,\n  GET_PROJECT_DETAIL_SUCCESS,\n} from \"./actionTypes\"\n\nexport const getProjects = () => ({\n  type: GET_PROJECTS,\n})\n\nexport const getProjectsSuccess = projects => ({\n  type: GET_PROJECTS_SUCCESS,\n  payload: projects,\n})\n\nexport const addNewProject = project => ({\n  type: ADD_NEW_PROJECT,\n  payload: project,\n})\n\nexport const addProjectSuccess = project => ({\n  type: ADD_PROJECT_SUCCESS,\n  payload: project,\n})\n\nexport const addProjectFail = error => ({\n  type: ADD_PROJECT_FAIL,\n  payload: error,\n})\n\nexport const updateProject = project => ({\n  type: UPDATE_PROJECT,\n  payload: project,\n})\n\nexport const updateProjectSuccess = project => ({\n  type: UPDATE_PROJECT_SUCCESS,\n  payload: project,\n})\n\nexport const updateProjectFail = error => ({\n  type: UPDATE_PROJECT_FAIL,\n  payload: error,\n})\n\nexport const deleteProject = project => ({\n  type: DELETE_PROJECT,\n  payload: project,\n})\n\nexport const deleteProjectSuccess = project => ({\n  type: DELETE_PROJECT_SUCCESS,\n  payload: project,\n})\n\nexport const deleteProjectFail = error => ({\n  type: DELETE_PROJECT_FAIL,\n  payload: error,\n})\n\nexport const getProjectsFail = error => ({\n  type: GET_PROJECTS_FAIL,\n  payload: error,\n})\n\nexport const getProjectDetail = projectId => ({\n  type: GET_PROJECT_DETAIL,\n  projectId,\n})\n\nexport const getProjectDetailSuccess = projectDetails => ({\n  type: GET_PROJECT_DETAIL_SUCCESS,\n  payload: projectDetails,\n})\n\nexport const getProjectDetailFail = error => ({\n  type: GET_PROJECT_DETAIL_FAIL,\n  payload: error,\n})\n"]},"metadata":{},"sourceType":"module"}