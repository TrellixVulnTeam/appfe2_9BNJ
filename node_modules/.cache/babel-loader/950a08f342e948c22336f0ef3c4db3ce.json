{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\"; // Login Redux States\n\nimport { LOGIN_USER, LOGOUT_USER, SOCIAL_LOGIN } from \"./actionTypes\";\nimport { apiError, loginSuccess, logoutUserSuccess } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\nimport { postFakeLogin, postJwtLogin, postSocialLogin } from \"../../../helpers/fakebackend_helper\";\nimport axiosInstance from '../../../helpers/AxiosInstace';\nconst loadDataHujan = useCallback(async () => {\n  let r = await axiosInstance().get('/opm001/login');\n  response = await response.data.data;\n  console.log('Hujan: ', response);\n}, []);\nconst fireBaseBackend = getFirebaseBackend();\n\nfunction* loginUser(_ref) {\n  let {\n    payload: {\n      user,\n      history\n    }\n  } = _ref;\n\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.loginUser, user.email, user.password);\n      yield put(loginSuccess(response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtLogin, {\n        email: user.email,\n        password: user.password\n      });\n      localStorage.setItem(\"authUser\", JSON.stringify(response));\n      yield put(loginSuccess(response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\n      loadDataHujan();\n      const response = yield call(postFyakeLogin, {\n        email: user.email,\n        password: user.password\n      });\n      console.log(\"Response : \" + JSON.stringify(response));\n      localStorage.setItem(\"authUser\", JSON.stringify(response));\n      yield put(loginSuccess(response));\n    }\n\n    history.push(\"/dashboard\");\n  } catch (error) {\n    yield put(apiError(error));\n  }\n}\n\nfunction* logoutUser(_ref2) {\n  let {\n    payload: {\n      history\n    }\n  } = _ref2;\n\n  try {\n    localStorage.removeItem(\"authUser\");\n\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.logout);\n      yield put(logoutUserSuccess(response));\n    }\n\n    history.push(\"/login\");\n  } catch (error) {\n    yield put(apiError(error));\n  }\n}\n\nfunction* socialLogin(_ref3) {\n  let {\n    payload: {\n      data,\n      history,\n      type\n    }\n  } = _ref3;\n\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const fireBaseBackend = getFirebaseBackend();\n      const response = yield call(fireBaseBackend.socialLoginUser, data, type);\n      localStorage.setItem(\"authUser\", JSON.stringify(response));\n      yield put(loginSuccess(response));\n    } else {\n      const response = yield call(postSocialLogin, data);\n      localStorage.setItem(\"authUser\", JSON.stringify(response));\n      yield put(loginSuccess(response));\n    }\n\n    history.push(\"/dashboard\");\n  } catch (error) {\n    yield put(apiError(error));\n  }\n}\n\nfunction* authSaga() {\n  yield takeEvery(LOGIN_USER, loginUser);\n  yield takeLatest(SOCIAL_LOGIN, socialLogin);\n  yield takeEvery(LOGOUT_USER, logoutUser);\n}\n\nexport default authSaga;","map":{"version":3,"sources":["D:/React_Code/Skote_React_v3.3.1/Admin-Hooks-Staterkit/src/store/auth/login/saga.js"],"names":["call","put","takeEvery","takeLatest","LOGIN_USER","LOGOUT_USER","SOCIAL_LOGIN","apiError","loginSuccess","logoutUserSuccess","getFirebaseBackend","postFakeLogin","postJwtLogin","postSocialLogin","axiosInstance","loadDataHujan","useCallback","r","get","response","data","console","log","fireBaseBackend","loginUser","payload","user","history","process","env","REACT_APP_DEFAULTAUTH","email","password","localStorage","setItem","JSON","stringify","postFyakeLogin","push","error","logoutUser","removeItem","logout","socialLogin","type","socialLoginUser","authSaga"],"mappings":"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","sourcesContent":["import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\"\n\n// Login Redux States\nimport { LOGIN_USER, LOGOUT_USER, SOCIAL_LOGIN } from \"./actionTypes\"\nimport { apiError, loginSuccess, logoutUserSuccess } from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\"\nimport {\n  postFakeLogin,\n  postJwtLogin,\n  postSocialLogin,\n} from \"../../../helpers/fakebackend_helper\"\n\nimport axiosInstance from '../../../helpers/AxiosInstace';\n\nconst loadDataHujan = useCallback(async () => {\n  let r = await axiosInstance().get('/opm001/login');\n  response = await response.data.data;\n  console.log('Hujan: ', response);\n}, []);\n\nconst fireBaseBackend = getFirebaseBackend()\n\nfunction* loginUser({ payload: { user, history } }) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(\n        fireBaseBackend.loginUser,\n        user.email,\n        user.password\n      )\n      yield put(loginSuccess(response))\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtLogin, {\n        email: user.email,\n        password: user.password,\n      })\n      localStorage.setItem(\"authUser\", JSON.stringify(response))\n      yield put(loginSuccess(response))\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\n      loadDataHujan();\n      const response = yield call(postFyakeLogin, {\n        email: user.email,\n        password: user.password,\n      })\n      console.log(\"Response : \"+JSON.stringify(response));\n      localStorage.setItem(\"authUser\", JSON.stringify(response))\n      yield put(loginSuccess(response))\n    }\n    history.push(\"/dashboard\")\n  } catch (error) {\n    yield put(apiError(error))\n  }\n}\n\nfunction* logoutUser({ payload: { history } }) {\n  try {\n    localStorage.removeItem(\"authUser\")\n\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.logout)\n      yield put(logoutUserSuccess(response))\n    }\n    history.push(\"/login\")\n  } catch (error) {\n    yield put(apiError(error))\n  }\n}\n\nfunction* socialLogin({ payload: { data, history, type } }) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const fireBaseBackend = getFirebaseBackend()\n      const response = yield call(\n        fireBaseBackend.socialLoginUser,\n        data,\n        type,\n      )\n      localStorage.setItem(\"authUser\", JSON.stringify(response))\n      yield put(loginSuccess(response))\n    } else {\n      const response = yield call(postSocialLogin, data)\n      localStorage.setItem(\"authUser\", JSON.stringify(response))\n      yield put(loginSuccess(response))\n    }\n    history.push(\"/dashboard\")\n  } catch (error) {\n    yield put(apiError(error))\n  }\n}\n\nfunction* authSaga() {\n  yield takeEvery(LOGIN_USER, loginUser)\n  yield takeLatest(SOCIAL_LOGIN, socialLogin)\n  yield takeEvery(LOGOUT_USER, logoutUser)\n}\n\nexport default authSaga\n"]},"metadata":{},"sourceType":"module"}