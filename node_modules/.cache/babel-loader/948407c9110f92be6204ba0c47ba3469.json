{"ast":null,"code":"var _jsxFileName = \"D:\\\\korindo_proj\\\\appfe\\\\src\\\\pages\\\\TestingPage\\\\TestingPage.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport '../../config';\nimport { Row, Col, Card, CardBody, FormGroup, Button, Label, Input, Container, FormFeedback, Form, Spinner, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"; // Formik validation\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { PhotoshopPicker } from \"react-color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestingPage = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [custom_div1, setcustom_div1] = useState(false);\n  const [disableButton, setDisableButton] = useState(false);\n  const [visibleSpinner, setVisibleSpinner] = useState(false);\n  const rangeValidation = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      max_L_kdUser: '',\n      max_L_nmUser: '',\n      max_L_poc: 'POC AHM',\n      max_L_file: ''\n    },\n    validationSchema: Yup.object().shape({\n      max_L_kdUser: Yup.string().max(3, \"Must be exactly 3 chars\").required(\"Max 3 chars\"),\n      max_L_nmUser: Yup.string().max(5, \"Must be exactly 5 chars\").required(\"Max 5 chars\"),\n      max_L_file: Yup.string().required(\"File is Required\")\n    }),\n    onSubmit: values => {\n      console.log(\"Proses Submite\");\n      setDisableButton(true);\n      setVisibleSpinner(true);\n      var bodyFormData = new FormData();\n      bodyFormData.append('file', values.max_L_file);\n      bodyFormData.append('poc', values.max_L_poc);\n      bodyFormData.append('userId', values.max_L_kdUser);\n      bodyFormData.append('userNm', values.max_L_nmUser);\n      axios({\n        method: \"post\",\n        url: \"http://localhost:9002/app/\" + \"app001/upload\",\n        data: bodyFormData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        //handle success\n        if (response.data.message = 1) {\n          setcustom_div1(true);\n          rangeValidation.setValues({\n            \"max_L_kdUser\": \"\",\n            \"max_L_nmUser\": \"\",\n            max_L_poc: 'POC AHM'\n          });\n          document.getElementById(\"idFileUpload\").value = \"\";\n        }\n\n        setDisableButton(false);\n        setVisibleSpinner(false);\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n        setDisableButton(false);\n        setVisibleSpinner(false);\n        alert(\"Error Request Data\");\n      });\n    }\n  });\n\n  function App() {\n    _s();\n\n    const [color, setColor] = useState('#00ff00');\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"Korindo App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            title: \"Forms\",\n            breadcrumbItem: \"Testing Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              lg: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    onSubmit: e => {\n                      e.preventDefault();\n                      rangeValidation.handleSubmit();\n                      return false;\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-2\",\n                      children: [custom_div1 ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n                        title: \"Success Entry Data\",\n                        timeout: 2000,\n                        style: {\n                          position: \"absolute\",\n                          top: \"0px\",\n                          right: \"0px\"\n                        },\n                        showCloseButton: false,\n                        showConfirm: false,\n                        success: true,\n                        onConfirm: () => {\n                          setcustom_div1(false);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 27\n                      }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n                        children: \"POC AHM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"max_L_poc\",\n                        type: \"text\",\n                        disabled: true,\n                        onChange: rangeValidation.handleChange,\n                        onBlur: rangeValidation.handleBlur,\n                        value: rangeValidation.values.max_L_poc || \"\",\n                        invalid: rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 25\n                      }, this), rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                        type: \"invalid\",\n                        children: rangeValidation.errors.max_L_poc\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: \"Kode User\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"max_L_kdUser\",\n                        placeholder: \"Max 3 chars\",\n                        type: \"text\",\n                        onChange: rangeValidation.handleChange,\n                        onBlur: rangeValidation.handleBlur,\n                        value: rangeValidation.values.max_L_kdUser || \"\",\n                        invalid: rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 25\n                      }, this), rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                        type: \"invalid\",\n                        children: rangeValidation.errors.max_L_kdUser\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: \"Nama User\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"max_L_nmUser\",\n                        placeholder: \"Max 5 chars\",\n                        type: \"text\",\n                        onChange: rangeValidation.handleChange,\n                        onBlur: rangeValidation.handleBlur,\n                        value: rangeValidation.values.max_L_nmUser || \"\",\n                        invalid: rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 25\n                      }, this), rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                        type: \"invalid\",\n                        children: rangeValidation.errors.max_L_nmUser\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: \"Upload File\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        id: \"idFileUpload\",\n                        name: \"max_L_file\",\n                        type: \"file\",\n                        accept: \"image/*\",\n                        onChange: e => rangeValidation.setFieldValue(\"max_L_file\", e.target.files[0]),\n                        invalid: rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? true : false\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 25\n                      }, this), rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                        type: \"invalid\",\n                        children: rangeValidation.errors.max_L_file\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      className: \"mb-0\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          disabled: disableButton,\n                          type: \"submit\",\n                          color: \"primary\",\n                          className: \"ms-1\",\n                          children: \"Submit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n                        style: {\n                          display: visibleSpinner ? \"block\" : \"none\",\n                          marginTop: '-35px'\n                        },\n                        className: \"ms-4\",\n                        color: \"danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              lg: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                    children: \"Validation type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                    className: \"mb-3\",\n                    children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(PhotoshopPicker, {\n                    color: color,\n                    onChangeComplete: color => {\n                      setColor(color.hex);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      backgroundColor: color,\n                      transition: 'ease all 500ms'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(App, \"drRuHgB1i4gypyBZNiV8StTytoI=\");\n};\n\n_s2(TestingPage, \"d+hdpdhXLbx+lMabGbsXoXUjLZI=\", false, function () {\n  return [useFormik];\n});\n\n_c = TestingPage;\nexport default TestingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestingPage\");","map":{"version":3,"sources":["D:/korindo_proj/appfe/src/pages/TestingPage/TestingPage.js"],"names":["React","useState","useEffect","useCallback","MetaTags","BootstrapTable","paginationFactory","Breadcrumbs","Row","Col","Card","CardBody","FormGroup","Button","Label","Input","Container","FormFeedback","Form","Spinner","CardTitle","CardSubtitle","getData","onGetData","getDataImage","onGetDataImage","resetDonwload","Yup","useFormik","SweetAlert","useSelector","useDispatch","PhotoshopPicker","TestingPage","custom_div1","setcustom_div1","disableButton","setDisableButton","visibleSpinner","setVisibleSpinner","rangeValidation","enableReinitialize","initialValues","max_L_kdUser","max_L_nmUser","max_L_poc","max_L_file","validationSchema","object","shape","string","max","required","onSubmit","values","console","log","bodyFormData","FormData","append","axios","method","url","data","headers","then","response","message","setValues","document","getElementById","value","catch","alert","App","color","setColor","e","preventDefault","handleSubmit","position","top","right","handleChange","handleBlur","touched","errors","setFieldValue","target","files","display","marginTop","hex","backgroundColor","transition"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\nimport '../../config';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  FormFeedback,\r\n  Form,\r\n  Spinner,\r\n  CardTitle,\r\n  CardSubtitle\r\n} from \"reactstrap\";\r\n\r\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"\r\n\r\n// Formik validation\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\n//SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport { PhotoshopPicker } from \"react-color\";\r\n\r\nconst TestingPage = () => {\r\n\r\n  const [custom_div1, setcustom_div1] = useState(false)\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const [visibleSpinner, setVisibleSpinner] = useState(false);\r\n\r\n  const rangeValidation = useFormik({\r\n    enableReinitialize: true,\r\n\r\n    initialValues: {\r\n      max_L_kdUser: '',\r\n      max_L_nmUser: '',\r\n      max_L_poc: 'POC AHM',\r\n      max_L_file: '',\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      max_L_kdUser: Yup.string()\r\n        .max(3, \"Must be exactly 3 chars\")\r\n        .required(\"Max 3 chars\"),\r\n      max_L_nmUser: Yup.string()\r\n        .max(5, \"Must be exactly 5 chars\")\r\n        .required(\"Max 5 chars\"),\r\n      max_L_file: Yup.string()\r\n        .required(\"File is Required\"),\r\n    }),\r\n\r\n\r\n    onSubmit: (values) => {\r\n      console.log(\"Proses Submite\");\r\n      setDisableButton(true);\r\n      setVisibleSpinner(true);\r\n      var bodyFormData = new FormData();\r\n      bodyFormData.append('file', values.max_L_file);\r\n      bodyFormData.append('poc', values.max_L_poc);\r\n      bodyFormData.append('userId', values.max_L_kdUser);\r\n      bodyFormData.append('userNm', values.max_L_nmUser);\r\n      axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:9002/app/\" + \"app001/upload\",\r\n        data: bodyFormData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n        .then(function (response) {\r\n          //handle success\r\n          if (response.data.message = 1) {\r\n            setcustom_div1(true);\r\n            rangeValidation.setValues({ \"max_L_kdUser\": \"\", \"max_L_nmUser\": \"\", max_L_poc: 'POC AHM' });\r\n            document.getElementById(\"idFileUpload\").value = \"\";\r\n          }\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n        })\r\n        .catch(function (response) {\r\n          //handle error\r\n          console.log(response);\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n          alert(\"Error Request Data\");\r\n\r\n        });\r\n    }\r\n  });\r\n\r\n  function App() {\r\n    const [color, setColor] = useState('#00ff00');\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-content\">\r\n          <MetaTags>\r\n            <title>\r\n              Korindo App\r\n            </title>\r\n          </MetaTags>\r\n          <Container fluid={true}>\r\n            <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Testing Page\" />\r\n\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Card>\r\n                  <CardBody>\r\n                    {/* <CardTitle>Validation type</CardTitle>\r\n                      <CardSubtitle className=\"mb-3\">\r\n                        Parsley is a availity reactstrap validation. It helps you\r\n                        provide your users with feedback on their form submission\r\n                        before sending it to your server.\r\n                      </CardSubtitle> */}\r\n\r\n                    <Form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        rangeValidation.handleSubmit();\r\n                        return false;\r\n                      }}>\r\n                      <div className=\"mb-2\">\r\n                        {custom_div1 ? (\r\n                          <SweetAlert\r\n                            title=\"Success Entry Data\"\r\n                            timeout={2000}\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: \"0px\",\r\n                              right: \"0px\",\r\n                            }}\r\n                            showCloseButton={false}\r\n                            showConfirm={false}\r\n                            success\r\n                            onConfirm={() => {\r\n                              setcustom_div1(false)\r\n                            }}\r\n                          ></SweetAlert>\r\n                        ) : null}\r\n                        <Label>POC AHM</Label>\r\n                        <Input\r\n                          name=\"max_L_poc\"\r\n                          type=\"text\"\r\n                          disabled\r\n                          onChange={rangeValidation.handleChange}\r\n                          onBlur={rangeValidation.handleBlur}\r\n                          value={rangeValidation.values.max_L_poc || \"\"}\r\n                          invalid={\r\n                            rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\r\n                          }\r\n                        />\r\n                        {rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? (\r\n                          <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_poc}</FormFeedback>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"mb-3\">\r\n                        <Label>Kode User</Label>\r\n                        <Input\r\n                          name=\"max_L_kdUser\"\r\n                          placeholder=\"Max 3 chars\"\r\n                          type=\"text\"\r\n                          onChange={rangeValidation.handleChange}\r\n                          onBlur={rangeValidation.handleBlur}\r\n                          value={rangeValidation.values.max_L_kdUser || \"\"}\r\n                          invalid={\r\n                            rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\r\n                          }\r\n                        />\r\n                        {rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? (\r\n                          <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_kdUser}</FormFeedback>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"mb-3\">\r\n                        <Label>Nama User</Label>\r\n                        <Input\r\n                          name=\"max_L_nmUser\"\r\n                          placeholder=\"Max 5 chars\"\r\n                          type=\"text\"\r\n                          onChange={rangeValidation.handleChange}\r\n                          onBlur={rangeValidation.handleBlur}\r\n                          value={rangeValidation.values.max_L_nmUser || \"\"}\r\n                          invalid={\r\n                            rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\r\n                          }\r\n                        />\r\n                        {rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? (\r\n                          <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_nmUser}</FormFeedback>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"mb-3\">\r\n                        <Label>Upload File</Label>\r\n                        <Input\r\n                          id=\"idFileUpload\"\r\n                          name=\"max_L_file\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={(e) => rangeValidation.setFieldValue(\"max_L_file\", e.target.files[0])}\r\n                          invalid={\r\n                            rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? true : false\r\n                          }\r\n                        />\r\n                        {rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? (\r\n                          <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_file}</FormFeedback>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <FormGroup className=\"mb-0\">\r\n                        <div>\r\n                          <Button disabled={disableButton} type=\"submit\" color=\"primary\" className=\"ms-1\">\r\n                            Submit\r\n                          </Button>\r\n                        </div>\r\n                        <Spinner style={{ display: visibleSpinner ? \"block\" : \"none\", marginTop: '-35px' }} className=\"ms-4\" color=\"danger\" />\r\n                      </FormGroup>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col lg={6}>\r\n                <Card>\r\n                  <CardBody>\r\n                    <CardTitle>Validation type</CardTitle>\r\n                    <CardSubtitle className=\"mb-3\">\r\n                      Parsley is a availity reactstrap validation. It helps you\r\n                      provide your users with feedback on their form submission\r\n                      before sending it to your server.\r\n                    </CardSubtitle>\r\n\r\n                    <PhotoshopPicker\r\n                      color={color}\r\n                      onChangeComplete={color => {\r\n                        setColor(color.hex);\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: color,\r\n                        transition: 'ease all 500ms'\r\n                      }}\r\n                    />\r\n\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TestingPage"]},"metadata":{},"sourceType":"module"}