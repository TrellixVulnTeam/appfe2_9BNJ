{"ast":null,"code":"import { call, put, takeEvery, all, takeLatest, fork } from \"redux-saga/effects\"; // Crypto Redux States\n// import { GET_DATA_SUCCESS } from \"./actionTypes\"\n// import { getDataSuccess, getDataFail } from \"./actions\"\n// import { uploadData } from \"helpers/backend_helper\";\n// Include Both Helper File with needed methods\n// import { getData, getDataImage} from \"helpers/backend_helper\"\n\nfunction* fetchUploadData(_ref) {\n  let {\n    payload: req\n  } = _ref;\n\n  try {\n    console.log(\"CALL API : \");\n    const response = yield call(uploadData, req);\n\n    if (response.status == 1) {\n      yield put(getDataSuccess(response));\n    } else {\n      yield put(getDataFail(\"Error Get Data\"));\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(getDataFail(\"Error Get Data\"));\n  }\n}\n\nfunction* getDataSaga() {\n  yield takeEvery(GET_DATA_SUCCESS, fetchUploadData);\n}\n\nfunction* downloadSaga() {\n  console.log('CALL SAGA RESET');\n  yield all([fork(getDataSaga)]);\n}\n\nexport default getDataSaga;","map":{"version":3,"sources":["D:/korindo_proj/appfe/src/store/entrydata/saga.js"],"names":["call","put","takeEvery","all","takeLatest","fork","fetchUploadData","payload","req","console","log","response","uploadData","status","getDataSuccess","getDataFail","error","getDataSaga","GET_DATA_SUCCESS","downloadSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,UAApC,EAAgDC,IAAhD,QAA4D,oBAA5D,C,CAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,UAAUC,eAAV,OAA4C;AAAA,MAAlB;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAkB;;AAC1C,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACY,UAAD,EAAaJ,GAAb,CAA3B;;AACA,QAAGG,QAAQ,CAACE,MAAT,IAAmB,CAAtB,EAAwB;AACtB,YAAMZ,GAAG,CAACa,cAAc,CAACH,QAAD,CAAf,CAAT;AACD,KAFD,MAEK;AACH,YAAMV,GAAG,CAACc,WAAW,CAAC,gBAAD,CAAZ,CAAT;AACD;AACF,GARD,CAQE,OAAOC,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,UAAMf,GAAG,CAACc,WAAW,CAAC,gBAAD,CAAZ,CAAT;AACD;AACF;;AAED,UAAUE,WAAV,GAAwB;AACtB,QAAMf,SAAS,CAACgB,gBAAD,EAAmBZ,eAAnB,CAAf;AACD;;AAED,UAAUa,YAAV,GAAyB;AACvBV,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,QAAMP,GAAG,CAAC,CAACE,IAAI,CAACY,WAAD,CAAL,CAAD,CAAT;AACD;;AAED,eAAeA,WAAf","sourcesContent":["import { call, put, takeEvery, all, takeLatest, fork } from \"redux-saga/effects\"\r\n\r\n// Crypto Redux States\r\n// import { GET_DATA_SUCCESS } from \"./actionTypes\"\r\n// import { getDataSuccess, getDataFail } from \"./actions\"\r\n// import { uploadData } from \"helpers/backend_helper\";\r\n\r\n// Include Both Helper File with needed methods\r\n// import { getData, getDataImage} from \"helpers/backend_helper\"\r\n\r\nfunction* fetchUploadData({ payload: req }) {\r\n  try {\r\n    console.log(\"CALL API : \");\r\n    const response = yield call(uploadData, req)\r\n    if(response.status == 1){\r\n      yield put(getDataSuccess(response))\r\n    }else{\r\n      yield put(getDataFail(\"Error Get Data\"))\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(getDataFail(\"Error Get Data\"))\r\n  }\r\n}\r\n\r\nfunction* getDataSaga() {\r\n  yield takeEvery(GET_DATA_SUCCESS, fetchUploadData)\r\n}\r\n\r\nfunction* downloadSaga() {\r\n  console.log('CALL SAGA RESET');\r\n  yield all([fork(getDataSaga)])\r\n}\r\n\r\nexport default getDataSaga\r\n"]},"metadata":{},"sourceType":"module"}