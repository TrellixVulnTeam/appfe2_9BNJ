{"ast":null,"code":"var _jsxFileName = \"D:\\\\korindo_proj\\\\appfe\\\\src\\\\pages\\\\TestingPage\\\\TestingPage.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport '../../config';\nimport { Row, Col, Card, CardBody, FormGroup, Button, Label, Input, Container, FormFeedback, Form, Spinner } from \"reactstrap\";\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"; //SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport './TestingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestingPage = () => {\n  // const [getTodos, setTodos] = useState([\n  //     { id: 1, title: 'Eat'},\n  //     { id: 2, title: 'Sleep'},\n  //     { id: 3, title: 'Code'}\n  // ])\n  // console.log(getTodos)\n  // const eventCreateTodo = (todo) => {\n  //     setTodos(getTodos.concat(todo))\n  //     console.log(getTodos)\n  // }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Korindo App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Forms\",\n          breadcrumbItem: \"Entry data marking & upload foto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  onSubmit: e => {\n                    e.preventDefault();\n                    rangeValidation.handleSubmit();\n                    return false;\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-2\",\n                    children: [custom_div1 ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n                      title: \"Success Entry Data\",\n                      timeout: 2000,\n                      style: {\n                        position: \"absolute\",\n                        top: \"0px\",\n                        right: \"0px\"\n                      },\n                      showCloseButton: false,\n                      showConfirm: false,\n                      success: true,\n                      onConfirm: () => {\n                        setcustom_div1(false);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 31\n                    }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n                      children: \"POC AHM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_poc\",\n                      type: \"text\",\n                      disabled: true,\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_poc || \"\",\n                      invalid: rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 27\n                    }, this), rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_poc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Kode User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_kdUser\",\n                      placeholder: \"Max 3 chars\",\n                      type: \"text\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_kdUser || \"\",\n                      invalid: rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 27\n                    }, this), rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_kdUser\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Nama User\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"max_L_nmUser\",\n                      placeholder: \"Max 5 chars\",\n                      type: \"text\",\n                      onChange: rangeValidation.handleChange,\n                      onBlur: rangeValidation.handleBlur,\n                      value: rangeValidation.values.max_L_nmUser || \"\",\n                      invalid: rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 27\n                    }, this), rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_nmUser\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: \"Upload File\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"idFileUpload\",\n                      name: \"max_L_file\",\n                      type: \"file\",\n                      accept: \"image/*\",\n                      onChange: e => rangeValidation.setFieldValue(\"max_L_file\", e.target.files[0]),\n                      invalid: rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? true : false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 27\n                    }, this), rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n                      type: \"invalid\",\n                      children: rangeValidation.errors.max_L_file\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 29\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    className: \"mb-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        disabled: disableButton,\n                        type: \"submit\",\n                        color: \"primary\",\n                        className: \"ms-1\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n                      style: {\n                        display: visibleSpinner ? \"block\" : \"none\",\n                        marginTop: '-35px'\n                      },\n                      className: \"ms-4\",\n                      color: \"danger\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TestingPage;\nexport default TestingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestingPage\");","map":{"version":3,"sources":["D:/korindo_proj/appfe/src/pages/TestingPage/TestingPage.js"],"names":["React","useState","useEffect","useCallback","MetaTags","BootstrapTable","paginationFactory","Breadcrumbs","Row","Col","Card","CardBody","FormGroup","Button","Label","Input","Container","FormFeedback","Form","Spinner","getData","onGetData","getDataImage","onGetDataImage","resetDonwload","SweetAlert","useSelector","useDispatch","TestingPage","e","preventDefault","rangeValidation","handleSubmit","custom_div1","position","top","right","setcustom_div1","handleChange","handleBlur","values","max_L_poc","touched","errors","max_L_kdUser","max_L_nmUser","setFieldValue","target","files","max_L_file","disableButton","display","visibleSpinner","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect , useCallback } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";  \r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\nimport '../../config';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    FormGroup,\r\n    Button,\r\n    Label,\r\n    Input,\r\n    Container,\r\n    FormFeedback,\r\n    Form,\r\n    Spinner,\r\n  } from \"reactstrap\";\r\n  \r\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"\r\n\r\n//SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport './TestingPage.css'\r\n\r\nconst TestingPage = () => {\r\n    // const [getTodos, setTodos] = useState([\r\n    //     { id: 1, title: 'Eat'},\r\n    //     { id: 2, title: 'Sleep'},\r\n    //     { id: 3, title: 'Code'}\r\n    // ])\r\n\r\n    // console.log(getTodos)\r\n\r\n    // const eventCreateTodo = (todo) => {\r\n    //     setTodos(getTodos.concat(todo))\r\n    //     console.log(getTodos)\r\n    // }\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"page-content\">\r\n            <MetaTags>\r\n              <title>\r\n              Korindo App\r\n              </title>\r\n            </MetaTags>\r\n            <Container fluid={true}>\r\n              <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Entry data marking & upload foto\" />\r\n              \r\n              <Row>\r\n                <Col lg={6}>\r\n                  <Card>\r\n                    <CardBody>\r\n                      {/* <CardTitle>Validation type</CardTitle>\r\n                      <CardSubtitle className=\"mb-3\">\r\n                        Parsley is a availity reactstrap validation. It helps you\r\n                        provide your users with feedback on their form submission\r\n                        before sending it to your server.\r\n                      </CardSubtitle> */}\r\n    \r\n                      <Form\r\n                        onSubmit={(e) => {\r\n                          e.preventDefault();\r\n                          rangeValidation.handleSubmit();\r\n                          return false;\r\n                        }}>\r\n                        <div className=\"mb-2\">\r\n                              {custom_div1 ? (\r\n                              <SweetAlert\r\n                                title=\"Success Entry Data\"\r\n                                timeout={2000}\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  top: \"0px\",\r\n                                  right: \"0px\",\r\n                                }}\r\n                                showCloseButton={false}\r\n                                showConfirm={false}\r\n                                success\r\n                                onConfirm={() => {\r\n                                  setcustom_div1(false)\r\n                                }}\r\n                              ></SweetAlert>\r\n                            ) : null}\r\n                          <Label>POC AHM</Label>\r\n                          <Input\r\n                            name=\"max_L_poc\"\r\n                            type=\"text\"\r\n                            disabled\r\n                            onChange={rangeValidation.handleChange}\r\n                            onBlur={rangeValidation.handleBlur}\r\n                            value={rangeValidation.values.max_L_poc || \"\"}\r\n                            invalid={\r\n                              rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? true : false\r\n                            }\r\n                          />\r\n                           {rangeValidation.touched.max_L_poc && rangeValidation.errors.max_L_poc ? (\r\n                            <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_poc}</FormFeedback>\r\n                          ) : null}\r\n                        </div>\r\n    \r\n                        <div className=\"mb-3\">\r\n                          <Label>Kode User</Label>\r\n                          <Input\r\n                            name=\"max_L_kdUser\"\r\n                            placeholder=\"Max 3 chars\"\r\n                            type=\"text\"\r\n                            onChange={rangeValidation.handleChange}\r\n                            onBlur={rangeValidation.handleBlur}\r\n                            value={rangeValidation.values.max_L_kdUser || \"\"}\r\n                            invalid={\r\n                              rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? true : false\r\n                            }\r\n                          />\r\n                          {rangeValidation.touched.max_L_kdUser && rangeValidation.errors.max_L_kdUser ? (\r\n                            <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_kdUser}</FormFeedback>\r\n                          ) : null}\r\n                        </div>\r\n    \r\n                        <div className=\"mb-3\">\r\n                          <Label>Nama User</Label>\r\n                          <Input\r\n                            name=\"max_L_nmUser\"\r\n                            placeholder=\"Max 5 chars\"\r\n                            type=\"text\"\r\n                            onChange={rangeValidation.handleChange}\r\n                            onBlur={rangeValidation.handleBlur}\r\n                            value={rangeValidation.values.max_L_nmUser || \"\"}\r\n                            invalid={\r\n                              rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? true : false\r\n                            }\r\n                          />\r\n                          {rangeValidation.touched.max_L_nmUser && rangeValidation.errors.max_L_nmUser ? (\r\n                            <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_nmUser}</FormFeedback>\r\n                          ) : null}\r\n                        </div>\r\n    \r\n                        <div className=\"mb-3\">\r\n                          <Label>Upload File</Label>\r\n                          <Input\r\n                            id=\"idFileUpload\"\r\n                            name=\"max_L_file\"\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={ ( e ) => rangeValidation.setFieldValue( \"max_L_file\", e.target.files[0] ) } \r\n                            invalid={\r\n                              rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? true : false\r\n                            }\r\n                          />\r\n                          {rangeValidation.touched.max_L_file && rangeValidation.errors.max_L_file ? (\r\n                            <FormFeedback type=\"invalid\">{rangeValidation.errors.max_L_file}</FormFeedback>\r\n                          ) : null}\r\n                        </div>\r\n    \r\n                        <FormGroup className=\"mb-0\">\r\n                          <div>\r\n                            <Button disabled={disableButton} type=\"submit\" color=\"primary\" className=\"ms-1\">\r\n                              Submit\r\n                            </Button>\r\n                          </div>\r\n                          <Spinner style={{ display: visibleSpinner ? \"block\" : \"none\", marginTop : '-35px'}} className=\"ms-4\" color=\"danger\" />\r\n                        </FormGroup>\r\n                      </Form>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n    \r\n                \r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TestingPage"]},"metadata":{},"sourceType":"module"}