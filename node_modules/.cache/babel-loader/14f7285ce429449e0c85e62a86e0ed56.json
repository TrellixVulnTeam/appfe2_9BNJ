{"ast":null,"code":"import { API_SUCCESS, API_FAIL, GET_CHARTS_DATA } from \"./actionTypes\";\nconst INIT_STATE = {\n  chartsData: []\n};\n\nconst Dashboard = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case API_SUCCESS:\n      switch (action.payload.actionType) {\n        case GET_CHARTS_DATA:\n          return { ...state,\n            chartsData: action.payload.data\n          };\n\n        default:\n          return state;\n      }\n\n    case API_FAIL:\n      switch (action.payload.actionType) {\n        case GET_CHARTS_DATA:\n          return { ...state,\n            chartsDataError: action.payload.error\n          };\n\n        default:\n          return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/React_Code/Skote_React_v3.3.1/Admin-Hooks-Staterkit/src/store/dashboard/reducer.js"],"names":["API_SUCCESS","API_FAIL","GET_CHARTS_DATA","INIT_STATE","chartsData","Dashboard","state","action","type","payload","actionType","data","chartsDataError","error"],"mappings":"AAAA,SACIA,WADJ,EAEIC,QAFJ,EAGIC,eAHJ,QAIO,eAJP;AAMA,MAAMC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE;AADG,CAAnB;;AAIA,MAAMC,SAAS,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBH,UAAuB;AAAA,MAAXI,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAL;AACI,cAAQO,MAAM,CAACE,OAAP,CAAeC,UAAvB;AACI,aAAKR,eAAL;AACI,iBAAO,EACH,GAAGI,KADA;AAEHF,YAAAA,UAAU,EAAEG,MAAM,CAACE,OAAP,CAAeE;AAFxB,WAAP;;AAIJ;AACI,iBAAOL,KAAP;AAPR;;AASJ,SAAKL,QAAL;AACI,cAAQM,MAAM,CAACE,OAAP,CAAeC,UAAvB;AACI,aAAKR,eAAL;AACI,iBAAO,EACH,GAAGI,KADA;AAEHM,YAAAA,eAAe,EAAEL,MAAM,CAACE,OAAP,CAAeI;AAF7B,WAAP;;AAMJ;AACI,iBAAOP,KAAP;AATR;;AAWJ;AACI,aAAOA,KAAP;AAxBR;AA0BH,CA3BD;;KAAMD,S;AA8BN,eAAeA,SAAf","sourcesContent":["import {\n    API_SUCCESS,\n    API_FAIL,\n    GET_CHARTS_DATA\n} from \"./actionTypes\";\n\nconst INIT_STATE = {\n    chartsData: []\n};\n\nconst Dashboard = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case API_SUCCESS:\n            switch (action.payload.actionType) {\n                case GET_CHARTS_DATA:\n                    return {\n                        ...state,\n                        chartsData: action.payload.data\n                    };\n                default:\n                    return state;\n            }\n        case API_FAIL:\n            switch (action.payload.actionType) {\n                case GET_CHARTS_DATA:\n                    return {\n                        ...state,\n                        chartsDataError: action.payload.error\n                    };\n\n\n                default:\n                    return state;\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}