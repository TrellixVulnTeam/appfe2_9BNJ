{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_ENTRY_DATA } from \"./actionTypes\";\nimport { getEntryDataSuccess, getEntryDataFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getEntryData } from \"helpers/backend_helper\";\n\nfunction* fetchEntryData() {\n  try {\n    const response = yield call(getEntryData); //console.log(response);\n\n    yield put(getEntryDataSuccess(response));\n  } catch (error) {\n    console.log(\"Error Saga\");\n    yield put(getEntryDataFail(error));\n  }\n}\n\nfunction* entryDataSaga() {\n  yield takeEvery(GET_ENTRY_DATA, fetchEntryData);\n}\n\nexport default entryDataSaga;","map":{"version":3,"sources":["D:/React_Code/korindo_proj/appfe/src/store/entrydata/saga.js"],"names":["call","put","takeEvery","GET_ENTRY_DATA","getEntryDataSuccess","getEntryDataFail","getEntryData","fetchEntryData","response","error","console","log","entryDataSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,WAAtD,C,CAEA;;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,UAAUC,cAAV,GAA2B;AACzB,MAAI;AAEF,UAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACM,YAAD,CAA3B,CAFE,CAGF;;AACA,UAAML,GAAG,CAACG,mBAAmB,CAACI,QAAD,CAApB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAMV,GAAG,CAACI,gBAAgB,CAACI,KAAD,CAAjB,CAAT;AACD;AACF;;AAED,UAAUG,aAAV,GAA0B;AAExB,QAAMV,SAAS,CAACC,cAAD,EAAiBI,cAAjB,CAAf;AACD;;AAED,eAAeK,aAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\r\n\r\n// Crypto Redux States\r\nimport { GET_ENTRY_DATA } from \"./actionTypes\"\r\nimport { getEntryDataSuccess, getEntryDataFail } from \"./actions\"\r\n\r\n//Include Both Helper File with needed methods\r\nimport { getEntryData } from \"helpers/backend_helper\"\r\n\r\nfunction* fetchEntryData() {\r\n  try {\r\n    \r\n    const response = yield call(getEntryData)\r\n    //console.log(response);\r\n    yield put(getEntryDataSuccess(response))\r\n  } catch (error) {\r\n    console.log(\"Error Saga\");\r\n    yield put(getEntryDataFail(error))\r\n  }\r\n}\r\n\r\nfunction* entryDataSaga() {\r\n    \r\n  yield takeEvery(GET_ENTRY_DATA, fetchEntryData)\r\n}\r\n\r\nexport default entryDataSaga\r\n"]},"metadata":{},"sourceType":"module"}