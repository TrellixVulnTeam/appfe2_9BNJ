{"ast":null,"code":"var _jsxFileName = \"D:\\\\korindo_proj\\\\appfe\\\\src\\\\pages\\\\TestingPage\\\\TestingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport './TestingPage.css'; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport '../../config';\nimport { Row, Col, Card, CardBody, FormGroup, Button, Label, Input, Container, FormFeedback, Form, Spinner, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"; // Formik validation\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\"; //SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { PhotoshopPicker } from \"react-color\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestingPage = () => {\n  _s();\n\n  const [custom_div1, setcustom_div1] = useState(false);\n  const [disableButton, setDisableButton] = useState(false);\n  const [visibleSpinner, setVisibleSpinner] = useState(false);\n  const rangeValidation = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      max_L_kdUser: '',\n      max_L_nmUser: '',\n      max_L_poc: 'POC AHM',\n      max_L_file: ''\n    },\n    validationSchema: Yup.object().shape({\n      max_L_kdUser: Yup.string().max(3, \"Must be exactly 3 chars\").required(\"Max 3 chars\"),\n      max_L_nmUser: Yup.string().max(5, \"Must be exactly 5 chars\").required(\"Max 5 chars\"),\n      max_L_file: Yup.string().required(\"File is Required\")\n    }),\n    onSubmit: values => {\n      console.log(\"Proses Submite\");\n      setDisableButton(true);\n      setVisibleSpinner(true);\n      var bodyFormData = new FormData();\n      bodyFormData.append('file', values.max_L_file);\n      bodyFormData.append('poc', values.max_L_poc);\n      bodyFormData.append('userId', values.max_L_kdUser);\n      bodyFormData.append('userNm', values.max_L_nmUser);\n      axios({\n        method: \"post\",\n        url: \"http://localhost:9002/app/\" + \"app001/upload\",\n        data: bodyFormData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        //handle success\n        if (response.data.message = 1) {\n          setcustom_div1(true);\n          rangeValidation.setValues({\n            \"max_L_kdUser\": \"\",\n            \"max_L_nmUser\": \"\",\n            max_L_poc: 'POC AHM'\n          });\n          document.getElementById(\"idFileUpload\").value = \"\";\n        }\n\n        setDisableButton(false);\n        setVisibleSpinner(false);\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n        setDisableButton(false);\n        setVisibleSpinner(false);\n        alert(\"Error Request Data\");\n      });\n    }\n  });\n  const [isSending, setIsSending] = useState(false);\n  const sendRequest = useCallback(async () => {\n    setReq({\n      page: 1,\n      limit: 10,\n      offset: 0,\n      sort: \"id\",\n      order: \"asc\",\n      search: {}\n    }); //dispatch(onGetData(req));\n    //}, [entrydata]) // update the callback if the state changes\n  }, []);\n  const entrydata = useSelector(state => {\n    return state.GetData.resp;\n  });\n  const [req, setReq] = useState({\n    page: 1,\n    limit: 10,\n    offset: 0,\n    sort: \"id\",\n    order: \"asc\",\n    search: {}\n  });\n\n  const handleTableChange = (type, _ref) => {\n    let {\n      page,\n      sortField,\n      sortOrder,\n      sizePerPage\n    } = _ref;\n\n    if (type === \"sort\") {\n      setReq({\n        page: 1,\n        limit: sizePerPage,\n        offset: 0,\n        sort: sortField,\n        order: sortOrder,\n        search: {}\n      });\n    }\n\n    if (type === \"pagination\") {\n      setReq({\n        page: page,\n        limit: sizePerPage,\n        offset: (page - 1) * sizePerPage,\n        sort: sortField,\n        order: sortOrder,\n        search: {}\n      });\n    }\n  };\n\n  const columnFormatter = (cell, row, rowIndex, formatExtraData) => {\n    if (row && row.fileNm) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: () => {\n          var indexed_array = {\n            \"file_name\": row.fileNm,\n            \"file_location\": row.fileLoc\n          };\n          getImage(indexed_array);\n        },\n        children: row.fileNm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this);\n    } else {\n      return row.fileNm;\n    }\n  };\n\n  const columnFormatterOriginal = (cell, row, rowIndex, formatExtraData) => {\n    if (row && row.fileNmOld) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: () => {\n          var indexed_array = {\n            \"file_name\": row.fileNmOld,\n            \"file_location\": row.fileLoc\n          };\n          getImage(indexed_array);\n        },\n        children: row.fileNmOld\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this);\n    } else {\n      return row.fileNmOld;\n    }\n  };\n\n  const columns = [{\n    dataField: \"id\",\n    text: \"ID\",\n    sort: true\n  }, {\n    dataField: \"poc\",\n    text: \"POC\",\n    sort: true\n  }, {\n    dataField: \"userId\",\n    text: \"User ID\",\n    sort: true\n  }, {\n    dataField: \"userNm\",\n    text: \"User Name\",\n    sort: true\n  }, {\n    dataField: \"dateipt\",\n    text: \"Tanggal Entry\",\n    sort: true\n  }, {\n    dataField: \"fileNm\",\n    text: \"File Edit\",\n    sort: true,\n    formatter: columnFormatter\n  }, {\n    dataField: \"fileNmOld\",\n    text: \"File Original\",\n    sort: true,\n    formatter: columnFormatterOriginal\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Korindo App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: \"Forms\",\n          breadcrumbItem: \"Testing Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/donwload\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            className: \"btn btn-primary col-sm-1\",\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"btn btn-primary col-sm-1 delete-button\",\n          onClick: () => {\n            if (window.confirm('Are you sure want to delete?')) this.onCancel(item);\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  children: \"Validation type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                  className: \"mb-3\",\n                  children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server. Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server. Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server. Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server. Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server. Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                    keyField: \"id\",\n                    remote: {\n                      filter: true,\n                      pagination: true,\n                      sort: true,\n                      cellEdit: true\n                    },\n                    data: entrydata.data,\n                    columns: columns,\n                    pagination: paginationFactory({\n                      page: req.page,\n                      sizePerPage: req.limit,\n                      sizePerPageList: [5, 10, 20],\n                      totalSize: entrydata.total,\n                      showTotal: true\n                    }),\n                    onTableChange: handleTableChange,\n                    striped: true,\n                    hover: true,\n                    condensed: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TestingPage, \"ZtZVMU0BJ6s0D2X1YUbHel/2KY0=\", false, function () {\n  return [useFormik, useSelector];\n});\n\n_c = TestingPage;\nexport default TestingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestingPage\");","map":{"version":3,"sources":["D:/korindo_proj/appfe/src/pages/TestingPage/TestingPage.js"],"names":["React","useState","useEffect","useCallback","MetaTags","BootstrapTable","paginationFactory","Breadcrumbs","Row","Col","Card","CardBody","FormGroup","Button","Label","Input","Container","FormFeedback","Form","Spinner","CardTitle","CardSubtitle","getData","onGetData","getDataImage","onGetDataImage","resetDonwload","Yup","useFormik","SweetAlert","useSelector","useDispatch","PhotoshopPicker","Link","TestingPage","custom_div1","setcustom_div1","disableButton","setDisableButton","visibleSpinner","setVisibleSpinner","rangeValidation","enableReinitialize","initialValues","max_L_kdUser","max_L_nmUser","max_L_poc","max_L_file","validationSchema","object","shape","string","max","required","onSubmit","values","console","log","bodyFormData","FormData","append","axios","method","url","data","headers","then","response","message","setValues","document","getElementById","value","catch","alert","isSending","setIsSending","sendRequest","setReq","page","limit","offset","sort","order","search","entrydata","state","GetData","resp","req","handleTableChange","type","sortField","sortOrder","sizePerPage","columnFormatter","cell","row","rowIndex","formatExtraData","fileNm","indexed_array","fileLoc","getImage","columnFormatterOriginal","fileNmOld","columns","dataField","text","formatter","window","confirm","onCancel","item","filter","pagination","cellEdit","sizePerPageList","totalSize","total","showTotal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAO,mBAAP,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAO,cAAP;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,MANF,EAOEC,KAPF,EAQEC,KARF,EASEC,SATF,EAUEC,YAVF,EAWEC,IAXF,EAYEC,OAZF,EAaEC,SAbF,EAcEC,YAdF,QAeO,YAfP;AAiBA,SAASC,OAAO,IAAIC,SAApB,EAA+BC,YAAY,IAAIC,cAA/C,EAA+DC,aAA/D,QAAoF,kCAApF,C,CAEA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,4BAAvB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoC,aAAD,EAAgBC,gBAAhB,IAAoCrC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACsC,cAAD,EAAiBC,iBAAjB,IAAsCvC,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMwC,eAAe,GAAGb,SAAS,CAAC;AAChCc,IAAAA,kBAAkB,EAAE,IADY;AAGhCC,IAAAA,aAAa,EAAE;AACbC,MAAAA,YAAY,EAAE,EADD;AAEbC,MAAAA,YAAY,EAAE,EAFD;AAGbC,MAAAA,SAAS,EAAE,SAHE;AAIbC,MAAAA,UAAU,EAAE;AAJC,KAHiB;AAShCC,IAAAA,gBAAgB,EAAErB,GAAG,CAACsB,MAAJ,GAAaC,KAAb,CAAmB;AACnCN,MAAAA,YAAY,EAAEjB,GAAG,CAACwB,MAAJ,GACXC,GADW,CACP,CADO,EACJ,yBADI,EAEXC,QAFW,CAEF,aAFE,CADqB;AAInCR,MAAAA,YAAY,EAAElB,GAAG,CAACwB,MAAJ,GACXC,GADW,CACP,CADO,EACJ,yBADI,EAEXC,QAFW,CAEF,aAFE,CAJqB;AAOnCN,MAAAA,UAAU,EAAEpB,GAAG,CAACwB,MAAJ,GACTE,QADS,CACA,kBADA;AAPuB,KAAnB,CATc;AAqBhCC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAnB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,UAAIkB,YAAY,GAAG,IAAIC,QAAJ,EAAnB;AACAD,MAAAA,YAAY,CAACE,MAAb,CAAoB,MAApB,EAA4BL,MAAM,CAACR,UAAnC;AACAW,MAAAA,YAAY,CAACE,MAAb,CAAoB,KAApB,EAA2BL,MAAM,CAACT,SAAlC;AACAY,MAAAA,YAAY,CAACE,MAAb,CAAoB,QAApB,EAA8BL,MAAM,CAACX,YAArC;AACAc,MAAAA,YAAY,CAACE,MAAb,CAAoB,QAApB,EAA8BL,MAAM,CAACV,YAArC;AACAgB,MAAAA,KAAK,CAAC;AACJC,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,GAAG,EAAE,+BAA+B,eAFhC;AAGJC,QAAAA,IAAI,EAAEN,YAHF;AAIJO,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAJL,OAAD,CAAL,CAMGC,IANH,CAMQ,UAAUC,QAAV,EAAoB;AACxB;AACA,YAAIA,QAAQ,CAACH,IAAT,CAAcI,OAAd,GAAwB,CAA5B,EAA+B;AAC7BhC,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAK,UAAAA,eAAe,CAAC4B,SAAhB,CAA0B;AAAE,4BAAgB,EAAlB;AAAsB,4BAAgB,EAAtC;AAA0CvB,YAAAA,SAAS,EAAE;AAArD,WAA1B;AACAwB,UAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC,GAAgD,EAAhD;AACD;;AACDlC,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAfH,EAgBGiC,KAhBH,CAgBS,UAAUN,QAAV,EAAoB;AACzB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACA7B,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAkC,QAAAA,KAAK,CAAC,oBAAD,CAAL;AAED,OAvBH;AAwBD;AAtD+B,GAAD,CAAjC;AAyDA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B3E,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM4E,WAAW,GAAG1E,WAAW,CAAC,YAAY;AAC1C2E,IAAAA,MAAM,CAAC;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,MAAM,EAAE,CAA9B;AAAiCC,MAAAA,IAAI,EAAE,IAAvC;AAA6CC,MAAAA,KAAK,EAAE,KAApD;AAA2DC,MAAAA,MAAM,EAAE;AAAnE,KAAD,CAAN,CAD0C,CAE1C;AACA;AACD,GAJ8B,EAI5B,EAJ4B,CAA/B;AAKA,QAAMC,SAAS,GAAGvD,WAAW,CAACwD,KAAK,IAAI;AACrC,WAAOA,KAAK,CAACC,OAAN,CAAcC,IAArB;AACD,GAF4B,CAA7B;AAGA,QAAM,CAACC,GAAD,EAAMX,MAAN,IAAgB7E,QAAQ,CAAC;AAAE8E,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,KAAK,EAAE,EAAlB;AAAsBC,IAAAA,MAAM,EAAE,CAA9B;AAAiCC,IAAAA,IAAI,EAAE,IAAvC;AAA6CC,IAAAA,KAAK,EAAE,KAApD;AAA2DC,IAAAA,MAAM,EAAE;AAAnE,GAAD,CAA9B;;AACA,QAAMM,iBAAiB,GAAG,CAACC,IAAD,WAAuD;AAAA,QAAhD;AAAEZ,MAAAA,IAAF;AAAQa,MAAAA,SAAR;AAAmBC,MAAAA,SAAnB;AAA8BC,MAAAA;AAA9B,KAAgD;;AAC/E,QAAIH,IAAI,KAAK,MAAb,EAAqB;AACnBb,MAAAA,MAAM,CAAC;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,KAAK,EAAEc,WAAlB;AAA+Bb,QAAAA,MAAM,EAAE,CAAvC;AAA0CC,QAAAA,IAAI,EAAEU,SAAhD;AAA2DT,QAAAA,KAAK,EAAEU,SAAlE;AAA6ET,QAAAA,MAAM,EAAE;AAArF,OAAD,CAAN;AACD;;AACD,QAAIO,IAAI,KAAK,YAAb,EAA2B;AACzBb,MAAAA,MAAM,CAAC;AAAEC,QAAAA,IAAI,EAAEA,IAAR;AAAcC,QAAAA,KAAK,EAAEc,WAArB;AAAkCb,QAAAA,MAAM,EAAG,CAACF,IAAI,GAAG,CAAR,IAAae,WAAxD;AAAsEZ,QAAAA,IAAI,EAAEU,SAA5E;AAAuFT,QAAAA,KAAK,EAAEU,SAA9F;AAAyGT,QAAAA,MAAM,EAAE;AAAjH,OAAD,CAAN;AACD;AACF,GAPD;;AASA,QAAMW,eAAe,GAAG,CAACC,IAAD,EAAOC,GAAP,EAAYC,QAAZ,EAAsBC,eAAtB,KAA0C;AAChE,QAAIF,GAAG,IAAIA,GAAG,CAACG,MAAf,EAAuB;AACrB,0BACE;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIC,aAAa,GAAG;AAClB,yBAAaJ,GAAG,CAACG,MADC;AAElB,6BAAiBH,GAAG,CAACK;AAFH,WAApB;AAIAC,UAAAA,QAAQ,CAACF,aAAD,CAAR;AAED,SATH;AAAA,kBAWGJ,GAAG,CAACG;AAXP;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAhBD,MAgBO;AACL,aAAOH,GAAG,CAACG,MAAX;AACD;AACF,GApBD;;AAsBA,QAAMI,uBAAuB,GAAG,CAACR,IAAD,EAAOC,GAAP,EAAYC,QAAZ,EAAsBC,eAAtB,KAA0C;AACxE,QAAIF,GAAG,IAAIA,GAAG,CAACQ,SAAf,EAA0B;AACxB,0BACE;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIJ,aAAa,GAAG;AAClB,yBAAaJ,GAAG,CAACQ,SADC;AAElB,6BAAiBR,GAAG,CAACK;AAFH,WAApB;AAIAC,UAAAA,QAAQ,CAACF,aAAD,CAAR;AAED,SATH;AAAA,kBAWGJ,GAAG,CAACQ;AAXP;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAhBD,MAgBO;AACL,aAAOR,GAAG,CAACQ,SAAX;AACD;AACF,GApBD;;AAsBA,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,SAAS,EAAE,IADb;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGE1B,IAAAA,IAAI,EAAE;AAHR,GADc,EAMd;AACEyB,IAAAA,SAAS,EAAE,KADb;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGE1B,IAAAA,IAAI,EAAE;AAHR,GANc,EAWd;AACEyB,IAAAA,SAAS,EAAE,QADb;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGE1B,IAAAA,IAAI,EAAE;AAHR,GAXc,EAgBd;AACEyB,IAAAA,SAAS,EAAE,QADb;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGE1B,IAAAA,IAAI,EAAE;AAHR,GAhBc,EAqBd;AACEyB,IAAAA,SAAS,EAAE,SADb;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGE1B,IAAAA,IAAI,EAAE;AAHR,GArBc,EA0Bd;AACEyB,IAAAA,SAAS,EAAE,QADb;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGE1B,IAAAA,IAAI,EAAE,IAHR;AAIE2B,IAAAA,SAAS,EAAEd;AAJb,GA1Bc,EAgCd;AACEY,IAAAA,SAAS,EAAE,WADb;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGE1B,IAAAA,IAAI,EAAE,IAHR;AAIE2B,IAAAA,SAAS,EAAEL;AAJb,GAhCc,CAAhB;AAwCA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,QAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,IAAlB;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAC,OAAnB;AAA2B,UAAA,cAAc,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,WAAT;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,SAAS,EAAC,0BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,SAAS,EAAC,wCAAlC;AACE,UAAA,OAAO,EAAE,MAAM;AAAE,gBAAIM,MAAM,CAACC,OAAP,CAAe,8BAAf,CAAJ,EAAoD,KAAKC,QAAL,CAAcC,IAAd;AAAqB,WAD5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAA;AAAA;AAAA;AAAA,gBAZF,eAcE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAA,mCACE,QAAC,IAAD;AAAA,qCACE,QAAC,QAAD;AAAA,wCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eACwC;AAAA;AAAA;AAAA;AAAA,wBADxC,eAEE,QAAC,YAAD;AAAc,kBAAA,SAAS,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAgBiB;AAAA;AAAA;AAAA;AAAA,wBAhBjB,eAkBE;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,yCACE,QAAC,cAAD;AACE,oBAAA,QAAQ,EAAC,IADX;AAEE,oBAAA,MAAM,EAAE;AAAEC,sBAAAA,MAAM,EAAE,IAAV;AAAgBC,sBAAAA,UAAU,EAAE,IAA5B;AAAkCjC,sBAAAA,IAAI,EAAE,IAAxC;AAA8CkC,sBAAAA,QAAQ,EAAE;AAAxD,qBAFV;AAGE,oBAAA,IAAI,EAAE/B,SAAS,CAACrB,IAHlB;AAIE,oBAAA,OAAO,EAAE0C,OAJX;AAKE,oBAAA,UAAU,EAAEpG,iBAAiB,CAAC;AAC5ByE,sBAAAA,IAAI,EAAEU,GAAG,CAACV,IADkB;AAE5Be,sBAAAA,WAAW,EAAEL,GAAG,CAACT,KAFW;AAG5BqC,sBAAAA,eAAe,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAHW;AAI5BC,sBAAAA,SAAS,EAAEjC,SAAS,CAACkC,KAJO;AAK5BC,sBAAAA,SAAS,EAAE;AALiB,qBAAD,CAL/B;AAYE,oBAAA,aAAa,EAAE9B,iBAZjB;AAaE,oBAAA,OAAO,MAbT;AAcE,oBAAA,KAAK,MAdP;AAeE,oBAAA,SAAS;AAfX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwED,CA9OD;;GAAMxD,W;UAMoBN,S,EA+DNE,W;;;KArEdI,W;AAgPN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport './TestingPage.css';\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\nimport '../../config';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  FormFeedback,\r\n  Form,\r\n  Spinner,\r\n  CardTitle,\r\n  CardSubtitle\r\n} from \"reactstrap\";\r\n\r\nimport { getData as onGetData, getDataImage as onGetDataImage, resetDonwload } from \"../../store/donwloaddata/actions\"\r\n\r\n// Formik validation\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\n//SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport { PhotoshopPicker } from \"react-color\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TestingPage = () => {\r\n\r\n  const [custom_div1, setcustom_div1] = useState(false)\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const [visibleSpinner, setVisibleSpinner] = useState(false);\r\n\r\n  const rangeValidation = useFormik({\r\n    enableReinitialize: true,\r\n\r\n    initialValues: {\r\n      max_L_kdUser: '',\r\n      max_L_nmUser: '',\r\n      max_L_poc: 'POC AHM',\r\n      max_L_file: '',\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      max_L_kdUser: Yup.string()\r\n        .max(3, \"Must be exactly 3 chars\")\r\n        .required(\"Max 3 chars\"),\r\n      max_L_nmUser: Yup.string()\r\n        .max(5, \"Must be exactly 5 chars\")\r\n        .required(\"Max 5 chars\"),\r\n      max_L_file: Yup.string()\r\n        .required(\"File is Required\"),\r\n    }),\r\n\r\n\r\n    onSubmit: (values) => {\r\n      console.log(\"Proses Submite\");\r\n      setDisableButton(true);\r\n      setVisibleSpinner(true);\r\n      var bodyFormData = new FormData();\r\n      bodyFormData.append('file', values.max_L_file);\r\n      bodyFormData.append('poc', values.max_L_poc);\r\n      bodyFormData.append('userId', values.max_L_kdUser);\r\n      bodyFormData.append('userNm', values.max_L_nmUser);\r\n      axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:9002/app/\" + \"app001/upload\",\r\n        data: bodyFormData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n        .then(function (response) {\r\n          //handle success\r\n          if (response.data.message = 1) {\r\n            setcustom_div1(true);\r\n            rangeValidation.setValues({ \"max_L_kdUser\": \"\", \"max_L_nmUser\": \"\", max_L_poc: 'POC AHM' });\r\n            document.getElementById(\"idFileUpload\").value = \"\";\r\n          }\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n        })\r\n        .catch(function (response) {\r\n          //handle error\r\n          console.log(response);\r\n          setDisableButton(false);\r\n          setVisibleSpinner(false);\r\n          alert(\"Error Request Data\");\r\n\r\n        });\r\n    }\r\n  });\r\n\r\n  const [isSending, setIsSending] = useState(false)\r\n  const sendRequest = useCallback(async () => {\r\n    setReq({ page: 1, limit: 10, offset: 0, sort: \"id\", order: \"asc\", search: {} });\r\n    //dispatch(onGetData(req));\r\n    //}, [entrydata]) // update the callback if the state changes\r\n  }, [])\r\n  const entrydata = useSelector(state => {\r\n    return state.GetData.resp;\r\n  });\r\n  const [req, setReq] = useState({ page: 1, limit: 10, offset: 0, sort: \"id\", order: \"asc\", search: {} });\r\n  const handleTableChange = (type, { page, sortField, sortOrder, sizePerPage }) => {\r\n    if (type === \"sort\") {\r\n      setReq({ page: 1, limit: sizePerPage, offset: 0, sort: sortField, order: sortOrder, search: {} });\r\n    }\r\n    if (type === \"pagination\") {\r\n      setReq({ page: page, limit: sizePerPage, offset: ((page - 1) * sizePerPage), sort: sortField, order: sortOrder, search: {} });\r\n    }\r\n  };\r\n\r\n  const columnFormatter = (cell, row, rowIndex, formatExtraData) => {\r\n    if (row && row.fileNm) {\r\n      return (\r\n        <a\r\n          href=\"#\"\r\n          onClick={() => {\r\n            var indexed_array = {\r\n              \"file_name\": row.fileNm,\r\n              \"file_location\": row.fileLoc\r\n            };\r\n            getImage(indexed_array);\r\n\r\n          }}\r\n        >\r\n          {row.fileNm}\r\n        </a>\r\n      );\r\n    } else {\r\n      return row.fileNm;\r\n    }\r\n  };\r\n\r\n  const columnFormatterOriginal = (cell, row, rowIndex, formatExtraData) => {\r\n    if (row && row.fileNmOld) {\r\n      return (\r\n        <a\r\n          href=\"#\"\r\n          onClick={() => {\r\n            var indexed_array = {\r\n              \"file_name\": row.fileNmOld,\r\n              \"file_location\": row.fileLoc\r\n            };\r\n            getImage(indexed_array)\r\n\r\n          }}\r\n        >\r\n          {row.fileNmOld}\r\n        </a>\r\n      );\r\n    } else {\r\n      return row.fileNmOld;\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"poc\",\r\n      text: \"POC\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"userId\",\r\n      text: \"User ID\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"userNm\",\r\n      text: \"User Name\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"dateipt\",\r\n      text: \"Tanggal Entry\",\r\n      sort: true\r\n    },\r\n    {\r\n      dataField: \"fileNm\",\r\n      text: \"File Edit\",\r\n      sort: true,\r\n      formatter: columnFormatter\r\n    },\r\n    {\r\n      dataField: \"fileNmOld\",\r\n      text: \"File Original\",\r\n      sort: true,\r\n      formatter: columnFormatterOriginal\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <MetaTags>\r\n          <title>\r\n            Korindo App\r\n          </title>\r\n        </MetaTags>\r\n        <Container fluid={true}>\r\n          <Breadcrumbs title=\"Forms\" breadcrumbItem=\"Testing Page\" />\r\n          <Link to=\"/donwload\">\r\n            <Button color=\"primary\" className=\"btn btn-primary col-sm-1\">\r\n              Refresh\r\n            </Button>\r\n          </Link>\r\n          <Button color=\"primary\" className=\"btn btn-primary col-sm-1 delete-button\"\r\n            onClick={() => { if (window.confirm('Are you sure want to delete?')) this.onCancel(item) }}>\r\n            Confirm\r\n          </Button>\r\n          <br />\r\n          <br />\r\n\r\n          <Row>\r\n            <Col lg={12}>\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>Validation type</CardTitle><br />\r\n                  <CardSubtitle className=\"mb-3\">\r\n                    Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server. Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server. Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server. Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server. Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server. Parsley is a availity reactstrap validation. It helps you\r\n                    provide your users with feedback on their form submission\r\n                    before sending it to your server.\r\n                  </CardSubtitle><br />\r\n\r\n                  <div className=\"table-responsive\">\r\n                    <BootstrapTable\r\n                      keyField=\"id\"\r\n                      remote={{ filter: true, pagination: true, sort: true, cellEdit: true }}\r\n                      data={entrydata.data}\r\n                      columns={columns}\r\n                      pagination={paginationFactory({\r\n                        page: req.page,\r\n                        sizePerPage: req.limit,\r\n                        sizePerPageList: [5, 10, 20],\r\n                        totalSize: entrydata.total,\r\n                        showTotal: true,\r\n                      })}\r\n                      onTableChange={handleTableChange}\r\n                      striped\r\n                      hover\r\n                      condensed\r\n                    />\r\n                  </div>\r\n\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TestingPage"]},"metadata":{},"sourceType":"module"}