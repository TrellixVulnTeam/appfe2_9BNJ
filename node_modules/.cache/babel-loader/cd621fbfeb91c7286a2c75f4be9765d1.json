{"ast":null,"code":"import axios from \"axios\";\nimport accessToken from \"./jwt-token-access/accessToken\"; //pass new generated access token here\n\nconst token = accessToken; //apply base url for axios\n\nconst API_URL = \"http://localhost:9002/app\";\nconst axiosApi = axios.create({\n  baseURL: API_URL\n});\naxiosApi.defaults.headers.common[\"Authorization\"] = token;\naxiosApi.defaults.headers.common[\"token\"] = localStorage.getItem('authUser').replace(/^\"(.*)\"$/, '$1');\naxiosApi.interceptors.response.use(response => response, error => Promise.reject(error));\nexport async function get(url, data) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return await axiosApi.get(url, data, { ...config\n  }).then(response => response.data);\n}\nexport async function getWithParam(url, data) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  console.log(data);\n  return await axiosApi.get(url + \"?\" + $.param(data), { ...config\n  }).then(response => response.data);\n}\nexport async function post(url, data) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return axiosApi.post(url, { ...data\n  }, { ...config\n  }).then(response => response.data);\n}\nexport async function put(url, data) {\n  let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return axiosApi.put(url, { ...data\n  }, { ...config\n  }).then(response => response.data);\n}\nexport async function del(url) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return await axiosApi.delete(url, { ...config\n  }).then(response => response.data);\n}","map":{"version":3,"sources":["D:/React_Code/korindo_proj/appfe/src/helpers/api_helper.js"],"names":["axios","accessToken","token","API_URL","axiosApi","create","baseURL","defaults","headers","common","localStorage","getItem","replace","interceptors","response","use","error","Promise","reject","get","url","data","config","then","getWithParam","console","log","$","param","post","put","del","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAEA;;AACA,MAAMC,KAAK,GAAGD,WAAd,C,CAEA;;AACA,MAAME,OAAO,GAAG,2BAAhB;AAEA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEH;AADmB,CAAb,CAAjB;AAIAC,QAAQ,CAACG,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiC,eAAjC,IAAoDP,KAApD;AACAE,QAAQ,CAACG,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiC,OAAjC,IAA4CC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,OAAjC,CAAyC,UAAzC,EAAqD,IAArD,CAA5C;AAEAR,QAAQ,CAACS,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACED,QAAQ,IAAIA,QADd,EAEEE,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAFX;AAKA,OAAO,eAAeG,GAAf,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA0C;AAAA,MAAZC,MAAY,uEAAJ,EAAI;AAC/C,SAAO,MAAMlB,QAAQ,CAACe,GAAT,CAAaC,GAAb,EAAkBC,IAAlB,EAAwB,EAAE,GAAGC;AAAL,GAAxB,EAAuCC,IAAvC,CAA4CT,QAAQ,IAAIA,QAAQ,CAACO,IAAjE,CAAb;AACD;AAED,OAAO,eAAeG,YAAf,CAA4BJ,GAA5B,EAAiCC,IAAjC,EAAmD;AAAA,MAAZC,MAAY,uEAAJ,EAAI;AACxDG,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,SAAO,MAAMjB,QAAQ,CAACe,GAAT,CAAaC,GAAG,GAAC,GAAJ,GAAQO,CAAC,CAACC,KAAF,CAAQP,IAAR,CAArB,EAAoC,EAAE,GAAGC;AAAL,GAApC,EAAmDC,IAAnD,CAAwDT,QAAQ,IAAIA,QAAQ,CAACO,IAA7E,CAAb;AACD;AAED,OAAO,eAAeQ,IAAf,CAAoBT,GAApB,EAAyBC,IAAzB,EAA4C;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACjD,SAAOlB,QAAQ,CACZyB,IADI,CACCT,GADD,EACM,EAAE,GAAGC;AAAL,GADN,EACmB,EAAE,GAAGC;AAAL,GADnB,EAEJC,IAFI,CAECT,QAAQ,IAAIA,QAAQ,CAACO,IAFtB,CAAP;AAGD;AAED,OAAO,eAAeS,GAAf,CAAmBV,GAAnB,EAAwBC,IAAxB,EAA2C;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAChD,SAAOlB,QAAQ,CACZ0B,GADI,CACAV,GADA,EACK,EAAE,GAAGC;AAAL,GADL,EACkB,EAAE,GAAGC;AAAL,GADlB,EAEJC,IAFI,CAECT,QAAQ,IAAIA,QAAQ,CAACO,IAFtB,CAAP;AAGD;AAED,OAAO,eAAeU,GAAf,CAAmBX,GAAnB,EAAqC;AAAA,MAAbE,MAAa,uEAAJ,EAAI;AAC1C,SAAO,MAAMlB,QAAQ,CAClB4B,MADU,CACHZ,GADG,EACE,EAAE,GAAGE;AAAL,GADF,EAEVC,IAFU,CAELT,QAAQ,IAAIA,QAAQ,CAACO,IAFhB,CAAb;AAGD","sourcesContent":["import axios from \"axios\";\nimport accessToken from \"./jwt-token-access/accessToken\";\n\n//pass new generated access token here\nconst token = accessToken;\n\n//apply base url for axios\nconst API_URL = \"http://localhost:9002/app\";\n\nconst axiosApi = axios.create({\n  baseURL: API_URL,\n});\n\naxiosApi.defaults.headers.common[\"Authorization\"] = token;\naxiosApi.defaults.headers.common[\"token\"] = localStorage.getItem('authUser').replace(/^\"(.*)\"$/, '$1');\n\naxiosApi.interceptors.response.use(\n  response => response,\n  error => Promise.reject(error)\n);\n\nexport async function get(url, data, config ={}) {\n  return await axiosApi.get(url, data, { ...config }).then(response => response.data);\n}\n\nexport async function getWithParam(url, data, config ={}) {\n  console.log(data);\n  return await axiosApi.get(url+\"?\"+$.param(data), { ...config }).then(response => response.data);\n}\n\nexport async function post(url, data, config = {}) {\n  return axiosApi\n    .post(url, { ...data }, { ...config })\n    .then(response => response.data);\n}\n\nexport async function put(url, data, config = {}) {\n  return axiosApi\n    .put(url, { ...data }, { ...config })\n    .then(response => response.data);\n}\n\nexport async function del(url, config = {}) {\n  return await axiosApi\n    .delete(url, { ...config })\n    .then(response => response.data);\n}\n"]},"metadata":{},"sourceType":"module"}