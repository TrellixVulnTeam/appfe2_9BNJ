{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_DATA, GET_DATA_IMAGE } from \"./actionTypes\";\nimport { getDataSuccess, getDataFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getData } from \"helpers/backend_helper\";\n\nfunction* fetchGetData() {\n  try {\n    const response = yield call(getData);\n\n    if (response.status == 1) {\n      yield put(getDataSuccess(response));\n    } else {\n      yield put(getDataFail(\"Error Get Data\"));\n    }\n  } catch (error) {\n    yield put(getDataFail(error));\n  }\n}\n\nfunction* fetchGetDataImage(_ref) {\n  let {\n    payload: {\n      req\n    }\n  } = _ref;\n\n  try {\n    const response = yield call(getData);\n\n    if (response.status == 1) {\n      yield put(getDataSuccess(response));\n    } else {\n      yield put(getDataFail(\"Error Get Data\"));\n    }\n  } catch (error) {\n    yield put(getDataFail(error));\n  }\n}\n\nfunction* getDataSaga() {\n  yield takeEvery(GET_DATA, fetchGetData);\n  yield takeEvery(GET_DATA_IMAGE, fetchGetDataImage);\n}\n\nexport default getDataSaga;","map":{"version":3,"sources":["D:/React_Code/korindo_proj/appfe/src/store/donwloaddata/saga.js"],"names":["call","put","takeEvery","GET_DATA","GET_DATA_IMAGE","getDataSuccess","getDataFail","getData","fetchGetData","response","status","error","fetchGetDataImage","payload","req","getDataSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,eAAzC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C,C,CAEA;;AACA,SAASC,OAAT,QAAwB,wBAAxB;;AAEA,UAAUC,YAAV,GAAyB;AACvB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACO,OAAD,CAA3B;;AACA,QAAGE,QAAQ,CAACC,MAAT,IAAmB,CAAtB,EAAwB;AACtB,YAAMT,GAAG,CAACI,cAAc,CAACI,QAAD,CAAf,CAAT;AACD,KAFD,MAEK;AACH,YAAMR,GAAG,CAACK,WAAW,CAAC,gBAAD,CAAZ,CAAT;AACD;AACF,GAPD,CAOE,OAAOK,KAAP,EAAc;AACd,UAAMV,GAAG,CAACK,WAAW,CAACK,KAAD,CAAZ,CAAT;AACD;AACF;;AAED,UAAUC,iBAAV,OAAiD;AAAA,MAArB;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAAX,GAAqB;;AAC/C,MAAI;AACF,UAAML,QAAQ,GAAG,MAAMT,IAAI,CAACO,OAAD,CAA3B;;AACA,QAAGE,QAAQ,CAACC,MAAT,IAAmB,CAAtB,EAAwB;AACtB,YAAMT,GAAG,CAACI,cAAc,CAACI,QAAD,CAAf,CAAT;AACD,KAFD,MAEK;AACH,YAAMR,GAAG,CAACK,WAAW,CAAC,gBAAD,CAAZ,CAAT;AACD;AACF,GAPD,CAOE,OAAOK,KAAP,EAAc;AACd,UAAMV,GAAG,CAACK,WAAW,CAACK,KAAD,CAAZ,CAAT;AACD;AACF;;AAGD,UAAUI,WAAV,GAAwB;AAEtB,QAAMb,SAAS,CAACC,QAAD,EAAWK,YAAX,CAAf;AACA,QAAMN,SAAS,CAACE,cAAD,EAAiBQ,iBAAjB,CAAf;AACD;;AAED,eAAeG,WAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\r\n\r\n// Crypto Redux States\r\nimport { GET_DATA, GET_DATA_IMAGE } from \"./actionTypes\"\r\nimport { getDataSuccess, getDataFail } from \"./actions\"\r\n\r\n//Include Both Helper File with needed methods\r\nimport { getData } from \"helpers/backend_helper\"\r\n\r\nfunction* fetchGetData() {\r\n  try {\r\n    const response = yield call(getData)\r\n    if(response.status == 1){\r\n      yield put(getDataSuccess(response))\r\n    }else{\r\n      yield put(getDataFail(\"Error Get Data\"))\r\n    }\r\n  } catch (error) {\r\n    yield put(getDataFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchGetDataImage({ payload: { req} }) {\r\n  try {\r\n    const response = yield call(getData)\r\n    if(response.status == 1){\r\n      yield put(getDataSuccess(response))\r\n    }else{\r\n      yield put(getDataFail(\"Error Get Data\"))\r\n    }\r\n  } catch (error) {\r\n    yield put(getDataFail(error))\r\n  }\r\n}\r\n\r\n\r\nfunction* getDataSaga() {\r\n    \r\n  yield takeEvery(GET_DATA, fetchGetData)\r\n  yield takeEvery(GET_DATA_IMAGE, fetchGetDataImage)\r\n}\r\n\r\nexport default getDataSaga\r\n"]},"metadata":{},"sourceType":"module"}